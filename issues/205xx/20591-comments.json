[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20892 (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n* #17355 (gui: grey out used address in address book by za-kk)\n* #15129 (rpc: Added ability to remove watch only addresses by benthecarman)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-07T18:34:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740100466",
      "id" : 740100466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDEwMDQ2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-19T16:56:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740100466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If this PR is intended to address issue #20181, can you add \"Closes #20181\" or \"Fixes #20181\" to the PR description instead of the PR title?",
      "created_at" : "2020-12-07T21:16:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740184798",
      "id" : 740184798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE4NDc5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:17:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740184798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is it right this way ?",
      "created_at" : "2020-12-07T21:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740187113",
      "id" : 740187113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE4NzExMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740187113",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, thank you.",
      "created_at" : "2020-12-07T21:33:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740193240",
      "id" : 740193240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE5MzI0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:33:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740193240",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-12-07T21:45:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740198726",
      "id" : 740198726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE5ODcyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:45:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740198726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537871606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "commit 4997a2ea5f2 \"wallet: fix ComputeTimeSmart algorithm to use blocktime during old block rescanning fixes #20181\"\r\n\r\n- does the `ComputeTimeSmart` doxygen documentation need to be updated?\r\n\r\n- missing space\r\n```suggestion\r\n            if (!rescanning_old_block) {\r\n```\r\n\r\n- maybe start with the truthy case first, e.g. `if (rescanning_old_block) {`...\r\n\r\n- can drop the \"fixes #20181\" from the commit message, same for the test commit message (remove \"refs #20181\"); having \"Fixes #20181\" in the PR description is enough\r\n\r\n- suggestion to reviewers: review this commit diff with `-w`",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:11:38Z",
      "diff_hunk" : "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537871606",
      "id" : 537871606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3MTYwNg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 3688,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537877209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: 2 spaces before each comment per PEP8\r\n```suggestion\r\n        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\r\n```",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:21:29Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537877209",
      "id" : 537877209,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3NzIwOQ==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537883472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The test does indeed fail without the change and passes with it.\r\n```\r\n2020-12-07T22:04:28.394000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"test/functional/wallet_transactiontime_rescan.py\", line 152, in run_test\r\n    assert_equal(tx['time'], 1525971225)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 50, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(1527699225 == 1525971225)\r\n```\r\nBut the test commit needs to be after the commit that makes the change, not before, otherwise the test commit fails. The tests and CI should pass for each commit. Also, you can squash the linter fixup commit into the test commit. (Note that you can run the Python test linter on the command line with `test/lint/lint-python.sh`).",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:32:10Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)\n+        assert_equal(minernode.getblockcount(), 500)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days)\n+        usernode.setmocktime(mocktime + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 600)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 700)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 800)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':\n+                assert_equal(tx['blocktime'], 1526835225)\n+                assert_equal(tx['time'], 1526835225)\n+            elif tx['address'] == 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5':\n+                assert_equal(tx['blocktime'], 1527699225)\n+                assert_equal(tx['time'], 1527699225)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a', rescan=False)\n+\n+        # check user has 0 balance and no transaction\n+        assert_equal(restorewo_wallet.getbalance(), 0)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 0)\n+\n+        # proceed to rescan, first with an incomplete one, then with a full rescan\n+        self.log.info('Rescan last history part')\n+        restorewo_wallet.rescanblockchain(650)\n+        self.log.info('Rescan all history')\n+        restorewo_wallet.rescanblockchain()\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance after restoration')\n+        assert_equal(restorewo_wallet.getbalance(), 16)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time after restoration')\n+        for tx in restorewo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537883472",
      "id" : 537883472,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4MzQ3Mg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 154,
      "original_position" : 152,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use current time, grep in the functional tests for `int(time.time()`",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:37:49Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886648",
      "id" : 537886648,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NjY0OA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The addresses and pubkeys don't need to be hardcoded. Have a look in other tests how this can be done (grep for \"importpubkey\", \"deterministic\", \"pub_key\", \"priv_key\", etc.)",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:38:30Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886972",
      "id" : 537886972,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4Njk3Mg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 56,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537892800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would probaby be good to update the Doxygen documentation here.",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:49:30Z",
      "diff_hunk" : "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537892800",
      "id" : 537892800,
      "line" : 678,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5MjgwMA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 678,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 9,
      "pull_request_review_id" : 546604258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537894706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit\r\n```suggestion\r\n                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, /* rescanning_old_block */ true);\r\n```\r\n",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-07T22:53:21Z",
      "diff_hunk" : "@@ -1788,7 +1788,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, true /* rescanning_old_block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537894706",
      "id" : 537894706,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDcwNg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 1791,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 546606289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for all the feedback. I'll correct everything and ask question if needed.",
      "created_at" : "2020-12-08T07:43:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740444897",
      "id" : 740444897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDQ0NDg5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T07:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740444897",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Thanks!",
      "created_at" : "2020-12-08T19:38:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740917494",
      "id" : 740917494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDkxNzQ5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T19:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740917494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/60179867?v=4",
         "events_url" : "https://api.github.com/users/decryp2kanon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/decryp2kanon/followers",
         "following_url" : "https://api.github.com/users/decryp2kanon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/decryp2kanon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/decryp2kanon",
         "id" : 60179867,
         "login" : "decryp2kanon",
         "node_id" : "MDQ6VXNlcjYwMTc5ODY3",
         "organizations_url" : "https://api.github.com/users/decryp2kanon/orgs",
         "received_events_url" : "https://api.github.com/users/decryp2kanon/received_events",
         "repos_url" : "https://api.github.com/users/decryp2kanon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/decryp2kanon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/decryp2kanon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/decryp2kanon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538866929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538866929"
         }
      },
      "author_association" : "NONE",
      "body" : "done locally, not pushed yet",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-08T22:49:43Z",
      "diff_hunk" : "@@ -1788,7 +1788,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, true /* rescanning_old_block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538866929",
      "id" : 538866929,
      "in_reply_to_id" : 537894706,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjkyOQ==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 1791,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 547698260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538866929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867184"
         }
      },
      "author_association" : "NONE",
      "body" : "done locally, not pushed yet",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-08T22:50:11Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867184",
      "id" : 538867184,
      "in_reply_to_id" : 537877209,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NzE4NA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 547698522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867510"
         }
      },
      "author_association" : "NONE",
      "body" : "done locally, not pushed yet",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-08T22:50:50Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)\n+        assert_equal(minernode.getblockcount(), 500)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days)\n+        usernode.setmocktime(mocktime + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 600)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 700)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 800)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':\n+                assert_equal(tx['blocktime'], 1526835225)\n+                assert_equal(tx['time'], 1526835225)\n+            elif tx['address'] == 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5':\n+                assert_equal(tx['blocktime'], 1527699225)\n+                assert_equal(tx['time'], 1527699225)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a', rescan=False)\n+\n+        # check user has 0 balance and no transaction\n+        assert_equal(restorewo_wallet.getbalance(), 0)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 0)\n+\n+        # proceed to rescan, first with an incomplete one, then with a full rescan\n+        self.log.info('Rescan last history part')\n+        restorewo_wallet.rescanblockchain(650)\n+        self.log.info('Rescan all history')\n+        restorewo_wallet.rescanblockchain()\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance after restoration')\n+        assert_equal(restorewo_wallet.getbalance(), 16)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time after restoration')\n+        for tx in restorewo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538867510",
      "id" : 538867510,
      "in_reply_to_id" : 537883472,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NzUxMA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 154,
      "original_position" : 152,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 547698899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538867510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538868050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538868050"
         }
      },
      "author_association" : "NONE",
      "body" : "done locally, except doxygen documentation update, not pushed yet",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-08T22:51:47Z",
      "diff_hunk" : "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r538868050",
      "id" : 538868050,
      "in_reply_to_id" : 537871606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2ODA1MA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 3688,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 547699432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538868050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK - code looks good (haven't looked at the tests). Code is relatively simple, basically just an `if` to bypass the smart-time calculation.",
      "created_at" : "2020-12-09T07:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-741599788",
      "id" : 741599788,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTU5OTc4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-09T07:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741599788",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539239571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539239571"
         }
      },
      "author_association" : "NONE",
      "body" : "done locally, not pushed yet",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-09T11:46:57Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539239571",
      "id" : 539239571,
      "in_reply_to_id" : 537886648,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzOTU3MQ==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 548102396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539239571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539249567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539249567"
         }
      },
      "author_association" : "NONE",
      "body" : "I've a question about this one. My first local version didn't use any hardcoded key and I use getaddressinfo and the pubkey field. I found my test a little bit hard to read, because I needed 4 wallets to realise it (and one, just to get a couple of address/pubkey). I find that by hardcoding address and pubkey, I could remove one wallet, and let the reader of the test be more focus on the 3 really important wallets.\r\n\r\nCan you confirm me that I need to create a wallet to avoid hardcoded pubkey ? Or is there something I'm missing here.\r\n\r\nIf another wallet is required, I'll try to isolate it better from the 3 others than in my first attempt.",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-09T12:03:02Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539249567",
      "id" : 539249567,
      "in_reply_to_id" : 537886972,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0OTU2Nw==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 56,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 548114015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539249567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539280278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539280278"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm not sure about how to update the doxygen documentation, because I don't understand the way the logic is explained. The documentation split sending and receiving transaction treatment explanation, but there's no distinction in ComputeTimeSmart in the code (or I don't see it).\r\n\r\nThat's why I'm not sure between which lines I should insert the new beahaviour description.\r\nMaybe something like \"- If receiving a transaction during a rescanning process, assign all its (not already known) transactions' timestamps to the block time.\" between the second and the third one :\r\n\r\n```\r\n/**\r\n * Compute smart timestamp for a transaction being added to the wallet.\r\n *\r\n * Logic:\r\n * - If sending a transaction, assign its timestamp to the current time.\r\n * - If receiving a transaction outside a block, assign its timestamp to the\r\n *   current time.\r\n * - If receiving a transaction during a rescanning process, assign all its\r\n *   (not already known) transactions' timestamps to the block time.\r\n * - If receiving a block with a future timestamp, assign all its (not already\r\n *   known) transactions' timestamps to the current time.\r\n * - If receiving a block with a past timestamp, before the most recent known\r\n *   transaction (that we care about), assign all its (not already known)\r\n *   transactions' timestamps to the same timestamp as that most-recent-known\r\n *   transaction.\r\n * - If receiving a block with a past timestamp, but after the most recent known\r\n *   transaction, assign all its (not already known) transactions' timestamps to\r\n *   the block time.\r\n *\r\n * For more information see CWalletTx::nTimeSmart,\r\n * https://bitcointalk.org/?topic=54527, or\r\n * https://github.com/bitcoin/bitcoin/pull/1393.\r\n */\r\n```",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-09T12:51:12Z",
      "diff_hunk" : "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539280278",
      "id" : 539280278,
      "in_reply_to_id" : 537871606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MDI3OA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 3688,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 548150430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539280278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539332655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539332655"
         }
      },
      "author_association" : "NONE",
      "body" : "I need some feedback here too.\r\n\r\nI want to add this at the end of the existing comment : \r\n\"Should be called with rescanning_old_block set to true, if the transaction is not discovered in realtime, but during a rescan of old blocks.\" \r\n\r\n```\r\n /**\r\n     * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\r\n     * be set when the transaction was known to be included in a block.  When\r\n     * pIndex == nullptr, then wallet state is not updated in AddToWallet, but\r\n     * notifications happen and cached balances are marked dirty.\r\n     *\r\n     * If fUpdate is true, existing transactions will be updated.\r\n     * TODO: One exception to this is that the abandoned state is cleared under the\r\n     * assumption that any further notification of a transaction that was considered\r\n     * abandoned is an indication that it is not safe to be considered abandoned.\r\n     * Abandoned state should probably be more carefully tracked via different\r\n     * posInBlock signals or by checking mempool presence when necessary.\r\n     *\r\n     * Should be called with rescanning_old_block set to true, if the transaction is\r\n     * not discovered in realtime, but during a rescan of old blocks.\r\n     */\r\n```",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-09T14:05:06Z",
      "diff_hunk" : "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r539332655",
      "id" : 539332655,
      "in_reply_to_id" : 537892800,
      "line" : 678,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMjY1NQ==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 678,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 9,
      "pull_request_review_id" : 548214446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539332655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've push a new version with the rework marked as resolved done.\r\nWhat is not done yet:\r\n- remove hardcoded pubkey in the functionnal test : wait for feedback on the way to do it to limit useless code.\r\n- update ComputeTimeSmart doxygen documentation : wait for feedback on my proposal in comment.\r\n- update AddToWalletIfInvolvingMe doxygen documentation : wait for feedback on my proposal in comment.",
      "created_at" : "2020-12-09T16:32:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-741889830",
      "id" : 741889830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTg4OTgzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-09T16:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741889830",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540576404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540576404"
         }
      },
      "author_association" : "NONE",
      "body" : "I've find a way with getnewaddress() on the node. The test is rewrited with importaddress() instead of importpubkey(). It's simplier and demonstrated the same thing.\r\nDone locally, not pushed yet.",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-10T23:27:59Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540576404",
      "id" : 540576404,
      "in_reply_to_id" : 537886972,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjQwNA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 56,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : null,
      "pull_request_review_id" : 549693002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540576404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746812"
         }
      },
      "author_association" : "NONE",
      "body" : "I've push the proposition in a dedicated commit and will revise it if needed.",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-11T07:37:40Z",
      "diff_hunk" : "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746812",
      "id" : 540746812,
      "in_reply_to_id" : 537871606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0NjgxMg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 3688,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 549859962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746882"
         }
      },
      "author_association" : "NONE",
      "body" : "I've push the proposition in a dedicated commit and will revise it if needed.",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2020-12-11T07:37:50Z",
      "diff_hunk" : "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r540746882",
      "id" : 540746882,
      "in_reply_to_id" : 537892800,
      "line" : 678,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0Njg4Mg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 678,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 9,
      "pull_request_review_id" : 549860078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T23:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540746882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've push the full rework and add documentation update proposal in a separated commit.",
      "created_at" : "2020-12-11T07:39:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743029963",
      "id" : 743029963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MzAyOTk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-11T07:39:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743029963",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Weak NACK. Seems like a hacky \"fix\" for what is pretty much a user error...?",
      "created_at" : "2020-12-11T15:53:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743274105",
      "id" : 743274105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MzI3NDEwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-11T15:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743274105",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for your feedback.\r\n\r\nI'll try to give a broader view of the problem and of my fix, from my perspective.\r\n\r\nFirst of all, the current behaviour seems to be present for years, and no recent modification has changed this.\r\nIt's rare that users encounter this one and there's clearly noÂ emergency here.\r\n\r\nThe issue that triggered my investigation is this one :Â https://github.com/bitcoin/bitcoin/issues/20181\r\nBut by looking at open issue, I've now found two more open issue on Github that should be related to the same behaviour :\r\nhttps://github.com/bitcoin/bitcoin/issues/11703\r\nhttps://github.com/bitcoin/bitcoin/issues/6662\r\nAnd one pull request abandoned due to the lack of activity :\r\nhttps://github.com/bitcoin/bitcoin/pull/12024\r\nThis pull request proposed in 2018 byÂ @achow101 is more radical than the way I fix it, because it remove the SmartTime computation,Â but this raises an interestingÂ point for me on which I would like to come back later.\r\n\r\nThe thing is that when someone encounters this behavior from Bitcoin Core wallet, it clearly has no clue on what's going on, because it's hard to reproduce it and the date seems so random and nonsense, that there's no easy way to request for similar problems on search engines. And when you try to investigate it, nothing points you in the right direction.\r\n\r\nIf it's considered as an error from the RPC API user to proceed first with a recent scan, and after with an older one, it must be documented in the RPC API Reference.\r\nAnd maybe it's the right solution for this problem : simply inform that rescanblockchain function should be manipulated with some rules in mind.\r\nIn that case, the documentation should precise that a miss handling of this method is fatal. Because if the API user proceeds to an improper rescan, there's no way to correct transaction datation later : the only way is to destroy the wallet.\r\n\r\nHere why I think it might be a good ideaÂ to fix it : the API RPC users are mainly teams working around Bitcoin Core to enrich the ecosystem with more tools.\r\nThis part of the ecosystem is far more experimental (and less strict)Â than Bitcoin Core itself, and that's a good thing from my point of the view.\r\nThe specter desktop team has exploited the RPCÂ rescanblockchainÂ function to enable faster wallet import :\r\n- If it's a segwit wallet, the rescanning process startsÂ automatically on the first segwit enable block.\r\n- During the backup process, the first transaction blockheight is saved, to enable auto optimized reimport of this wallet later.\r\n- If the user is a power user and knows the height of his first transaction, it could restart manually from here to restore faster his wallet.\r\n\r\nI found all these ideas interesting for a faster and better user experience and guess what, they had a bug that broke my wallet, and pushed me to look at the problem.\r\nThis type of experimentation has not his place in the Bitcoin Core wallet, but is, for me, a net positive for the ecosystem.\r\nWe could imagine others optimisationÂ for an external wallet project to improve the user experience with this RPCÂ rescanblockchain function, for exampleÂ : start with a fast utxo rescanning process with UI blocked, then unblock the interface and rescan only the current year, then the previous one, then the previous one,...\r\nFrom an user perspective, I think that the oldest transactions are way less important thanÂ the more recents one.\r\nIt's just some random thought, but my core point is that RPC API functions are not going to be used the way the internal wallet uses them, and it's a good thing because it enablesÂ leveraged creativity outside the Bitcoin Core project and high quality and reference code for the Bitcoin Core wallet.\r\nThat's why I think it might be good to enable a non restricted usage of RPC rescanblockchain function between the two points (start_height and stop_height), even if it's not used by the wallet internally.\r\n\r\nNow let's go back to the fix itself.\r\nI've tried to limit the impact on my fix on the existing code, but I'll try to give a broader view of the way I've thoughtÂ about it to feed the conversation.\r\nAs I've said in the description of my PR : In the context of rescanning old blocks, the only time value that has a meaning is the blocktime.\r\nThat's why my first reaction was to look for a way not to call the ComputeTimeSmart function during a rescanning of old blocks, because you don't want to launch a complex time evaluation function in the first place when you already know that the blocktime is the only time that means something.\r\nI then discovered that the ComputeTimeSmart call was a very deep call in the hierarchy of functions and that a lot of wallet logic was shared in the middle part whatever the context.\r\nThe separation of the code between block rescan processing and realtime processing would have beenÂ an incorrect approach, due to this middleware logic.\r\nThe main wrong thing here, to me, is to compute the time of a specific context (realtime processing) in a shared function called deep in the hierarchy.\r\nA good way to fix it, is to push this responsibility outside the hierarchy (at least near the surface of the hierarchy).\r\nBut this way will require a bigger refactoring for the wallet.cpp file. If someone finds this interesting, I could try to write a proof of concept in a branch outside a pull request. But this patch would have a far bigger impact on the code.\r\n\r\nFinally this PR approach was a way of keeping the patch simple while preserving functionality.\r\nBut If this seems too hacky, there's 3 other ways :\r\n- Keep it as it's today, don't touch the wallet code, but update the RPC API Reference to explain restrictions onÂ rescanblockchain function.\r\n- Make a bigger refactoring to push ComputeTimeSmart responsibilityÂ in the right place in the functions hierarchy.\r\n- Fix it likeÂ achow101 in his previous PR, by removing the part of ComputeTimeSmart that is only valid in aÂ realtimeÂ context. This way, ComputeTimeSmart has not to be moved because it's not context dependent, but you've restricted a part of the current functionality. It's clearly an interesting approach too, from my point of view because it removes the root cause of the misplacement of the function in the hierarchyÂ call.\r\n\r\nHappy to pursue the discussion here.",
      "created_at" : "2020-12-12T14:27:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-743763913",
      "id" : 743763913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mzc2MzkxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-12T14:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743763913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Seems like a hacky \"fix\" for what is pretty much a user error...?\r\n\r\nHow is rescanning blockchain a user error?",
      "created_at" : "2020-12-14T02:22:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744125525",
      "id" : 744125525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDEyNTUyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T02:22:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744125525",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Manually scanning out of order, to be specific, is a user error because the wallet is assumed to always be scanned up to its sync-point.",
      "created_at" : "2020-12-14T04:16:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744154291",
      "id" : 744154291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDE1NDI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T04:16:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744154291",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr I'd agree the wallet is written with that assumption, but I also don't see a downside to changing the behavior when the wallet can know it's dealing with an unusual situation. I haven't dug into the details, but I suspect this change makes things match expectations in strictly more situations.",
      "created_at" : "2020-12-14T04:37:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-744160157",
      "id" : 744160157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDE2MDE1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T04:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744160157",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-01-19T18:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-763042693",
      "id" : 763042693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MzA0MjY5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-19T18:39:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/763042693",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/60179867?v=4",
         "events_url" : "https://api.github.com/users/decryp2kanon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/decryp2kanon/followers",
         "following_url" : "https://api.github.com/users/decryp2kanon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/decryp2kanon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/decryp2kanon",
         "id" : 60179867,
         "login" : "decryp2kanon",
         "node_id" : "MDQ6VXNlcjYwMTc5ODY3",
         "organizations_url" : "https://api.github.com/users/decryp2kanon/orgs",
         "received_events_url" : "https://api.github.com/users/decryp2kanon/received_events",
         "repos_url" : "https://api.github.com/users/decryp2kanon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/decryp2kanon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/decryp2kanon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/decryp2kanon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Another thing I think could be done to improve this is to avoid adding these transactions to `wtxOrdered` when `rescanning_old_block` is true:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ea96e17e1f2c2b0a949366260906ef02e560a425/src/wallet/wallet.cpp#L873-L874\r\n\r\nIf we want to exclude these transactions from smart time calculation, better to fully exclude instead of half-excluding them. Maybe there is a way to adjust the smart time calculations to include them, but that would require more thought and might not be worth the effort.\r\n\r\nAnother code cleanup that would be nice to see is moving `nTimeReceived`, `nOrderPos`, and `wtxOrdered` updates inside the `ComputeTimeSmart` function instead of doing them before. `ComputeTimeSmart` is only called one place and the current way time calculation is split up outside and inside this function is probably unnecessarily confusing. \r\n\r\nIMO, previous ACK is still ok and switching from block time to max block time, excluding these transactions from wtxOrdered, and making `ComputeTimeSmart` more self-contained are all optional improvements that could be followed up later.\r\n\r\n\r\n",
      "created_at" : "2021-02-03T16:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-772628017",
      "id" : 772628017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MjYyODAxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-03T16:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772628017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-05T15:17:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-774095424",
      "id" : 774095424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NDA5NTQyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-05T15:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774095424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There appear to be spurious \"Agent is not responding!\" test failures https://cirrus-ci.com/task/5367295805489152, probably could be fixed by a new push or bulk restart",
      "created_at" : "2021-02-17T21:29:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-780866774",
      "id" : 780866774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDg2Njc3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T21:29:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780866774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r578203567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578203567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think 101 blocks would suffice here (the test functions the same but would run faster), unless I'm missing something.\r\n \r\n<details><summary>working example</summary><p>\r\n\r\n```diff\r\n         # generate some btc to create transactions and check blockcount\r\n-        minernode.generatetoaddress(300, m1)\r\n-        assert_equal(minernode.getblockcount(), 500)\r\n+        initial_mine = 101\r\n+        minernode.generatetoaddress(initial_mine, m1)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 200)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -75,7 +76,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 600)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 300)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -88,7 +89,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 700)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 400)\r\n \r\n         # synchronize nodes and time\r\n         self.sync_all()\r\n@@ -101,7 +102,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # generate more blocks and check blockcount\r\n         minernode.generatetoaddress(100, m1)\r\n-        assert_equal(minernode.getblockcount(), 800)\r\n+        assert_equal(minernode.getblockcount(), initial_mine + 500)\r\n \r\n         # check user final balance and transaction count\r\n         self.log.info('Check user final balance')\r\n@@ -136,7 +137,7 @@ class TransactionTimeRescanTest(BitcoinTestFramework):\r\n \r\n         # proceed to rescan, first with an incomplete one, then with a full rescan\r\n         self.log.info('Rescan last history part')\r\n-        restorewo_wallet.rescanblockchain(650)\r\n+        restorewo_wallet.rescanblockchain(initial_mine + 350)\r\n         self.log.info('Rescan all history')\r\n         restorewo_wallet.rescanblockchain()\r\n```\r\n</p></details>\r\n",
      "commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "created_at" : "2021-02-18T08:01:12Z",
      "diff_hunk" : "@@ -0,0 +1,163 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0]  # node used to mine BTC and create transactions\n+        usernode = self.nodes[1]  # user node with correct time\n+        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        cur_time = int(time.time())\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(cur_time)\n+        usernode.setmocktime(cur_time)\n+        restorenode.setmocktime(cur_time)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 watch only addresses\n+        wo1 = usernode.getnewaddress()\n+        wo2 = usernode.getnewaddress()\n+        wo3 = usernode.getnewaddress()\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importaddress(wo1)\n+        wo_wallet.importaddress(wo2)\n+        wo_wallet.importaddress(wo3)\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r578203567",
      "id" : 578203567,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIwMzU2Nw==",
      "original_commit_id" : "0072fc36b2e4d1a3660c46dd4d8cd9e551c17917",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : 64,
      "pull_request_review_id" : 592936707,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T08:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578203567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks ryanofsky for your feedback and suggestions !\r\nI confirm that my latest push was just to rebase master and I was a bit perplex about CI test failing.\r\n\r\nI'll implement thoses two point :\r\n> Suggestions from #20591 (review) to use max block time instead of block time, and #20591 (review) to keep rescan transactions out of wtxOrdered still apply.\r\n\r\nI need a little time to fully understand the impact of your recommandation. I may have question about it later.\r\n\r\njonatack : I'll modify the functional test with your adjustment. You're not missing anything, my test just using a large number because I was to lazy to look at the minimal working number (If I remember correctly, I was not sure If I should use 100 or 101 to unlock miner coins and I increased the number).\r\n\r\n",
      "created_at" : "2021-02-19T17:41:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-782228291",
      "id" : 782228291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MjIyODI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-19T17:41:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782228291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   }
]
