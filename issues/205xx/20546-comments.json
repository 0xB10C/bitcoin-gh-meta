[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20391 (wallet: introduce setfeerate (an improved settxfee, in sat/vB) by jonatack)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-02T15:58:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737322770",
      "id" : 737322770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzMyMjc3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-19T20:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737322770",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "the error message and error code should be the same when an invalid BTC/kb amount is rejected",
      "created_at" : "2020-12-02T16:19:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737336814",
      "id" : 737336814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzMzNjgxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T16:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737336814",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK ",
      "created_at" : "2020-12-02T16:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737338817",
      "id" : 737338817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzMzODgxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T16:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737338817",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> the error message and error code should be the same when an invalid BTC/kb amount is rejected\r\n\r\nThe other \"too-low\" fee messages I am aware of are:\r\n\r\nAmount out of range\r\nFee rate (%s) is lower than the minimum fee rate setting\r\ntxfee cannot be less than min relay tx fee\r\ntxfee cannot be less than wallet min fee\r\nInvalid amount\r\nInvalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\r\nInvalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\r\nInvalid amount for -fallbackfee=<amount>: '%s'\r\nInvalid amount for -%s=<amount>: '%s\r\n",
      "created_at" : "2020-12-02T16:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737352141",
      "id" : 737352141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzM1MjE0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T20:41:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737352141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It would be confusing if 0.00000001 and 0.000000001 produced different error messages",
      "created_at" : "2020-12-02T16:45:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737354096",
      "id" : 737354096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzM1NDA5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T16:45:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737354096",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "fee_rate=0.000000001\r\n```\r\nerror code: -3\r\nerror message:\r\nInvalid amount\r\n```\r\n...which is not a great error message, as it indicates neither which argument is invalid, nor why. How about:\r\n\r\nfee_rate=0.00000001\r\n```\r\nerror code: -3\r\nerror message:\r\nInvalid amount for fee_rate (must be at least 0.001 sat/vB)\r\n```\r\n\r\nThis is close to these similar error messages:\r\n\r\nInvalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\r\nInvalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\r\nInvalid amount for -fallbackfee=<amount>: '%s'\r\nInvalid amount for -%s=<amount>: '%s",
      "created_at" : "2020-12-02T20:52:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-737488369",
      "id" : 737488369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzQ4ODM2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T00:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737488369",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just found a bug in RPC send. It only allows fee rates to be passed as a number, not as a string. Fixing with a commit here since it fits with the changes. Edit: fixed in #20573 (merged).",
      "created_at" : "2020-12-03T17:00:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-738139238",
      "id" : 738139238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODEzOTIzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-05T17:37:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738139238",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> ...which is not a great error message, as it indicates neither which argument is invalid, nor why.\r\n\r\nThen the error message should be fixed. But that is an issue that can be solve completely separate. It shouldn't be a reason to make the behaviour inconsistent.",
      "created_at" : "2020-12-03T17:38:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-738168517",
      "id" : 738168517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODE2ODUxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738168517",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > ...which is not a great error message, as it indicates neither which argument is invalid, nor why.\r\n> \r\n> Then the error message should be fixed. But that is an issue that can be solve completely separate. It shouldn't be a reason to make the behaviour inconsistent.\r\n\r\nDone. Fixing the rpc send bug and improving the AmountFromValue error messages in separate pulls.",
      "created_at" : "2020-12-04T12:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-738757772",
      "id" : 738757772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODc1Nzc3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T12:28:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738757772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536067105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536067105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Am testing CFeeRate errors separately from AmountFromValue errors, as a follow-up PR will improve the messages of both.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-04T12:33:05Z",
      "diff_hunk" : "@@ -252,9 +252,15 @@ def run_test(self):\n         assert_raises_rpc_error(-6, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n             self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0.99999999)\n \n-        self.log.info(\"Test sendmany raises if fee_rate of 0 or -1 is passed\")\n-        assert_raises_rpc_error(-6, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n-            self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0)\n+        self.log.info(\"Test sendmany raises RPC error when invalid fee rates are passed\")\n+        msg = \"Invalid amount\"\n+        # Test zero and values non-representable by CFeeRate\n+        for invalid_value in [\"0\", 0, 0.00000001, 0.0009, 0.00099999]:\n+            assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=invalid_value)\n+        # Test values rejected by ParseFixedPoint() called in AmountFromValue()\n+        for invalid_value in [\"\", 0.000000001, 1.111111111, 11111111111]:\n+            assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 1.0}, fee_rate=invalid_value)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536067105",
      "id" : 536067105,
      "line" : 279,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2NzEwNQ==",
      "original_commit_id" : "03b30e978a1379bde09b80ce38f70d317d974ec1",
      "original_line" : 279,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/wallet_basic.py",
      "position" : 26,
      "pull_request_review_id" : 544918906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536067105",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536699356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536699356"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b70a0e1b3bdb3aff4f3b41dc7a0bd6e52d67e6af:\r\n\r\nThis is C++ code internals referenced in the functional test comments. IMO that doesn't belong here since it's basically unmaintainable and I don't think we do this anywhere else. Unless there is a really strong reason I am not seeing, please remove it. IMO the test with the log message above is explanatory enough.\r\n\r\nSame for all the other places this occurs in this commit.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-05T11:33:23Z",
      "diff_hunk" : "@@ -765,8 +765,9 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n-            assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+            # Test values rejected by ParseFixedPoint() called in AmountFromValue()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536699356",
      "id" : 536699356,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY5OTM1Ng==",
      "original_commit_id" : "b70a0e1b3bdb3aff4f3b41dc7a0bd6e52d67e6af",
      "original_line" : 768,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 545580473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536699356",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The bug fix is that the response is consistent, though I agree it somewhat less user friendly. I have a follow-up that improves the error responses here and in AmountFromValue.",
      "created_at" : "2020-12-05T12:10:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739242928",
      "id" : 739242928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTI0MjkyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-05T12:10:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739242928",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536719700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536719700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do refer to the implementation sometimes, perhaps most often when defining constants. \n\nThis is to document why these values are tested separately for the same message. I have a follow-up to improve these messages in different ways, e.g. not just \"Invalid amount\" but also provide context to the user about which field and in some cases the valid range or values. Could remove the documentation in the follow-up if it's not useful, or provide more general info on what is being tested.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-05T12:16:29Z",
      "diff_hunk" : "@@ -765,8 +765,9 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n-            assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+            # Test values rejected by ParseFixedPoint() called in AmountFromValue()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r536719700",
      "id" : 536719700,
      "in_reply_to_id" : 536699356,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjcxOTcwMA==",
      "original_commit_id" : "b70a0e1b3bdb3aff4f3b41dc7a0bd6e52d67e6af",
      "original_line" : 768,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 545583045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536719700",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wonder if this check shouldn't be in AmountFromValue and apply to fundrawtransaction and walletcreatefundedpsbt as well.ï¿¼ï¿¼",
      "created_at" : "2020-12-05T13:27:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739251112",
      "id" : 739251112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTI1MTExMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-05T13:27:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739251112",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "E.g. zero is ok for those but between zero and 0.001 sat/vB is invalid.",
      "created_at" : "2020-12-05T13:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739251362",
      "id" : 739251362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTI1MTM2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-05T13:30:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739251362",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "the check should be in AmountFromValue. My issue is purely about parsing decimals, not about specific rpcs.\r\n\r\nTo clarify, I might be misunderstanding what you fix here, but approach NACK if this is a fix for the parsing issue I created.",
      "created_at" : "2020-12-05T13:49:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739253473",
      "id" : 739253473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTI1MzQ3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-06T18:30:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739253473",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pulled in the `CFeeRate::FromSatB` and `CFeeRate::FromBtcKb` named constructors from the setfeerate PR, added a `CFeeRate::IsZero()` class member helper, and used these to build a `FeeRateFromValueInSatB()` utility function. Added unit test coverage for each of these. This should handle the case of parsing decimals for fee rates constructed from sat/vB UniValue values.",
      "created_at" : "2020-12-06T19:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739554863",
      "id" : 739554863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTU1NDg2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-06T19:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739554863",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r537455026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537455026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note to self: update this line after #20573 is merged and `send` can take string fee rate values\r\n```suggestion\r\n        for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\r\n```",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-07T12:05:29Z",
      "diff_hunk" : "@@ -302,16 +302,31 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum and at zero.\n+        # Test setting explicit fee rate just below the minimum.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        msg = \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999, expect_error=(-4, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999, expect_error=(-4, msg))\n+\n+        self.log.info(\"Explicit fee rate raises RPC error when invalid fee rates are passed\")\n+        # Test fee_rate with zero values\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r537455026",
      "id" : 537455026,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NTAyNg==",
      "original_commit_id" : "7d6c6aaa646b2b589a91d40c38a58803d26cc9a8",
      "original_line" : 314,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 546085946,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537455026",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r537455711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537455711"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note to self: update this line as well after #20573 is merged\r\n```suggestion\r\n        for invalid_value in [\"\", 0.000000001, 1.111111111, 11111111111]:\r\n```",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-07T12:06:37Z",
      "diff_hunk" : "@@ -302,16 +302,31 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum and at zero.\n+        # Test setting explicit fee rate just below the minimum.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        msg = \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999, expect_error=(-4, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999, expect_error=(-4, msg))\n+\n+        self.log.info(\"Explicit fee rate raises RPC error when invalid fee rates are passed\")\n+        # Test fee_rate with zero values\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=zero_value, expect_error=(-4, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=zero_value, expect_error=(-4, msg))\n+        # Test fee_rate values non-representable by CFeeRate\n+        msg = \"Invalid amount\"\n+        for invalid_value in [0.00000001, 0.0009, 0.00099999]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n+        # Test fee_rate values rejected by ParseFixedPoint\n+        for invalid_value in [0.000000001, 1.111111111, 11111111111]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r537455711",
      "id" : 537455711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NTcxMQ==",
      "original_commit_id" : "7d6c6aaa646b2b589a91d40c38a58803d26cc9a8",
      "original_line" : 323,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 546086727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537455711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-07T13:03:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739905294",
      "id" : 739905294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTkwNTI5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T13:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739905294",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2020-12-07T14:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-739970803",
      "id" : 739970803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczOTk3MDgwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T14:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739970803",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-10T08:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-742361285",
      "id" : 742361285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjM2MTI4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T08:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742361285",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r540426017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540426017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "updated",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-10T19:08:55Z",
      "diff_hunk" : "@@ -302,16 +302,31 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum and at zero.\n+        # Test setting explicit fee rate just below the minimum.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        msg = \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999, expect_error=(-4, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999, expect_error=(-4, msg))\n+\n+        self.log.info(\"Explicit fee rate raises RPC error when invalid fee rates are passed\")\n+        # Test fee_rate with zero values\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r540426017",
      "id" : 540426017,
      "in_reply_to_id" : 537455026,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQyNjAxNw==",
      "original_commit_id" : "7d6c6aaa646b2b589a91d40c38a58803d26cc9a8",
      "original_line" : 314,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 549517140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540426017",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r540426078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540426078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "updated",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2020-12-10T19:09:04Z",
      "diff_hunk" : "@@ -302,16 +302,31 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum and at zero.\n+        # Test setting explicit fee rate just below the minimum.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        msg = \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999, expect_error=(-4, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999, expect_error=(-4, msg))\n+\n+        self.log.info(\"Explicit fee rate raises RPC error when invalid fee rates are passed\")\n+        # Test fee_rate with zero values\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=zero_value, expect_error=(-4, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=zero_value, expect_error=(-4, msg))\n+        # Test fee_rate values non-representable by CFeeRate\n+        msg = \"Invalid amount\"\n+        for invalid_value in [0.00000001, 0.0009, 0.00099999]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n+        # Test fee_rate values rejected by ParseFixedPoint\n+        for invalid_value in [0.000000001, 1.111111111, 11111111111]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r540426078",
      "id" : 540426078,
      "in_reply_to_id" : 537455711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQyNjA3OA==",
      "original_commit_id" : "7d6c6aaa646b2b589a91d40c38a58803d26cc9a8",
      "original_line" : 323,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 549517224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-17T10:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540426078",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated now that #20573 has been merged.\r\n",
      "created_at" : "2020-12-10T20:11:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-742768770",
      "id" : 742768770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mjc2ODc3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T11:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742768770",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The ZMQ data race that causes the CI failure in https://cirrus-ci.com/task/6709748533821440?command=ci#L4578 is unrelated.",
      "created_at" : "2020-12-11T00:06:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-742879118",
      "id" : 742879118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mjg3OTExOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-11T00:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742879118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I really like these changes that do a lot of good things in ~40 lines (not counting tests) and fix #20534, but seeing no enthusiasm here, closing.",
      "created_at" : "2021-01-03T16:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-753638965",
      "id" : 753638965,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzYzODk2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T16:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753638965",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Re-opening for review club to hopefully get some eyes here.\r\n",
      "created_at" : "2021-01-14T11:12:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-760129376",
      "id" : 760129376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDEyOTM3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T11:23:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760129376",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Suggest the following labels be added, please: `TX fees and policy`, `Refactoring`, `Review club`",
      "created_at" : "2021-01-15T12:30:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-760914983",
      "id" : 760914983,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDkxNDk4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-15T12:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760914983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @fanquake ",
      "created_at" : "2021-01-15T16:41:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-761050539",
      "id" : 761050539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MTA1MDUzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-15T16:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/761050539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560603365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560603365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "54dcf5ab2e25f6eacf8955ab18a0cd92ef165a4e: Is there anything special about `11111111111` that wont be caught by one of the existing `AmountFromValue` tests? Looks like it's just a big number. Same for `1e-9`, which is tested above.\r\n\r\nNot sure about the value of comments like `values rejected by ParseFixedPoint raise invalid amount`. What's useful about naming the function called internally by `AmountFromValue` and the runtime error? We don't actually check for `invalid amount`, just that something throws. None of these tests will fail with:\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 1a83b9222..0199fd539 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -81,7 +81,7 @@ CAmount AmountFromValue(const UniValue& value)\r\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Amount is not a number or string\");\r\n     CAmount amount;\r\n     if (!ParseFixedPoint(value.getValStr(), 8, &amount))\r\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");\r\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"just throw whatever!\");\r\n     if (!MoneyRange(amount))\r\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Amount out of range\");\r\n     return amount;\r\n```\r\nIn general these seem like notes that will likely just become outdated in regards to the code.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T01:02:31Z",
      "diff_hunk" : "@@ -214,6 +217,30 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e+11\")), UniValue); //overflow error\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e11\")), UniValue); //overflow error signless\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"93e+9\")), UniValue); //overflow error\n+\n+    // values rejected by ParseFixedPoint raise invalid amount\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"0.000000001\")), UniValue);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560603365",
      "id" : 560603365,
      "line" : 222,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYwMzM2NQ==",
      "original_commit_id" : "54dcf5ab2e25f6eacf8955ab18a0cd92ef165a4e",
      "original_line" : 222,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/test/rpc_tests.cpp",
      "position" : 26,
      "pull_request_review_id" : 571785019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T02:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560603365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560606792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560606792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In d2b40010fab5a1ef7f6d946da076d4de6b442e09: This is simple enough that you can combine e4a3bceef3d9483961c1f0a2f70b6a4e9a225acd and ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b into it. Otherwise we are starting to get very granular commits.\r\n\r\nIt's also inconsistent with other changes in this PR, as in 85e0fe3f783ebaabbf9b27e0b452ba8073905db5 you add the `FromSatB` & `FromBtcKb` constructors and refactor to use them at the same time.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T01:12:25Z",
      "diff_hunk" : "@@ -34,6 +34,7 @@ class CFeeRate\n public:\n     /** Fee rate of 0 satoshis per kB */\n     CFeeRate() : nSatoshisPerK(0) { }\n+    bool IsZero() const { return nSatoshisPerK == 0; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560606792",
      "id" : 560606792,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYwNjc5Mg==",
      "original_commit_id" : "d2b40010fab5a1ef7f6d946da076d4de6b442e09",
      "original_line" : 37,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/feerate.h",
      "position" : 4,
      "pull_request_review_id" : 571785019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T02:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560606792",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560613154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560613154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3df75585cc2595ff3d1065e6fdaa4e9df8716594:\r\n\r\n> [Am testing CFeeRate errors separately from AmountFromValue errors, as a follow-up PR will improve the messages of both.](https://github.com/bitcoin/bitcoin/pull/20546/commits/3df75585cc2595ff3d1065e6fdaa4e9df8716594#r536067105)\r\n\r\nI think it'd be better to add the additional tests when the different error messages are added. Otherwise at the moment we've got 24 additional \"tests\" which just pass values into wallet RPCs, and check that `invalid value` is thrown. Basically all following the same code path.\r\n\r\nSame point as in a different commit, I don't think details like `ParseFixedPoint()` belong in comments here.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T01:30:47Z",
      "diff_hunk" : "@@ -273,6 +273,9 @@ def run_test(self):\n         msg = \"Invalid amount\"\n         for invalid_value in [0.00000001, 0.00099999, \"0.00000001\", \"0.00099999\"]:\n             assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=invalid_value)\n+        # Test fee_rate values rejected by ParseFixedPoint",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560613154",
      "id" : 560613154,
      "line" : 277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYxMzE1NA==",
      "original_commit_id" : "3df75585cc2595ff3d1065e6fdaa4e9df8716594",
      "original_line" : 276,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_basic.py",
      "position" : 24,
      "pull_request_review_id" : 571785019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T02:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560613154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560616468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560616468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d7c2399f3e23ce54d27f8ef26077e58324b991d8: I must be misunderstanding this, otherwise it looks like it just does the same thing twice. i.e:\r\n```python\r\nnode.fundrawtransaction(fee_rate: 0.00000001) -> throw(\"Invalid amount\")\r\nnode.fundrawtransaction(fee_rate: 0.00099999) -> throw(\"Invalid amount\")\r\nnode.fundrawtransaction(fee_rate: 0.00000001) -> throw(\"Invalid amount\")\r\nnode.fundrawtransaction(fee_rate: 0.00099999) -> throw(\"Invalid amount\")\r\n```\r\n\r\nSame for most of the other files in this commit. ",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T01:40:46Z",
      "diff_hunk" : "@@ -768,6 +768,10 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n                 node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+        # Test fee_rate values non-representable by CFeeRate",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560616468",
      "id" : 560616468,
      "line" : 772,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYxNjQ2OA==",
      "original_commit_id" : "d7c2399f3e23ce54d27f8ef26077e58324b991d8",
      "original_line" : 771,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 40,
      "pull_request_review_id" : 571785019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T02:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560616468",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560628056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560628056"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How far do we want to reach with these tests. This is basically \"testing\" that `FeeRateFromValueInSatB()` calls `AmountFromValue()` calls `ParseFixedPoint()` & `throw`s. Which is the same as:\r\n```cpp\r\nBOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"0.000000001\")), UniValue);\r\n```\r\nabove, with an additional function call to get to `throw`.\r\n\r\nHowever, because nothing specific is being checked, you could imagine how `FeeRateFromValueInSatB()` may end up being refactored such that there is some other throwing call, i.e:\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 1a83b9222..02604b595 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -89,6 +89,7 @@ CAmount AmountFromValue(const UniValue& value)\r\n \r\n CFeeRate FeeRateFromValueInSatB(const UniValue& value)\r\n {\r\n+    this_might_throw();\r\n     const CAmount amount{AmountFromValue(value)};\r\n     const CFeeRate fee_rate{CFeeRate::FromSatB(amount)};\r\n```\r\n\r\nand the tests still pass, but only because `this_might_throw()` throws for some reason. Now what are we testing? This is also why I'm not a fan of the `raise invalid amount` type comments. That might be what we want the code to be testing, but that doesn't mean that's what it's doing.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T02:16:33Z",
      "diff_hunk" : "@@ -214,6 +217,32 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e+11\")), UniValue); //overflow error\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e11\")), UniValue); //overflow error signless\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"93e+9\")), UniValue); //overflow error\n+\n+    // values rejected by ParseFixedPoint raise invalid amount\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"0.000000001\")), UniValue);\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1.111111111\")), UniValue);\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"11111111111\")), UniValue);\n+\n+    // Test FeeRateFromValueInSatB\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0\")) == CFeeRate{0});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00000000\")) == CFeeRate{0});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00000000\")).IsZero());\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.001\")) == CFeeRate{1});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00100000\")) == CFeeRate{1});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1\")) == CFeeRate{1000});\n+    BOOST_CHECK(!FeeRateFromValueInSatB(ValueFromString(\"1\")).IsZero());\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1.000\")) == CFeeRate{1000});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1.2340000\")) == CFeeRate{1234});\n+\n+    // values not representable by CFeeRate raise invalid amount\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.00099999\")), UniValue);\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.00000001\")), UniValue);\n+\n+    // values rejected by ParseFixedPoint raise invalid amount\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.000999999\")), UniValue);\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.000000001\")), UniValue);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560628056",
      "id" : 560628056,
      "line" : 243,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYyODA1Ng==",
      "original_commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "original_line" : 243,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/test/rpc_tests.cpp",
      "position" : 47,
      "pull_request_review_id" : 571785019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T02:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560628056",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560876606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560876606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is here for a reason. Fee rates should be accepted as an amount, e.g. a string or a number, as documented in the sendtoaddress, sendmany, fundrawtransaction, walletcreatefundedpsbt, send, and bumpfee helps. Adding this testing found a bug; see #20573.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T11:07:40Z",
      "diff_hunk" : "@@ -768,6 +768,10 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n                 node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+        # Test fee_rate values non-representable by CFeeRate",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560876606",
      "id" : 560876606,
      "in_reply_to_id" : 560616468,
      "line" : 772,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg3NjYwNg==",
      "original_commit_id" : "d7c2399f3e23ce54d27f8ef26077e58324b991d8",
      "original_line" : 771,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 40,
      "pull_request_review_id" : 572111158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T11:07:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560876606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560891095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560891095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If this is just to test that both amount and string fee rates are accepted, isn't that also tested by either\r\n```python\r\nfor param, zero_value in product([\"fee_rate\", \"feeRate\"], [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]):\r\n```\r\nor\r\n```python\r\nfor invalid_value in [\"\", 0.000000001, 1.111111111, 11111111111]:\r\n```\r\n\r\n(both added above) which use a mix of strings and numbers? Or the test changes made in #20573, which added specific tests for [\"Test passing fee_rate as an integer\"](https://github.com/bitcoin/bitcoin/blob/80486e7e2d8c360839cffc5a0c597b5c745433a7/test/functional/wallet_basic.py#L248) and [\"Test passing fee_rate as a string\"](https://github.com/bitcoin/bitcoin/blob/80486e7e2d8c360839cffc5a0c597b5c745433a7/test/functional/wallet_basic.py#L238)?",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T11:32:24Z",
      "diff_hunk" : "@@ -768,6 +768,10 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n                 node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+        # Test fee_rate values non-representable by CFeeRate",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560891095",
      "id" : 560891095,
      "in_reply_to_id" : 560616468,
      "line" : 772,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg5MTA5NQ==",
      "original_commit_id" : "d7c2399f3e23ce54d27f8ef26077e58324b991d8",
      "original_line" : 771,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 40,
      "pull_request_review_id" : 572130089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T11:32:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560891095",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560891825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560891825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My cited comment was in reply to a question about documentation. Which coverage should be dropped? It would have certainly been easier to not add coverage, but where fee rate test coverage has been partial or absent over the series of fee rate changes, I've ended up bitten by it and prefer to have the coverage in place for these changes and for future ones. The documentation is helpful to me when coming back to this months later (like now) to regain context. When I'm done with the fee rate work, I'm happy to remove the documentation.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T11:33:42Z",
      "diff_hunk" : "@@ -273,6 +273,9 @@ def run_test(self):\n         msg = \"Invalid amount\"\n         for invalid_value in [0.00000001, 0.00099999, \"0.00000001\", \"0.00099999\"]:\n             assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=invalid_value)\n+        # Test fee_rate values rejected by ParseFixedPoint",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560891825",
      "id" : 560891825,
      "in_reply_to_id" : 560613154,
      "line" : 277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg5MTgyNQ==",
      "original_commit_id" : "3df75585cc2595ff3d1065e6fdaa4e9df8716594",
      "original_line" : 276,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_basic.py",
      "position" : 24,
      "pull_request_review_id" : 572131040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T11:33:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560891825",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560894048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560894048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Relooking at it in light of your thoughts here.",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T11:37:52Z",
      "diff_hunk" : "@@ -214,6 +217,32 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e+11\")), UniValue); //overflow error\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1e11\")), UniValue); //overflow error signless\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"93e+9\")), UniValue); //overflow error\n+\n+    // values rejected by ParseFixedPoint raise invalid amount\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"0.000000001\")), UniValue);\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"1.111111111\")), UniValue);\n+    BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"11111111111\")), UniValue);\n+\n+    // Test FeeRateFromValueInSatB\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0\")) == CFeeRate{0});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00000000\")) == CFeeRate{0});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00000000\")).IsZero());\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.001\")) == CFeeRate{1});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"0.00100000\")) == CFeeRate{1});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1\")) == CFeeRate{1000});\n+    BOOST_CHECK(!FeeRateFromValueInSatB(ValueFromString(\"1\")).IsZero());\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1.000\")) == CFeeRate{1000});\n+    BOOST_CHECK(FeeRateFromValueInSatB(ValueFromString(\"1.2340000\")) == CFeeRate{1234});\n+\n+    // values not representable by CFeeRate raise invalid amount\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.00099999\")), UniValue);\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.00000001\")), UniValue);\n+\n+    // values rejected by ParseFixedPoint raise invalid amount\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.000999999\")), UniValue);\n+    BOOST_CHECK_THROW(FeeRateFromValueInSatB(ValueFromString(\"0.000000001\")), UniValue);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560894048",
      "id" : 560894048,
      "in_reply_to_id" : 560628056,
      "line" : 243,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg5NDA0OA==",
      "original_commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "original_line" : 243,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/test/rpc_tests.cpp",
      "position" : 47,
      "pull_request_review_id" : 572134283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T11:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560894048",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560899511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560899511"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think they are testing different cases/codepaths, as documented, reverifying (I'm grateful for the documentation in picking up the context again nearly two months later.)",
      "commit_id" : "ed414f6dd72c103b5ba9e17c6b6bd2bcc8548b5b",
      "created_at" : "2021-01-20T11:47:41Z",
      "diff_hunk" : "@@ -768,6 +768,10 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n                 node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+        # Test fee_rate values non-representable by CFeeRate",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#discussion_r560899511",
      "id" : 560899511,
      "in_reply_to_id" : 560616468,
      "line" : 772,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg5OTUxMQ==",
      "original_commit_id" : "d7c2399f3e23ce54d27f8ef26077e58324b991d8",
      "original_line" : 771,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 40,
      "pull_request_review_id" : 572141232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20546",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-20T11:51:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560899511",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It would seem like we could do with some sort of fee rate specific functional test, as we are getting to the point where basically all wallet RPC related functional tests are having (essentially) the same blocks copied and pasted between all of them. This seems like an awful lot of duplication, where code easily get out of \"sync\", for not much additional coverage.\r\n\r\nWell, only six (sendtoaddress, sendmany, send, fundrawtransaction, walletcreatefundedpsbt, and bumpfee) out of the sixty-some wallet/rpc functional tests, e.g. only for each of the send calls where it is important to have coverage.\r\n\r\nMost of the work in #20220, #20305, #20426, and #20573 was writing tests, but they found a number of issues in different calls because coverage was previously partial or absent.\r\n\r\nWhile a fee rate specific test is out of scope of this patch, I'm not sure it would reduce much duplication. Functional tests are end-to-end and need to exercise the endpoints or we'll end up back at square one with bugs. The coverage is unfortunately not copy-and-paste (I wish it were!), but having the test blocks look similar and cover evenly was a goal, because where the coverage was previously uneven, I came across issues, and it's pretty easy to omit coverage somewhere. The problem is that this is an finicky area where coverage helps and I was in the middle of a fair amount of changes. It's great to have it to protect against (some) future regressions and help future changes be easier and safer to make. At the same time, I do see that it's annoying to review and will look where some can be dropped or live on my computer only.",
      "created_at" : "2021-01-20T12:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20546#issuecomment-763557396",
      "id" : 763557396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MzU1NzM5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-20T12:01:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/763557396",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
