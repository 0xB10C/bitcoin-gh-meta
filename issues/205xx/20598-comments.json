[
   {
      "author_association" : "MEMBER",
      "body" : "In general, our coin selection algorithm does not currently consider the fee that each input will require when it does the selection. The exception is the first Branch and Bound pass that we do. This pass will attempt to find a solution without change at all, and it does consider the fee paid in its selection. This could result in an input set that is very large but produces no change. However that is not the case here. Further selection attempts (when BnB fails) will attempt to create a minimum change amount of 0.01 BTC, although it may fail to do so and make smaller change. There is no preference for smaller change at this stage because smaller change means that UTXOs will tend to be broken down into dust.\r\n\r\nThe fallback selection method includes randomness and will somewhat randomly choose different UTXOs for inclusion, although it is not a true random selector. I believe that if you run this experiment many times, eventually one of the results will have lower fees and choose the largest input. Due to the large number of UTXOs in this wallet, various iteration limits may be run into here so a less optimal solution may be chosen.\r\n\r\nLastly, always choosing a lowest fee input set always degenerates into the largest first case which is not ideal. Largest first selection is not healthy for the wallet as over time it grinds UTXOs into dust which causes future transactions to pay even higher fees.",
      "created_at" : "2020-12-08T17:45:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20598#issuecomment-740793087",
      "id" : 740793087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20598",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDc5MzA4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T17:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740793087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">In general, our coin selection algorithm does not currently consider the fee that each input will require when it does the selection.\r\n\r\nThis doesn't look right approach considering lot of users and projects might be trusting the algorithm to provide the best selection for them while creating a transaction. In this case it is a business that does the transactions for users so I am assuming a lot of transactions are overpaying from years for transactions that could have been done with less fees.\r\n\r\n> There is no preference for smaller change at this stage because smaller change means that UTXOs will tend to be broken down into dust.\r\n\r\nStill trying to read the code, experiment with wallet and understand what role does \"change\" play in this and how does it affect selecting inputs with more fees involved. Maybe will get some clarity by morning.\r\n\r\n> I believe that if you run this experiment many times, eventually one of the results will have lower fees and choose the largest input. \r\n\r\nThis does not help the users and projects who are trusting the algorithm and creating transactions with whatever results they get first time.\r\n\r\n> Largest first selection is not healthy for the wallet as over time it grinds UTXOs into dust which causes future transactions to pay even higher fees.\r\n\r\nAgree but in this case it might have helped especially if we had some warning messages or hints included in the RPC commands `createrawtransaction` or `fundrawtransaction` results. \r\n\r\nExample: \r\n\r\n1. The user tries to create a transaction with inputs automatically selected. Algorithm added inputs. Size: 54kB Fees: 0.0135 BTC and there is a warning message: \"You can save fees by selecting other input(s). Size: 0.48kB Fees: 0.00012 BTC\"\r\n\r\n2. If the user doesn't care about fees he can go ahead and sign this transaction to broadcast it later.\r\n\r\n3. If the user wants to save fees he should be able to create transaction with other input. Algorithm should be smart enough to suggest such things for users who trust bitcoin core.\r\n\r\n4. We can also add additional information in the warning messages: Links to know about UTXO consolidation, Best Practices to save fees, Segwit addresses benefits etc.\r\n\r\n5. This user could have done the transaction with bigger input to save fees and also not wait for days to get the transaction confirmed as its related to business. Time and Money matters a lot for businesses. They are trusting bitcoin core algorithms to help them.\r\n\r\n6. Later the user could have done UTXO consolidation when mempool is clear with 1sat/vByte to get all the small amount UTXOs in to one. This would again require less fees but might have to wait for hours/days which can be considered a planned maintenance with preparation.\r\n\r\n7. If warning messages are not possible or won't help most of the users, can we have one option in `bitcoin.conf` to enable priority for coin selection like `spendzeroconfchange` and `txconfirmtarget` ? Maybe: `coinselection=1` for privacy, `coinselection=2` for fees, `coinselection=3` for dust and by default it will work as its working right now. \r\n\r\n\r\n",
      "created_at" : "2020-12-08T19:59:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20598#issuecomment-740941693",
      "id" : 740941693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20598",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDk0MTY5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T19:59:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740941693",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> best selection\r\n\r\nAnd how is \"best\" defined? There is no clear definition of what is best because there are so many variables involved in coin selection.\r\n\r\n> Example:\r\n\r\nProviding so much additional information to users generally makes a bad user experience, especially for users who don't know how transactions and transaction fees work. I don't think it would be good to do be suggesting alternatives and telling users to study all this other stuff. The point of having a software manage UTXOs and make transactions is to abstract all of that away from the user. You end with with decision paralysis or users choosing some \"obvious\" thing without understanding the nuance. I'm certain that if you presented the option for users to have a \"prefer lower fees\" coin selection, the vast majority of users would pick that and not realize that doing so will create a degenerate wallet in the long run.\r\n\r\nI agree that coin selection should be better. But all of that takes work and requires review. And it most certainly won't happen quickly. Few people understand coin selection to review changes to it. Few people are willing to review coin selection code. We have to make it understandable first before any material changes to the algorithms can be done. I currently have 3 coin selection PRs open that address some issues: #20040, #17331, #17526. I have additional branches based on those which make it much easier to understand coin selection, so hopefully we can begin working on other material changes to the algorithms.",
      "created_at" : "2020-12-08T20:19:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20598#issuecomment-740970966",
      "id" : 740970966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20598",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDk3MDk2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T20:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740970966",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
