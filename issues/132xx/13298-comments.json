[
   {
      "author_association" : "MEMBER",
      "body" : "I'm glad to see someone working on this!\r\n\r\nOne prior proposal was to put _all_ inbound into one timing bucket, and keep per-peer timing for each outbound with the rationale that the attacker doesn't control our outbounds but could potentially control any inbounds.\r\n\r\nIf we found that to be too slow we could quantize inbound network groups into a small number of buckets (e.g. 4, by computing  hasher(seed, netgroup)&3 or similar) and have timers per that so even when an attacker goes and gets a lot of groups his speedup has a small bound\r\n\r\nI think probably we shouldn't be too afraid of slowing down propagation-- the changes to add delays at all were a massive slowdown and generated basically no notice.\r\n\r\nAlso related to this we might want to track the rate of novel transactions being accepted for a particular peer and up-delay really slow peers (like send every Nth time it would otherwise send).  The rational being that relay of novel transactions blinds tracking (since we won't relay something a peer gave to us back to them) and also lazy tracking stuff tends not to relay anything.   Delaying tx relay to a peer that never sends anything would hardly hurt propagation in the network, but at least might force attackers to be a bit more useful.\r\n",
      "created_at" : "2018-05-21T19:19:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-390754861",
      "id" : 390754861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-21T19:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390754861",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189687756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189687756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think for IPv6 this could be a slightly far-fetched memory exhaustion DOS.",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T19:21:21Z",
      "diff_hunk" : "@@ -2864,8 +2864,24 @@ bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\n     return found != nullptr && NodeFullyConnected(found) && func(found);\n }\n \n-int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n-    return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n+int64_t CConnman::PoissonNextSendTo(int64_t now, int average_interval_seconds, CNode* pto)\n+{\n+    assert(pto);\n+    uint64_t net_group = pto->nKeyedNetGroup;\n+    std::pair<int, uint64_t> key{average_interval_seconds, net_group};\n+    LOCK(cs_group_next_sends);\n+    std::map<std::pair<int, uint64_t>, int64_t>::iterator group_next_send = group_next_sends.find(key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189687756",
      "id" : 189687756,
      "original_commit_id" : "2b74996e379cd54dffea1004ed478d93f1a2b596",
      "original_position" : 12,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 121915848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189687756",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe I'm missing something, but what would be the downside of having a single next send across all outbound peers if propagation latency isn't a huge issue? It seems like delay by net group is moving in that direction",
      "created_at" : "2018-05-21T20:13:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-390768509",
      "id" : 390768509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-21T20:13:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390768509",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We assume that outgoing connections are less likely to be (significantly) under attacker control, due to them being self-selected, and addrman having built-in precautions against eclipse attacks (cc @EthanHeilman). Giving different peers a synchronized timer results increases bandwidth spikes, which isn't so much a concern for tx propagation, but may interfere with block propagation if they coincide. For outgoing peers (max 16) this is not that much of a concern, but then again, due to the previous point, synchronizing things is also less useful there.\r\n\r\nRegarding @gmaxwell's point of memory exhaustion, we could introduce a per-group reference counter, and delete the corresponding map entries when no peers in that group remain?",
      "created_at" : "2018-05-21T20:37:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-390774816",
      "id" : 390774816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-21T20:37:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390774816",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189709300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189709300"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`const CNode*`, alternatively pass the net_group",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T20:47:59Z",
      "diff_hunk" : "@@ -310,6 +310,10 @@ class CConnman\n     unsigned int GetReceiveFloodSize() const;\n \n     void WakeMessageHandler();\n+\n+    /** Attempts to obfuscate tx time through exponentially distributed emitting. */\n+    int64_t PoissonNextSendTo(int64_t now, int average_interval_seconds, CNode* pto);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189709300",
      "id" : 189709300,
      "original_commit_id" : "2b74996e379cd54dffea1004ed478d93f1a2b596",
      "original_position" : 6,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 121941898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189709300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189709307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189709307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `include <map>`",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T20:48:00Z",
      "diff_hunk" : "@@ -434,6 +438,9 @@ class CConnman\n      *  This takes the place of a feeler connection */\n     std::atomic_bool m_try_another_outbound_peer;\n \n+    std::map<std::pair<int, uint64_t>, int64_t> group_next_sends GUARDED_BY(cs_group_next_sends);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189709307",
      "id" : 189709307,
      "original_commit_id" : "2b74996e379cd54dffea1004ed478d93f1a2b596",
      "original_position" : 15,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 121941906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189709307",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell thanks for the feedback.\r\n\r\nI like the idea of turning it into a small number of buckets.\r\nI think that 8 buckets may be fine considering current load (should not cause significant spikes in bandwidth).\r\n\r\nPlease let me know if you see a better estimation for a reasonable number of buckets.",
      "created_at" : "2018-05-21T20:57:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-390780413",
      "id" : 390780413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-21T20:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390780413",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@skeees Putting all in one will result in more spiky bandwidth usage (e.g. you hit your queue then use a bunch of bandwidth transmitting to everyone at once),  and I _believe_ but lack a rigorous analysis that we get more privacy for a given amount of average delay if the transactions diffuse randomly in the network to hide where they originated from, at least if we assume the target doesn't send many transactions (and that an attacker isn't abusing multiple groups to get a faster effective send.)\r\n\r\nE.g. imagine a user who originates from node X and an attacker that connects to almost all nodes in the network.  If all sends happen at once, when the attacker sees a transaction happen from X first then he can have some confidence that transactions happened from there.   If the send times are independent and the attacker sees a transaction from X first he doesn't learn that much from that transaction.\r\n\r\nThe issue becomes if the attacker connects to you 20 times and the times are independent than he gets effectively a 20th of the delay.  Which is why I was suggesting leaving outbounds independent and putting all inbounds into a single group or a small number of groups. ",
      "created_at" : "2018-05-21T21:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-390790891",
      "id" : 390790891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-21T21:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390790891",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189733029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189733029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's suboptimal to put knowledge of the actual scheduling policy in net; it belongs more in net_processing (the `INVENTORY_BROADCAST_INTERVAL` and `NETWORK_GROUP_BUCKETS` should move there as well, I think).\r\n\r\nHow about passing a boolean `per_group` in, or saying that when `net_group = 0` there is no grouping to be done? Then you can keep the decision logic in net_processing, and keep this function generally usable.",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T22:37:27Z",
      "diff_hunk" : "@@ -2864,13 +2865,16 @@ bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\n     return found != nullptr && NodeFullyConnected(found) && func(found);\n }\n \n-int64_t CConnman::PoissonNextSendTo(int64_t now, int average_interval_seconds, uint64_t net_group)\n+int64_t CConnman::PoissonNextSendTo(int64_t now, bool inbound, uint64_t net_group)\n {\n-    std::pair<int, uint64_t> key{average_interval_seconds, net_group};\n+    if (!inbound) {\n+      return PoissonNextSend(now, INVENTORY_BROADCAST_INTERVAL >> 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189733029",
      "id" : 189733029,
      "original_commit_id" : "bd666a9789305ac951577c99371311c37ee09bcf",
      "original_position" : 17,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 121969690,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189733029",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189743568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189743568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this needs to be inverted.",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T23:45:15Z",
      "diff_hunk" : "@@ -3474,7 +3474,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n                 // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+                if (pto->fInbound) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189743568",
      "id" : 189743568,
      "original_commit_id" : "f890492b4cbcf8f24f78cf29d1c09f8befec2e7b",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 121981803,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189743568",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189743885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189743885"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Without the interval size in the map, the correctness of this function depends on there only being a single interval (which is the case now, so no problem). It would be good to document that in the net.h definition, or change it.",
      "commit_id" : "c49fa62a8a3e85b1ee5d1cd631960e0d49e92775",
      "created_at" : "2018-05-21T23:47:47Z",
      "diff_hunk" : "@@ -2864,8 +2864,21 @@ bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\n     return found != nullptr && NodeFullyConnected(found) && func(found);\n }\n \n-int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n-    return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n+int64_t CConnman::PoissonNextSendTo(int64_t now, int average_interval_seconds, uint64_t net_group_bucket)\n+{\n+    LOCK(cs_net_bucket_next_sends);\n+    std::map<uint64_t, int64_t>::iterator net_bucket_next_send = net_bucket_next_sends.find(net_group_bucket);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#discussion_r189743885",
      "id" : 189743885,
      "original_commit_id" : "f890492b4cbcf8f24f78cf29d1c09f8befec2e7b",
      "original_position" : 9,
      "path" : "src/net.cpp",
      "position" : 9,
      "pull_request_review_id" : 121981803,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13298",
      "updated_at" : "2018-05-22T00:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189743885",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've been looking at this paper \"Deanonymization in the Bitcoin P2P Network\" (https://papers.nips.cc/paper/6735-deanonymization-in-the-bitcoin-p2p-network.pdf).  It's got some ideas for how to think about an adversary's strategies with respect to detecting the first node on a network to relay a new transaction.\r\n\r\nIt seems to me there are a couple different kinds of adversaries to consider -- (a) one that makes only inbound connections to listening nodes on the network, versus (b) one that manages to take over some percentage of listening nodes and thus controls x% of the outbound connections on the network.  (And then these could be combined of course.)\r\n\r\nFor type (a) adversaries, there are multiple types of strategies that could be employed to deanonymize the first listening node to relay a transaction.  Perhaps the simplest strategy is the \"first spy\" estimator described in that paper, where the adversary estimates the first node to relay a transaction to it as the source.  Such a strategy seems to be very successful if the adversary connects to each node on the network multiple times, and this PR would mitigate that.  However, based on simulations I've done, I think 8 buckets is too many.  I don't have a sense for how easy it is for an adversary to actually connect from different network groups to achieve the 8 different timings -- so if we decide that is suitably hard, then maybe the point I'm raising is moot -- but if we assume that is achievable, then my simulations suggest a 40% success rate for a first-spy adversary.\r\n\r\nThe paper I mentioned above goes into some length discussing the success bounds of an attacker that is smarter than that and also uses knowledge of the network graph to estimate the source node.  I am still working through simulations that demonstrate the ideas they suggest, but I think I have a rough maximum-likelihood estimator that appears to be -- very roughly -- 15-20% successful at estimating the source node based on the times at which the adversary sees announcements from each node in the network.  This is assuming that the adversary has 1 inbound connection to each node on the network.\r\n\r\nIt seems to me that as a first pass, we might limit the number of buckets so that the effectiveness of a first-spy adversary is on par with that of a smarter adversary[1].  From my analysis so far, I think having 2 buckets for incoming peers would roughly achieve that, with the important caveats that (a) no one has sanity checked my sim results [2], and (b) I don't know yet how good the maximum-likelihood estimator could be if it were smart enough to use 2 connections to each peer.\r\n\r\nIf we weren't concerned about tradeoffs (ie bandwidth spikes or relay propagation delays), I'd say we could just make this all one bucket for inbound peers, to maximize source-privacy in our current transaction relay model.\r\n\r\n------\r\n[1] I think we could also go further and figure out some equilibrium with respect to an adversary controlling X% of the listening nodes/outbound connections on the network, but I'm not sure how to think about the relative costs of these kinds of adversarial approaches.\r\n\r\n[2] If anyone is able to do their own simulations or estimations to corroborate my observations that would be fantastic.",
      "created_at" : "2018-05-25T17:05:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13298#issuecomment-392121209",
      "id" : 392121209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13298",
      "updated_at" : "2018-05-25T17:05:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392121209",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
