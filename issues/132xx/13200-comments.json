[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13200#discussion_r187078556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13200"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187078556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe add batch support?",
      "commit_id" : "f3f96027ebf05c267fb19e4bd37562c35dc025e3",
      "created_at" : "2018-05-09T15:24:18Z",
      "diff_hunk" : "@@ -271,3 +274,40 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+namespace async_logging {\n+    using LogArgs = std::string;\n+    RingBuffer<LogArgs, 1024> log_buffer;\n+    std::unique_ptr<std::thread> flush_logs_thread;\n+    std::once_flag flush_logs_thread_started;\n+\n+    static void ConsumeLogs()\n+    {\n+        std::unique_ptr<LogArgs> next_log_line;\n+        while (next_log_line = log_buffer.PollForOne()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13200#discussion_r187078556",
      "id" : 187078556,
      "original_commit_id" : "f3f96027ebf05c267fb19e4bd37562c35dc025e3",
      "original_position" : 24,
      "path" : "src/logging.cpp",
      "position" : 24,
      "pull_request_review_id" : 118785692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13200",
      "updated_at" : "2018-05-09T15:24:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187078556",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nMy thoughts on your open questions:\r\n\r\n- Do we want this behavior by default?\r\n[JN] Yes\r\n- Do we want to allow an opt-out configuration option that makes log processing synchronous again\r\n[JN] Yes\r\n- The ring buffer implementation allows either overwriting existing data or blocking when at full capacity. In the case of logging, I've set it to block and wait for capacity instead of dropping messages. Does this seem right?\r\n[JN] I think there are at least three options here:\r\n    1. overwrite existing data\r\n    2. drop new messages\r\n    3. block\r\nI'd go with (2), but push a final message to the ring buffer saying `Logging buffer full - dropping new log messages`, and then when the ring buffer is accepting messages again, push a message saying `Logging buffer accepting new messages`. That makes it very clear to anyone reading the log that messages were dropped between timestamp A and timestamp B.",
      "created_at" : "2018-05-09T15:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13200#issuecomment-387779854",
      "id" : 387779854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13200",
      "updated_at" : "2018-05-09T15:32:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387779854",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
