[
   {
      "author_association" : "MEMBER",
      "body" : "The function to format a ISO8601 datetime is called `FormatISO8601DateTime`, maybe this should be `ParseISO8601DateTime`?\r\n\r\n~~Also: there seems to be no error handling; how does this handle invalid input?\r\n(I guess returning 0 would be OK, but not crashing or raising an exception, though not sure, it's something to think about at least)~~ (nm, I missed the `iss.fail()` bit)\r\n",
      "created_at" : "2019-10-24T22:48:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17245#issuecomment-546132952",
      "id" : 546132952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17245",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjEzMjk1Mg==",
      "updated_at" : "2019-10-24T22:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546132952",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Great :) I actually looked for a header to include this so I won't need to do manual declaration in the test.\n\nI'll rename it and move it to time.h/cpp",
      "created_at" : "2019-10-24T23:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17245#issuecomment-546139732",
      "id" : 546139732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17245",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjEzOTczMg==",
      "updated_at" : "2019-10-24T23:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546139732",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'll rename it and move it to time.h/cpp\r\n\r\nYes, that'd make sense! Could also do some roundtrip tests then.\r\n\r\nI'm a bit concerned about using `timegm`; from the man page:\r\n```\r\nCONFORMING TO\r\n       These functions are nonstandard GNU extensions that are also present on the BSDs.  Avoid their use.\r\n```\r\nSuch an explicit warning makes me feel bad. Seems sure this is going to cause builder complaints on some obscure or less obscure platform (does this exist on Android ?). It might be worse than just relying on boost.\r\n\r\nI wonder if we can find an alternative to this. The old code did:\r\n```c++\r\nreturn (ptime - epoch).total_seconds();\r\n```\r\nDoesn't the same trick exist for C++11 time manipulation?\r\n\r\nEdit: weird! travis failure looks like `std::get_time` isn't available on trusty. Looks like these were only [added in GCC 5](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54354).\r\n",
      "created_at" : "2019-10-25T09:20:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17245#issuecomment-546276071",
      "id" : 546276071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17245",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjI3NjA3MQ==",
      "updated_at" : "2019-10-25T09:58:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546276071",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm a bit concerned about using `timegm`; from the man page:\r\n> \r\n> ```\r\n> CONFORMING TO\r\n>        These functions are nonstandard GNU extensions that are also present on the BSDs.  Avoid their use.\r\n> ```\r\n> \r\n> Such an explicit warning makes me feel bad. Seems sure this is going to cause builder complaints on some obscure or less obscure platform (does this exist on Android ?). It might be worse than just relying on boost.\r\n\r\nI'll need to check if Android has it. I'm pretty sure glibc had it for a while so anything glibc should be fine. But I'll look into it when I'm on my laptop again. \r\nWe could copy glibc's implementation (bad idea). Or technically we could drop the string representation and just store the epoch, Altough that will be a breaking change that I'm not even sure what it'll affect exactly. \r\n> I wonder if we can find an alternative to this. The old code did:\r\n> \r\n> ```c++\r\n> return (ptime - epoch).total_seconds();\r\n> ```\r\n> \r\n> Doesn't the same trick exist for C++11 time manipulation?\r\n\r\nNot that I could find. I'll try to look more. But maybe we better off leaving it with boost for now (and coming back to it when we're actually ready to get rid of boost once and for all) \r\n\r\n> Edit: weird! travis failure looks like `std::get_time` isn't available on trusty. Looks like these were only [added in GCC 5](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54354).\r\n\r\nThat's just weird. So before gcc5 they didn't fully support c++11?\r\n",
      "created_at" : "2019-10-25T10:39:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17245#issuecomment-546302070",
      "id" : 546302070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17245",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjMwMjA3MA==",
      "updated_at" : "2019-10-25T10:39:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546302070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   }
]
