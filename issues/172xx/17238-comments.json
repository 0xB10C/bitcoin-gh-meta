[
   {
      "author_association" : "MEMBER",
      "body" : "What are the steps to reproduce? Be reminded that invalid public keys can not be deserialized: https://dev.visucore.com/bitcoin/doxygen/pubkey_8h_source.html#l00140",
      "created_at" : "2019-10-24T13:01:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-545906681",
      "id" : 545906681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTkwNjY4MQ==",
      "updated_at" : "2019-10-24T13:01:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545906681",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke `121272ca0172` can be used as input to `pub_key_deserialize` in #17225 to reproduce.  Make sure to remove the comment from the following line:\r\n\r\n`// AssertEqualAfterSerializeDeserialize(pub_key);`\r\n\r\n:)",
      "created_at" : "2019-10-24T13:14:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-545911787",
      "id" : 545911787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTkxMTc4Nw==",
      "updated_at" : "2019-10-24T13:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545911787",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I might be blind, but that clearly doesn't look like a valid public key",
      "created_at" : "2019-10-24T14:03:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-545933181",
      "id" : 545933181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTkzMzE4MQ==",
      "updated_at" : "2019-10-24T14:03:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545933181",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\nNothing wrong with being blind (based on my experience), but perhaps a premature close in this case? :)\r\n\r\nDon't forget that the deserialisation harnesses use the first four bytes (`121272ca` in this case) to read the `CDataStream` version int. Thus the `0172` part is the `CPubKey`. It deserialises without error (no `std::ios_base::failure` is thrown).\r\n\r\nExample:\r\n\r\n```\r\nCPubKey pk1;\r\nCDataStream s1{std::vector<uint8_t>{'\\x01', '\\x72'}, SER_NETWORK, INIT_PROTO_VERSION};\r\ns1 >> pk1;\r\n\r\nCDataStream s2{SER_NETWORK, INIT_PROTO_VERSION};\r\ns2 << pk1;\r\n\r\nCPubKey pk2;\r\ns2 >> pk2;\r\n\r\nassert(pk1 == pk2);\r\n```\r\n\r\nThis results in:\r\n\r\n```\r\nAssertion `pk1 == pk2' failed.\r\n```\r\n\r\nIs there any reason to why `CPubKey` is deviating from the other serializable classes (for which equality is defined) in this regard? :)",
      "created_at" : "2019-10-24T14:56:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-545958017",
      "id" : 545958017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTk1ODAxNw==",
      "updated_at" : "2019-10-24T15:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545958017",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\nThanks for re-opening. Did my example clarify? Are you following my line of reasoning, or am I missing something obvious?",
      "created_at" : "2019-10-24T16:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-546004247",
      "id" : 546004247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjAwNDI0Nw==",
      "updated_at" : "2019-10-24T16:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546004247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I didn't realize the nVersion was also serialized. Will take another look later.",
      "created_at" : "2019-10-24T16:50:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-546006845",
      "id" : 546006845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjAwNjg0NQ==",
      "updated_at" : "2019-10-24T16:50:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546006845",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Equality is not defined for invalid CPubKeys.\n\nThere is no good reason why it isn't (except a likely negligiable performance gain perhaps) but also no good reason why it should be, as nothing ever happens with those apart from signalling \"no pubkey here\".",
      "created_at" : "2019-10-24T16:56:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-546009048",
      "id" : 546009048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjAwOTA0OA==",
      "updated_at" : "2019-10-24T16:56:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546009048",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm likely missing something but shouldn't `Set(â¦)` and `Unserialize(â¦)` match in their invalidation logic?\r\n\r\nIf I'm reading it correctly `Set(â¦)` is a bit more strict when it comes to invalidation (via `Invalidate()`) compared to `Unserialize(â¦)`.\r\n\r\nThis is the current `Set(â¦)`:\r\n\r\n``` \r\n    //! Initialize a public key using begin/end iterators to byte data.\r\n    template <typename T>\r\n    void Set(const T pbegin, const T pend)\r\n    {\r\n        int len = pend == pbegin ? 0 : GetLen(pbegin[0]);\r\n        if (len && len == (pend - pbegin))\r\n            memcpy(vch, (unsigned char*)&pbegin[0], len);\r\n        else\r\n            Invalidate();\r\n    }\r\n```\r\n\r\nThis is the current `Unserialize(â¦)`:\r\n\r\n```\r\n    template <typename Stream>\r\n    void Unserialize(Stream& s)\r\n    {\r\n        unsigned int len = ::ReadCompactSize(s);\r\n        if (len <= PUBLIC_KEY_SIZE) {\r\n            s.read((char*)vch, len);\r\n        } else {\r\n            // invalid pubkey, skip available data\r\n            char dummy;\r\n            while (len--)\r\n                s.read(&dummy, 1);\r\n            Invalidate();\r\n        }\r\n    }\r\n```\r\n\r\nThis is the `Unserialize(â¦)` I would naÃ¯vely assume given how `Set(â¦)` works:\r\n\r\n```\r\n    template <typename Stream>\r\n    void Unserialize(Stream& s)\r\n    {\r\n        unsigned int len = ::ReadCompactSize(s);\r\n        if (len == 0) {\r\n            Invalidate();\r\n        } else if (len <= PUBLIC_KEY_SIZE) {\r\n            s.read((char*)vch, len);\r\n            if (GetLen(vch[0]) != len) {\r\n                Invalidate();\r\n            }\r\n        } else {\r\n            // invalid pubkey, skip available data\r\n            char dummy;\r\n            while (len--)\r\n                s.read(&dummy, 1);\r\n            Invalidate();\r\n        }\r\n    }\r\n```\r\n\r\nThe more strict `Unserialize(â¦)` would give me the expected equivalence after round-trip :)\r\n\r\nThat is `Deserialize<CPubKey>(Serialize(obj)) == obj` or ...\r\n\r\n```\r\nCPubKey pk1;\r\nCDataStream s1{std::vector<uint8_t>{'\\x01', '\\x72'}, SER_NETWORK, INIT_PROTO_VERSION};\r\ns1 >> pk1;\r\n\r\nCDataStream s2{SER_NETWORK, INIT_PROTO_VERSION};\r\ns2 << pk1;\r\n\r\nCPubKey pk2;\r\ns2 >> pk2;\r\n\r\nassert(pk1 == pk2);\r\n```\r\n\r\nIs there a reason for `Unserialize(â¦)` not calling `Invalidate()` in the cases where `Set(â¦)` would?",
      "created_at" : "2019-10-24T20:34:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17238#issuecomment-546091434",
      "id" : 546091434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjA5MTQzNA==",
      "updated_at" : "2019-10-24T20:34:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546091434",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
