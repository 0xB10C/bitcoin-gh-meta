[
   {
      "author_association" : "NONE",
      "body" : "@jnewbery has provided many inputs for this PR. Previous discussion and review can be found [here](https://github.com/ChaincodeResidency/bitcoin/pull/26).",
      "created_at" : "2019-10-28T19:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547104970",
      "id" : 547104970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzEwNDk3MA==",
      "updated_at" : "2019-10-28T19:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547104970",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r339753399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339753399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Wouldn't it make more sense to put this file in the `test/` directory? I feel like we already have some documentation there and it could be referenced from the existing docs.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-28T19:35:03Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r339753399",
      "id" : 339753399,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTc1MzM5OQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 1,
      "path" : "doc/test-wrapper.md",
      "position" : 1,
      "pull_request_review_id" : 308097729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-28T19:35:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339753399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. We used this in the taproot workshops and it's a really nice way of interacting with bitcoind instances, prototyping tests, learning the RPC interface, etc",
      "created_at" : "2019-10-28T19:50:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547116752",
      "id" : 547116752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzExNjc1Mg==",
      "updated_at" : "2019-10-28T19:50:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547116752",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, seems like a great feature.",
      "created_at" : "2019-10-28T20:03:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547121817",
      "id" : 547121817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzEyMTgxNw==",
      "updated_at" : "2019-10-28T20:03:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547121817",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: very nice idea and what an excellent first-time contribution!\r\n\r\nHope to see more contributions from you in the future!",
      "created_at" : "2019-10-28T22:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547165834",
      "id" : 547165834,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzE2NTgzNA==",
      "updated_at" : "2019-10-28T22:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547165834",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031294"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "...or possibly in `test/functional/`",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T11:55:08Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031294",
      "id" : 340031294,
      "in_reply_to_id" : 339753399,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMTI5NA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 1,
      "path" : "doc/test-wrapper.md",
      "position" : 1,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:20:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031294",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In general, it would be nice to wrap lines in markdown files around 80-120 characters for easier reviewing here and in local editors. Most editors can do this automatically for you while editing the file and it would be kind for reviewers.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T11:56:34Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031846",
      "id" : 340031846,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMTg0Ng==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 6,
      "path" : "doc/test-wrapper.md",
      "position" : 6,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T19:46:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031846",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032263"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/functional the/the functional/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T11:57:30Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032263",
      "id" : 340032263,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjI2Mw==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 10,
      "path" : "doc/test-wrapper.md",
      "position" : 10,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032263",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032568"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/command-line/command line/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T11:58:15Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032568",
      "id" : 340032568,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjU2OA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 12,
      "path" : "doc/test-wrapper.md",
      "position" : 12,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032568",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/kernel,/kernel./ ?",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T11:58:53Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032866",
      "id" : 340032866,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjg2Ng==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 12,
      "path" : "doc/test-wrapper.md",
      "position" : 12,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032866",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033351"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The first 2 commands didn't seem needed for running your example in the PR description?",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:00:09Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033351",
      "id" : 340033351,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMzM1MQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 26,
      "path" : "doc/test-wrapper.md",
      "position" : 26,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033351",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033677"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/run/run,/ (add Oxford comma) and s/shutdown/shut down/ (shutdown is a noun but not a verb)",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:00:54Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033677",
      "id" : 340033677,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMzY3Nw==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 38,
      "path" : "doc/test-wrapper.md",
      "position" : 38,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033677",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034412"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps s/This/Running a single process/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:02:44Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034412",
      "id" : 340034412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNDQxMg==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 50,
      "path" : "doc/test-wrapper.md",
      "position" : 50,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034412",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/running,/running/ (remove the comma)",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:03:38Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034751",
      "id" : 340034751,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNDc1MQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 60,
      "path" : "doc/test-wrapper.md",
      "position" : 60,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034751",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340035312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340035312"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/especially/particularly/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:05:06Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node processes and BitcoinTestFramework convenience methods can be accessed interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestWrapper nodes are initialized with a clean chain. This means that each node of the TestWrapper is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound connection to each other during `setup`, the second node's chain will include the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test [readme](../test/functional/README.md), which provides an overview of the test-framework**. Modules such as [key.py](../test/functional/test_framework/key.py), [script.py](../test/functional/test_framework/script.py) and [messages.py](../test/functional/test_framework/messages.py) are especially useful in constructing objects which can be passed to the bitcoind nodes managed by a running TestWrapper object.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340035312",
      "id" : 340035312,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNTMxMg==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 100,
      "path" : "doc/test-wrapper.md",
      "position" : 100,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340035312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036265"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/startup/start up/ and s/test-framework/test framework/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:07:40Z",
      "diff_hunk" : "@@ -135,6 +163,9 @@ def main(self):\n         self.add_options(parser)\n         self.options = parser.parse_args()\n \n+    def setup(self):\n+        \"\"\"Call this method to startup the test-framework object with options set.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036265",
      "id" : 340036265,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNjI2NQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 47,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 47,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036265",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/shutdown/shut down/ and s/test-framework/test framework/",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:08:37Z",
      "diff_hunk" : "@@ -181,33 +212,20 @@ def main(self):\n         self.network_thread = NetworkThread()\n         self.network_thread.start()\n \n-        success = TestStatus.FAILED\n+        if self.options.usecli:\n+            if not self.supports_cli:\n+                raise SkipTest(\"--usecli specified but test does not support using CLI\")\n+            self.skip_if_no_cli()\n+        self.skip_test_if_missing_module()\n+        self.setup_chain()\n+        self.setup_network()\n \n-        try:\n-            if self.options.usecli:\n-                if not self.supports_cli:\n-                    raise SkipTest(\"--usecli specified but test does not support using CLI\")\n-                self.skip_if_no_cli()\n-            self.skip_test_if_missing_module()\n-            self.setup_chain()\n-            self.setup_network()\n-            self.run_test()\n-            success = TestStatus.PASSED\n-        except JSONRPCException:\n-            self.log.exception(\"JSONRPC error\")\n-        except SkipTest as e:\n-            self.log.warning(\"Test Skipped: %s\" % e.message)\n-            success = TestStatus.SKIPPED\n-        except AssertionError:\n-            self.log.exception(\"Assertion failed\")\n-        except KeyError:\n-            self.log.exception(\"Key error\")\n-        except Exception:\n-            self.log.exception(\"Unexpected exception caught during testing\")\n-        except KeyboardInterrupt:\n-            self.log.warning(\"Exiting after keyboard interrupt\")\n+        self.success = TestStatus.PASSED\n \n-        if success == TestStatus.FAILED and self.options.pdbonfailure:\n+    def shutdown(self):\n+        \"\"\"Call this method to shutdown the test-framework object.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036650",
      "id" : 340036650,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNjY1MA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 92,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 92,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036650",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340037602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340037602"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: possibly remove the extra lines at L21, 23 and 31",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:10:44Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340037602",
      "id" : 340037602,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNzYwMg==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 23,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 23,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340037602",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340038381"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do these args need to be maintained in parallel with those in test_framework.py, etc? If yes, perhaps mention/warn about it in a code comment.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:12:51Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")\n+                return\n+\n+            self.setup_clean_chain = kwargs.get('setup_clean_chain',True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381",
      "id" : 340038381,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzODM4MQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 36,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 36,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340038381",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340040618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340040618"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: missing newline at EOF",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T12:18:48Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node processes and BitcoinTestFramework convenience methods can be accessed interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestWrapper nodes are initialized with a clean chain. This means that each node of the TestWrapper is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound connection to each other during `setup`, the second node's chain will include the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test [readme](../test/functional/README.md), which provides an overview of the test-framework**. Modules such as [key.py](../test/functional/test_framework/key.py), [script.py](../test/functional/test_framework/script.py) and [messages.py](../test/functional/test_framework/messages.py) are especially useful in constructing objects which can be passed to the bitcoind nodes managed by a running TestWrapper object.\n+\n+## 5. Shutting the TestWrapper down\n+\n+Shutting down the TestWrapper will safely tear down all running bitcoind instances and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the `TestWrapper.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py '/path/to/bitcoin_func_test_XXXXXXX'`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340040618",
      "id" : 340040618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDA0MDYxOA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 123,
      "path" : "doc/test-wrapper.md",
      "position" : 123,
      "pull_request_review_id" : 308452066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T12:19:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340040618",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nI can see how this will be useful for a lot of people in the future. Only one nit: I am not sure if `TestWrapper` is a great name. I would expect a class by that name to wrap a specific test. But it's hard to come up with a better name that is still short and describes what this class is doing. Maybe something like `InteractiveDriver`. But probably not worth the effort unless others agree it should be changed.",
      "created_at" : "2019-10-29T19:23:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057",
      "id" : 547589057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzU4OTA1Nw==",
      "updated_at" : "2019-10-29T19:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547589057",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  I am not sure if TestWrapper is a great name.\r\n\r\nI think the name is ok. Other options: `TestREPL`, `TestShell`, `TestDriver`, ...",
      "created_at" : "2019-10-29T19:26:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547590357",
      "id" : 547590357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzU5MDM1Nw==",
      "updated_at" : "2019-10-29T19:26:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547590357",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In general, it would be nice to wrap lines in markdown files around 80-120\r\n\r\nPlease also do the same for commit logs! Aim to limit the summary line to 50 characters if possible and wrap all other lines at 80 characters. There are some good pointers on writing commit logs here: https://chris.beams.io/posts/git-commit/",
      "created_at" : "2019-10-29T20:09:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547607108",
      "id" : 547607108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzYwNzEwOA==",
      "updated_at" : "2019-10-29T20:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547607108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340304288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this could use a comment saying why you're not just calling `logging.shutdown()` (maybe reference https://docs.python.org/3/library/logging.html#logging.shutdown).\r\n\r\nWithout a comment, someone might helpfully change this back to using `logging.shutdown()` in future.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T20:20:50Z",
      "diff_hunk" : "@@ -238,20 +256,25 @@ def main(self):\n             self.log.warning(\"Not cleaning up dir {}\".format(self.options.tmpdir))\n             cleanup_tree_on_exit = False\n \n-        if success == TestStatus.PASSED:\n+        if self.success == TestStatus.PASSED:\n             self.log.info(\"Tests successful\")\n             exit_code = TEST_EXIT_PASSED\n-        elif success == TestStatus.SKIPPED:\n+        elif self.success == TestStatus.SKIPPED:\n             self.log.info(\"Test skipped\")\n             exit_code = TEST_EXIT_SKIPPED\n         else:\n             self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             self.log.error(\"Hint: Call {} '{}' to consolidate all logs\".format(os.path.normpath(os.path.dirname(os.path.realpath(__file__)) + \"/../combine_logs.py\"), self.options.tmpdir))\n             exit_code = TEST_EXIT_FAILED\n-        logging.shutdown()\n+        for h in list(self.log.handlers):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340304288",
      "id" : 340304288,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNDI4OA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 124,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 124,
      "pull_request_review_id" : 308807117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T20:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304288",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305236"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd move this to be a class docstring for `TestWrapper` rather than a file docstring.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T20:22:56Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305236",
      "id" : 340305236,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNTIzNg==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 7,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 7,
      "pull_request_review_id" : 308807117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T20:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305236",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: (c) 2019 (unless you've been secretly working on this for 5 years)",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T20:23:21Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305415",
      "id" : 340305415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNTQxNQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 2,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 2,
      "pull_request_review_id" : 308807117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T20:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305415",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340312053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340312053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Small comment here to explain that we wrap the class to enforce a singleton pattern would be nice.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T20:37:51Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")\n+                return\n+\n+            self.setup_clean_chain = kwargs.get('setup_clean_chain',True)\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            self.network_thread = kwargs.get('network_thread', None)\n+            self.rpc_timeout = kwargs.get('rpc_timeout', 60)\n+            self.supports_cli = kwargs.get('supports_cli', False)\n+            self.bind_to_localhost_only = kwargs.get('bind_to_localhost_only', True)\n+\n+            self.options = argparse.Namespace\n+            self.options.nocleanup = kwargs.get('nocleanup', False)\n+            self.options.noshutdown = kwargs.get('noshutdown', False)\n+            self.options.cachedir = kwargs.get('cachedir', abspath(join(__file__ ,\"../../../..\") + \"/test/cache\"))\n+            self.options.tmpdir = kwargs.get('tmpdir', None)\n+            self.options.loglevel = kwargs.get('loglevel', 'INFO')\n+            self.options.trace_rpc = kwargs.get('trace_rpc', False)\n+            self.options.port_seed = kwargs.get('port_seed', getpid())\n+            self.options.coveragedir = kwargs.get('coveragedir', None)\n+            self.options.configfile = kwargs.get('configfile', abspath(join(__file__ ,\"../../../..\") + \"/test/config.ini\"))\n+            self.options.pdbonfailure = kwargs.get('pdbonfailure', False)\n+            self.options.usecli = kwargs.get('usecli', False)\n+            self.options.perf = kwargs.get('perf', False)\n+            self.options.randomseed = kwargs.get('randomseed', None)\n+\n+            self.options.bitcoind = kwargs.get('bitcoind', abspath(join(__file__ ,\"../../../..\") +  \"/src/bitcoind\"))\n+            self.options.bitcoincli = kwargs.get('bitcoincli', None)\n+\n+            super().setup()\n+            self.running = True\n+\n+        def shutdown(self):\n+            if not self.running:\n+                print(\"TestWrapper is not running!\")\n+            else:\n+                super().shutdown()\n+                self.running = False\n+\n+    instance = None\n+\n+    def __new__(cls):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340312053",
      "id" : 340312053,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMxMjA1Mw==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 73,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 73,
      "pull_request_review_id" : 308807117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T20:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340312053",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340324672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340324672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make any sense to log instead of print? (same question for below)",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-29T21:04:50Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340324672",
      "id" : 340324672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMyNDY3Mg==",
      "original_commit_id" : "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "original_position" : 33,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 33,
      "pull_request_review_id" : 308833310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-29T21:10:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340324672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-10-30T11:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547865586",
      "id" : 547865586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg2NTU4Ng==",
      "updated_at" : "2019-10-30T11:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547865586",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding the naming: `TestShell` or `TestDriver` as suggested by @jnewbery and echoed by @jamesob are both clearer names than `TestWrapper` IMO :)",
      "created_at" : "2019-10-30T12:06:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547870014",
      "id" : 547870014,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg3MDAxNA==",
      "updated_at" : "2019-10-30T12:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547870014",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340678650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340678650"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks @jamesob for the review. For my understanding, do you mean logging it to the (already) running TestShell/Driver instance?",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-30T15:14:17Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340678650",
      "id" : 340678650,
      "in_reply_to_id" : 340324672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDY3ODY1MA==",
      "original_commit_id" : "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "original_position" : 33,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 33,
      "pull_request_review_id" : 309285958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-30T15:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340678650",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340679054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340679054"
         }
      },
      "author_association" : "NONE",
      "body" : "Almost feels like it ;)",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-30T15:14:56Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340679054",
      "id" : 340679054,
      "in_reply_to_id" : 340305415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDY3OTA1NA==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 2,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 2,
      "pull_request_review_id" : 309286463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-30T15:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340679054",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Regarding the naming: TestShell or TestDriver as suggested by @jnewbery and echoed by @jamesob are both clearer names than TestWrapper IMO :)\r\n\r\nMany thanks for all the naming ideas, so it seems like TestShell / TestDriver are the leading candidates? (I sorta like TestShell because it implies an interactive interface?)",
      "created_at" : "2019-10-30T15:21:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547960860",
      "id" : 547960860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk2MDg2MA==",
      "updated_at" : "2019-10-30T15:21:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547960860",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340714099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340714099"
         }
      },
      "author_association" : "NONE",
      "body" : "Thank you, I have added it to the PR description.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-30T16:09:25Z",
      "diff_hunk" : "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340714099",
      "id" : 340714099,
      "in_reply_to_id" : 340033351,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDcxNDA5OQ==",
      "original_commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "original_position" : 26,
      "path" : "doc/test-wrapper.md",
      "position" : 26,
      "pull_request_review_id" : 309331957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-30T16:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340714099",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Since we're discussing names, can offer up `TestConsole` as well (and give some love to the `TestREPL` suggestion.)",
      "created_at" : "2019-10-30T16:35:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547997570",
      "id" : 547997570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk5NzU3MA==",
      "updated_at" : "2019-10-30T16:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547997570",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, let's go ahead and pick a name. \"Wrapper\" is a bit too general and I am fine with any of the previous other suggestions.",
      "created_at" : "2019-10-30T17:24:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-548021050",
      "id" : 548021050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODAyMTA1MA==",
      "updated_at" : "2019-10-30T17:24:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548021050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341305354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341305354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is better as a `print()` which gets displayed to the user immediately. The log context is for what's happening inside the test, not for a user accidentally re-calling the setup message.",
      "commit_id" : "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "created_at" : "2019-10-31T18:36:27Z",
      "diff_hunk" : "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341305354",
      "id" : 341305354,
      "in_reply_to_id" : 340324672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTMwNTM1NA==",
      "original_commit_id" : "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "original_position" : 33,
      "path" : "test/functional/test_framework/test_wrapper.py",
      "position" : 33,
      "pull_request_review_id" : 310101188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
      "updated_at" : "2019-10-31T18:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341305354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thank you everybody for your reviews and comments! \r\n\r\n- **Nits and fixes:** Have been addressed.\r\n- **Naming:** May I suggest to move ahead with `TestShell`? `TestREPL` also seemed popular but awkward in camel case? (As per @fjahr's [comment](https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057) to rename, and all subsequent naming suggestions.)\r\n- **Documentation:** `test/functional/README.md` now references `TestShell` as a prototyping tool for tests, and points out the added utility of session logging if available (As per @jnewbery's [comment](https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308807117)).\r\n\r\nMay I suggest some additional changes inspired by @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381) to consolidate settings in a single location.\r\n\r\n- **`TestShell`** now initializes with default test parameters maintained in BitcoinTestFramework. Notable exception is `num_nodes`, which must be set by a child class and defaults to 1.\r\n\r\n- **`TestShell.reset()`** has been added, which allows the user to reset test parameters back to default values between runs.\r\n\r\n- **`test-shell.md`** now includes an overview of test parameter keys which can be passed to `TestShell.setup(key=value)`. The list excludes `portseed` and `pdbonfailure`, which don't seem to apply to this use case.",
      "created_at" : "2019-11-03T20:38:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549176038",
      "id" : 549176038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTE3NjAzOA==",
      "updated_at" : "2019-11-03T20:38:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549176038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/26572234?v=4",
         "events_url" : "https://api.github.com/users/jachiang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jachiang/followers",
         "following_url" : "https://api.github.com/users/jachiang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jachiang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jachiang",
         "id" : 26572234,
         "login" : "jachiang",
         "node_id" : "MDQ6VXNlcjI2NTcyMjM0",
         "organizations_url" : "https://api.github.com/users/jachiang/orgs",
         "received_events_url" : "https://api.github.com/users/jachiang/received_events",
         "repos_url" : "https://api.github.com/users/jachiang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jachiang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jachiang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jachiang"
      }
   }
]
