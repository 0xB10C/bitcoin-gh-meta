[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17265](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17265.html) (Remove OpenSSL by fanquake)\n* [#12557](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12557.html) ([WIP] 64 bit iOS device support by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-10-27T02:24:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546655782",
      "id" : 546655782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjY1NTc4Mg==",
      "updated_at" : "2019-10-28T20:10:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546655782",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r339333532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339333532"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To also have CPU features bits for other architectures (on Linux) you could include `getauxval(AT_HWCAP)` and `getauxval(AT_HWCAP2)`.\r\n(maybe some other `getauxval` are relevant too, e.g. `AT_RANDOM` has 16 bytes of random data)",
      "commit_id" : "832959da993f1493c1872cf7a2a2e0301bed64bb",
      "created_at" : "2019-10-27T09:39:41Z",
      "diff_hunk" : "@@ -0,0 +1,295 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/sha512.h>\n+#include <vector>\n+#include <support/cleanse.h>\n+#include <climits>\n+#include <thread>\n+#include <string.h>\n+\n+#include <util/time.h> // for GetTime()\n+\n+#ifdef WIN32\n+#include <compat.h> // for Windows API\n+#else\n+#include <sys/time.h>\n+#include <sys/resource.h>\n+#include <sys/types.h>\n+#include <sys/utsname.h>\n+#include <sys/socket.h>\n+#include <sys/stat.h>\n+#include <ifaddrs.h>\n+#include <fcntl.h>\n+#include <netinet/ip.h>\n+#include <unistd.h>\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#include <cpuid.h>\n+#endif\n+\n+namespace {\n+\n+void RandAddSeedPerfmon(CSHA512& hasher)\n+{\n+#ifdef WIN32\n+    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n+    // Seed with the entire set of perfmon data\n+\n+    // This can take up to 2 seconds, so only do it every 10 minutes\n+    static int64_t nLastPerfmon;\n+    if (GetTime() < nLastPerfmon + 10 * 60)\n+        return;\n+    nLastPerfmon = GetTime();\n+\n+    std::vector<unsigned char> vData(250000, 0);\n+    long ret = 0;\n+    unsigned long nSize = 0;\n+    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n+    while (true) {\n+        nSize = vData.size();\n+        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n+        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n+            break;\n+        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n+    }\n+    RegCloseKey(HKEY_PERFORMANCE_DATA);\n+    if (ret == ERROR_SUCCESS) {\n+        hasher.Write(vData.data(), nSize);\n+        memory_cleanse(vData.data(), nSize);\n+    } else {\n+        // Performance data is only a best-effort attempt at improving the\n+        // situation when the OS randomness (and other sources) aren't\n+        // adequate. As a result, failure to read it is isn't considered critical,\n+        // so we don't call RandFailure().\n+        // TODO: Add logging when the logger is made functional before global\n+        // constructors have been invoked.\n+    }\n+#endif\n+}\n+\n+/** Helper to easily feed data into a CSHA512.\n+ *\n+ * Note that this does not serialize the passed object (like stream.h's << operators do).\n+ * Its raw memory representation is used directly.\n+ */\n+template<typename T>\n+CSHA512& operator<<(CSHA512& hasher, const T& data) {\n+    hasher.Write((const unsigned char*)&data, sizeof(data));\n+    return hasher;\n+}\n+\n+#ifndef WIN32\n+void AddSockaddr(CSHA512& hasher, const struct sockaddr *addr)\n+{\n+    if (addr == nullptr) return;\n+    switch (addr->sa_family) {\n+    case AF_INET:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\n+        break;\n+    case AF_INET6:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\n+        break;\n+    default:\n+        hasher.Write((const unsigned char*)&addr->sa_family, sizeof(addr->sa_family));\n+    }\n+}\n+\n+void AddStat(CSHA512& hasher, const struct stat& sb)\n+{\n+    hasher << sb.st_dev << sb.st_ino << sb.st_mode << sb.st_nlink << sb.st_uid << sb.st_gid << sb.st_size << sb.st_blksize << sb.st_blocks << sb.st_atime << sb.st_mtime << sb.st_ctime;\n+}\n+\n+void AddFile(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb;\n+    int f = open(path, O_RDONLY);\n+    if (f != -1) {\n+        unsigned char fbuf[1024];\n+        int n;\n+        hasher.Write((const unsigned char*)&f, sizeof(f));\n+        if (fstat(f, &sb) == 0) {\n+            AddStat(hasher, sb);\n+        }\n+        do {\n+            n = read(f, fbuf, sizeof(fbuf));\n+            if (n > 0) hasher.Write(fbuf, n);\n+            /* not bothering with EINTR handling. */\n+        } while (n == sizeof(fbuf));\n+        close(f);\n+    }\n+}\n+\n+void AddPath(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb;\n+    if (stat(path, &sb) == 0) {\n+        hasher.Write((const unsigned char*)path, strlen(path) + 1);\n+        AddStat(hasher, sb);\n+    }\n+}\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+void GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+    // We can't use __get_cpuid as it doesn't support subleafs.\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+    __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n+void AddCPUID(CSHA512& hasher)\n+{\n+    uint32_t ax, bx, cx, dx;\n+    GetCPUID(0, 0, ax, bx, cx, dx);\n+    hasher << ax << bx << cx << dx;\n+    uint32_t max = ax;\n+    for (uint32_t leaf = 1; leaf < max; ++leaf) {\n+        for (uint32_t subleaf = 0;; ++subleaf) {\n+            GetCPUID(leaf, subleaf, ax, bx, cx, dx);\n+            hasher << leaf << subleaf << ax << bx << cx << dx;\n+            // Iterate over subleaves for leaf 4, 11, 13\n+            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n+            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n+            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+        }\n+    }\n+}\n+#endif\n+} // namespace\n+\n+void RandAddDynamicEnv(CSHA512& hasher)\n+{\n+    RandAddSeedPerfmon(hasher);\n+\n+#ifdef WIN32\n+    FILETIME ftime;\n+    GetSystemTimeAsFileTime(&ftime);\n+    hasher << ftime;\n+#else\n+    struct timespec ts;\n+    clock_gettime(CLOCK_MONOTONIC, &ts);\n+    struct timeval tv;\n+    gettimeofday(&tv, nullptr);\n+    hasher << ts.tv_sec << ts.tv_nsec << tv.tv_sec << tv.tv_usec;\n+\n+    // Current resource usage.\n+    struct rusage usage;\n+    if (getrusage(RUSAGE_SELF, &usage) == 0) {\n+        hasher << usage.ru_utime.tv_sec << usage.ru_utime.tv_usec << usage.ru_stime.tv_sec << usage.ru_stime.tv_usec;\n+        hasher << usage.ru_maxrss << usage.ru_minflt << usage.ru_majflt << usage.ru_inblock << usage.ru_oublock;\n+        hasher << usage.ru_nvcsw << usage.ru_nivcsw;\n+    }\n+#endif\n+\n+}\n+\n+void RandAddStaticEnv(CSHA512& hasher)\n+{\n+    // Some compile-time static properties\n+    uint32_t x;\n+    x = ((CHAR_MIN < 0) << 30) + (sizeof(void *) << 16) + (sizeof(long) << 8) + sizeof(int);\n+    hasher << x;\n+#if defined(__GNUC__) && defined(__GNUC_MINOR__) && defined(__GNUC_PATCHLEVEL__)\n+    x = (__GNUC_PATCHLEVEL__ << 16) + (__GNUC_MINOR__ << 8) + __GNUC__;\n+    hasher << x;\n+#endif\n+#if defined(_MSC_VER)\n+    x = _MSC_VER;\n+    hasher << x;\n+#endif\n+#if defined(__STDC_VERSION__)\n+    x = __STDC_VERSION__;\n+    hasher << x;\n+#endif\n+#if defined(_XOPEN_VERSION)\n+    x = _XOPEN_VERSION;\n+    hasher << x;\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    AddCPUID(hasher);\n+#endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r339333532",
      "id" : 339333532,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTMzMzUzMg==",
      "original_commit_id" : "0c6d5cb1f7fcf00fb7a900e5f5a1f2e1e2a49978",
      "original_position" : 218,
      "path" : "src/randomenv.cpp",
      "position" : 285,
      "pull_request_review_id" : 307563127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270",
      "updated_at" : "2019-10-29T17:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339333532",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Errors on MacOSX (looks like it doesn't have `environ` and `CLOCK_MONOTONIC`):\r\n```\r\nandomenv.cpp:177:19: error: use of undeclared identifier 'CLOCK_MONOTONIC'\r\n    clock_gettime(CLOCK_MONOTONIC, &ts);\r\nrandomenv.cpp:222:64: error: use of undeclared identifier 'environ'\r\n    hasher << &x << &RandAddStaticEnv << &malloc << &errno << &environ << addr;                                                \r\nrandomenv.cpp:282:9: error: use of undeclared identifier 'environ'\r\n    if (environ) {\r\nrandomenv.cpp:283:28: error: use of undeclared identifier 'environ'\r\n        for (size_t i = 0; environ[i]; ++i) {\r\nrandomenv.cpp:284:48: error: use of undeclared identifier 'environ'; did you mean 'union'?\r\n            hasher.Write((const unsigned char*)environ[i], strlen(environ[i]));\r\n                                               ^~~~~~~\r\n                                               union\r\nrandomenv.cpp:284:48: error: expected expression\r\nrandomenv.cpp:284:67: error: use of undeclared identifier 'environ'\r\n            hasher.Write((const unsigned char*)environ[i], strlen(environ[i]));\r\n                                                                 ^\r\n7 errors generated.\r\n```",
      "created_at" : "2019-10-27T10:19:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546680696",
      "id" : 546680696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjY4MDY5Ng==",
      "updated_at" : "2019-10-27T10:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546680696",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r339361181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339361181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, added!",
      "commit_id" : "832959da993f1493c1872cf7a2a2e0301bed64bb",
      "created_at" : "2019-10-27T20:05:19Z",
      "diff_hunk" : "@@ -0,0 +1,295 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/sha512.h>\n+#include <vector>\n+#include <support/cleanse.h>\n+#include <climits>\n+#include <thread>\n+#include <string.h>\n+\n+#include <util/time.h> // for GetTime()\n+\n+#ifdef WIN32\n+#include <compat.h> // for Windows API\n+#else\n+#include <sys/time.h>\n+#include <sys/resource.h>\n+#include <sys/types.h>\n+#include <sys/utsname.h>\n+#include <sys/socket.h>\n+#include <sys/stat.h>\n+#include <ifaddrs.h>\n+#include <fcntl.h>\n+#include <netinet/ip.h>\n+#include <unistd.h>\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#include <cpuid.h>\n+#endif\n+\n+namespace {\n+\n+void RandAddSeedPerfmon(CSHA512& hasher)\n+{\n+#ifdef WIN32\n+    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n+    // Seed with the entire set of perfmon data\n+\n+    // This can take up to 2 seconds, so only do it every 10 minutes\n+    static int64_t nLastPerfmon;\n+    if (GetTime() < nLastPerfmon + 10 * 60)\n+        return;\n+    nLastPerfmon = GetTime();\n+\n+    std::vector<unsigned char> vData(250000, 0);\n+    long ret = 0;\n+    unsigned long nSize = 0;\n+    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n+    while (true) {\n+        nSize = vData.size();\n+        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n+        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n+            break;\n+        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n+    }\n+    RegCloseKey(HKEY_PERFORMANCE_DATA);\n+    if (ret == ERROR_SUCCESS) {\n+        hasher.Write(vData.data(), nSize);\n+        memory_cleanse(vData.data(), nSize);\n+    } else {\n+        // Performance data is only a best-effort attempt at improving the\n+        // situation when the OS randomness (and other sources) aren't\n+        // adequate. As a result, failure to read it is isn't considered critical,\n+        // so we don't call RandFailure().\n+        // TODO: Add logging when the logger is made functional before global\n+        // constructors have been invoked.\n+    }\n+#endif\n+}\n+\n+/** Helper to easily feed data into a CSHA512.\n+ *\n+ * Note that this does not serialize the passed object (like stream.h's << operators do).\n+ * Its raw memory representation is used directly.\n+ */\n+template<typename T>\n+CSHA512& operator<<(CSHA512& hasher, const T& data) {\n+    hasher.Write((const unsigned char*)&data, sizeof(data));\n+    return hasher;\n+}\n+\n+#ifndef WIN32\n+void AddSockaddr(CSHA512& hasher, const struct sockaddr *addr)\n+{\n+    if (addr == nullptr) return;\n+    switch (addr->sa_family) {\n+    case AF_INET:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\n+        break;\n+    case AF_INET6:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\n+        break;\n+    default:\n+        hasher.Write((const unsigned char*)&addr->sa_family, sizeof(addr->sa_family));\n+    }\n+}\n+\n+void AddStat(CSHA512& hasher, const struct stat& sb)\n+{\n+    hasher << sb.st_dev << sb.st_ino << sb.st_mode << sb.st_nlink << sb.st_uid << sb.st_gid << sb.st_size << sb.st_blksize << sb.st_blocks << sb.st_atime << sb.st_mtime << sb.st_ctime;\n+}\n+\n+void AddFile(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb;\n+    int f = open(path, O_RDONLY);\n+    if (f != -1) {\n+        unsigned char fbuf[1024];\n+        int n;\n+        hasher.Write((const unsigned char*)&f, sizeof(f));\n+        if (fstat(f, &sb) == 0) {\n+            AddStat(hasher, sb);\n+        }\n+        do {\n+            n = read(f, fbuf, sizeof(fbuf));\n+            if (n > 0) hasher.Write(fbuf, n);\n+            /* not bothering with EINTR handling. */\n+        } while (n == sizeof(fbuf));\n+        close(f);\n+    }\n+}\n+\n+void AddPath(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb;\n+    if (stat(path, &sb) == 0) {\n+        hasher.Write((const unsigned char*)path, strlen(path) + 1);\n+        AddStat(hasher, sb);\n+    }\n+}\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+void GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+    // We can't use __get_cpuid as it doesn't support subleafs.\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+    __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n+void AddCPUID(CSHA512& hasher)\n+{\n+    uint32_t ax, bx, cx, dx;\n+    GetCPUID(0, 0, ax, bx, cx, dx);\n+    hasher << ax << bx << cx << dx;\n+    uint32_t max = ax;\n+    for (uint32_t leaf = 1; leaf < max; ++leaf) {\n+        for (uint32_t subleaf = 0;; ++subleaf) {\n+            GetCPUID(leaf, subleaf, ax, bx, cx, dx);\n+            hasher << leaf << subleaf << ax << bx << cx << dx;\n+            // Iterate over subleaves for leaf 4, 11, 13\n+            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n+            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n+            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+        }\n+    }\n+}\n+#endif\n+} // namespace\n+\n+void RandAddDynamicEnv(CSHA512& hasher)\n+{\n+    RandAddSeedPerfmon(hasher);\n+\n+#ifdef WIN32\n+    FILETIME ftime;\n+    GetSystemTimeAsFileTime(&ftime);\n+    hasher << ftime;\n+#else\n+    struct timespec ts;\n+    clock_gettime(CLOCK_MONOTONIC, &ts);\n+    struct timeval tv;\n+    gettimeofday(&tv, nullptr);\n+    hasher << ts.tv_sec << ts.tv_nsec << tv.tv_sec << tv.tv_usec;\n+\n+    // Current resource usage.\n+    struct rusage usage;\n+    if (getrusage(RUSAGE_SELF, &usage) == 0) {\n+        hasher << usage.ru_utime.tv_sec << usage.ru_utime.tv_usec << usage.ru_stime.tv_sec << usage.ru_stime.tv_usec;\n+        hasher << usage.ru_maxrss << usage.ru_minflt << usage.ru_majflt << usage.ru_inblock << usage.ru_oublock;\n+        hasher << usage.ru_nvcsw << usage.ru_nivcsw;\n+    }\n+#endif\n+\n+}\n+\n+void RandAddStaticEnv(CSHA512& hasher)\n+{\n+    // Some compile-time static properties\n+    uint32_t x;\n+    x = ((CHAR_MIN < 0) << 30) + (sizeof(void *) << 16) + (sizeof(long) << 8) + sizeof(int);\n+    hasher << x;\n+#if defined(__GNUC__) && defined(__GNUC_MINOR__) && defined(__GNUC_PATCHLEVEL__)\n+    x = (__GNUC_PATCHLEVEL__ << 16) + (__GNUC_MINOR__ << 8) + __GNUC__;\n+    hasher << x;\n+#endif\n+#if defined(_MSC_VER)\n+    x = _MSC_VER;\n+    hasher << x;\n+#endif\n+#if defined(__STDC_VERSION__)\n+    x = __STDC_VERSION__;\n+    hasher << x;\n+#endif\n+#if defined(_XOPEN_VERSION)\n+    x = _XOPEN_VERSION;\n+    hasher << x;\n+#endif\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    AddCPUID(hasher);\n+#endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r339361181",
      "id" : 339361181,
      "in_reply_to_id" : 339333532,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTM2MTE4MQ==",
      "original_commit_id" : "0c6d5cb1f7fcf00fb7a900e5f5a1f2e1e2a49978",
      "original_position" : 218,
      "path" : "src/randomenv.cpp",
      "position" : 285,
      "pull_request_review_id" : 307591830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270",
      "updated_at" : "2019-10-29T17:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339361181",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: good idea",
      "created_at" : "2019-10-27T20:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546731211",
      "id" : 546731211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjczMTIxMQ==",
      "updated_at" : "2019-10-27T20:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546731211",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think I've addressed a compatibility/build issues. Can someone try this on OSX, and perhaps some BSD flavor?",
      "created_at" : "2019-10-27T21:34:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546736892",
      "id" : 546736892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjczNjg5Mg==",
      "updated_at" : "2019-10-27T21:34:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546736892",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa, \r\nIt runs....\r\nhttps://github.com/RandyMcMillan/bitcoin/blob/201910_seedrandom/debug.log\r\nhttps://github.com/RandyMcMillan/bitcoin/blob/201910_seedrandom/mojave10.14.6build.txt",
      "created_at" : "2019-10-27T22:43:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546742728",
      "id" : 546742728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Njc0MjcyOA==",
      "updated_at" : "2019-10-27T22:43:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546742728",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "travis-ci > https://travis-ci.org/RandyMcMillan/bitcoin/jobs/603655433",
      "created_at" : "2019-10-27T22:56:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546743659",
      "id" : 546743659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Njc0MzY1OQ==",
      "updated_at" : "2019-10-27T23:00:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546743659",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can someone try this on OSX, and perhaps some BSD flavor?\r\n\r\nI get the following error when building eed8cfec452a538d644844fb96606e6bc24f47c8 on OpenBSD 6.6:\r\n```\r\n  CXX      libbitcoin_util_a-randomenv.o\r\nIn file included from randomenv.cpp:37:\r\n/usr/include/netinet/ip.h:67:19: error: field has incomplete type 'struct in_addr'\r\n        struct    in_addr ip_src, ip_dst; /* source and dest address */\r\n                          ^\r\n/usr/include/netinet/ip.h:67:11: note: forward declaration of 'in_addr'\r\n        struct    in_addr ip_src, ip_dst; /* source and dest address */\r\n                  ^\r\n/usr/include/netinet/ip.h:67:27: error: field has incomplete type 'struct in_addr'\r\n        struct    in_addr ip_src, ip_dst; /* source and dest address */\r\n                                  ^\r\n/usr/include/netinet/ip.h:67:11: note: forward declaration of 'in_addr'\r\n        struct    in_addr ip_src, ip_dst; /* source and dest address */\r\n                  ^\r\n/usr/include/netinet/ip.h:181:19: error: field has incomplete type 'struct in_addr'\r\n                        struct in_addr ipt_addr;\r\n                                       ^\r\n/usr/include/netinet/ip.h:67:11: note: forward declaration of 'in_addr'\r\n        struct    in_addr ip_src, ip_dst; /* source and dest address */\r\n                  ^\r\nrandomenv.cpp:101:57: error: unknown type name 'sockaddr_in'; did you mean 'sockaddr'?\r\n        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\r\n                                                        ^~~~~~~~~~~\r\n                                                        sockaddr\r\n/usr/include/sys/socket.h:207:8: note: 'sockaddr' declared here\r\nstruct sockaddr {\r\n       ^\r\nrandomenv.cpp:104:57: error: unknown type name 'sockaddr_in6'; did you mean 'sockaddr'?\r\n        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\r\n                                                        ^~~~~~~~~~~~\r\n                                                        sockaddr\r\n/usr/include/sys/socket.h:207:8: note: 'sockaddr' declared here\r\nstruct sockaddr {\r\n       ^\r\n5 errors generated.\r\n```",
      "created_at" : "2019-10-28T14:13:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-546964842",
      "id" : 546964842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Njk2NDg0Mg==",
      "updated_at" : "2019-10-28T14:13:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546964842",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Log on FreeBSD 12.0-RELEASE-p10 (same complaint, about `sockaddr`)\r\n<details>\r\n\r\n```\r\nMaking all in src\r\ngmake[1]: Entering directory '/usr/home/user/src/bitcoin/src'\r\ngmake[2]: Entering directory '/usr/home/user/src/bitcoin/src'\r\n  CXX      libbitcoin_util_a-randomenv.o\r\nIn file included from randomenv.cpp:37:\r\n/usr/include/netinet/ip.h:71:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:71:24: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                               ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:188:19: error: field has incomplete type 'struct in_addr'\r\n                        struct in_addr ipt_addr;\r\n                                       ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:223:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ippseudo_src;   /* source internet address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:224:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ippseudo_dst;   /* destination internet address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\nrandomenv.cpp:101:57: error: unknown type name 'sockaddr_in'; did you mean 'sockaddr'?\r\n        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\r\n                                                        ^~~~~~~~~~~\r\n                                                        sockaddr\r\n/usr/include/sys/socket.h:328:8: note: 'sockaddr' declared here\r\nstruct sockaddr {\r\n       ^\r\nrandomenv.cpp:104:57: error: unknown type name 'sockaddr_in6'; did you mean 'sockaddr'?\r\n        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\r\n                                                        ^~~~~~~~~~~~\r\n                                                        sockaddr\r\n/usr/include/sys/socket.h:328:8: note: 'sockaddr' declared here\r\nstruct sockaddr {\r\n       ^\r\n7 errors generated.\r\ngmake[2]: *** [Makefile:8866: libbitcoin_util_a-randomenv.o] Error 1\r\ngmake[2]: Leaving directory '/usr/home/user/src/bitcoin/src'\r\ngmake[1]: *** [Makefile:14135: all-recursive] Error 1\r\ngmake[1]: Leaving directory '/usr/home/user/src/bitcoin/src'\r\ngmake: *** [Makefile:774: all-recursive] Error 1\r\n```\r\n\r\n</details>\r\n",
      "created_at" : "2019-10-28T15:37:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547005320",
      "id" : 547005320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzAwNTMyMA==",
      "updated_at" : "2019-10-28T15:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547005320",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Building freeBSD here: https://cirrus-ci.com/task/5690364417015808\r\n\r\n\r\nEdit: Same error: https://cirrus-ci.com/task/5690364417015808?command=make#L734",
      "created_at" : "2019-10-28T15:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547005637",
      "id" : 547005637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzAwNTYzNw==",
      "updated_at" : "2019-10-28T16:06:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547005637",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Does the comment in `random.h` need to be updated?",
      "created_at" : "2019-10-28T15:50:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547011765",
      "id" : 547011765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzAxMTc2NQ==",
      "updated_at" : "2019-10-28T15:50:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547011765",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Does the comment in random.h need to be updated?\r\n\r\nIf that is updated, you could also cherry-pick https://github.com/bitcoin/bitcoin/pull/17265/commits/770cd9640e8b38d3456527bdf3d84b589cbd3418 out of #17265 which contains some related corrections.",
      "created_at" : "2019-10-28T15:58:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547015568",
      "id" : 547015568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzAxNTU2OA==",
      "updated_at" : "2019-10-28T15:58:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547015568",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "New freeBSD build: https://cirrus-ci.com/task/4712584309112832",
      "created_at" : "2019-10-28T18:41:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547089920",
      "id" : 547089920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzA4OTkyMA==",
      "updated_at" : "2019-10-28T18:45:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547089920",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "New freeBSD build failure: https://cirrus-ci.com/task/4712584309112832?command=make#L761\r\n\r\n<details><summary>log</summary>\r\n\r\n```\r\n/usr/local/bin/ccache c++ -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config   -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I. -I/tmp/cirrus-ci-build/db4/include -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -pthread -I/usr/local/include -I./leveldb/include -I./leveldb/helpers/memenv -I/usr/local/include  -I./secp256k1/include -I./univalue/include -Qunused-arguments  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS  -Wstack-protector -fstack-protector-all -Wall -Wextra -Wformat -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis -Wrange-loop-analysis -Wredundant-decls -Wno-unused-parameter -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register -Wno-implicit-fallthrough    -fPIE -g -O2 -c -o libbitcoin_util_a-randomenv.o `test -f 'randomenv.cpp' || echo './'`randomenv.cpp\r\nIn file included from randomenv.cpp:29:\r\n/usr/include/netinet/ip.h:53:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ip_hl:4,                /* header length */\r\n        ^\r\n/usr/include/netinet/ip.h:60:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ip_tos;                 /* type of service */\r\n        ^\r\n/usr/include/netinet/ip.h:61:2: error: unknown type name 'u_short'; did you mean 'short'?\r\n        u_short ip_len;                 /* total length */\r\n        ^\r\n/usr/include/netinet/ip.h:62:2: error: unknown type name 'u_short'; did you mean 'short'?\r\n        u_short ip_id;                  /* identification */\r\n        ^\r\n/usr/include/netinet/ip.h:63:2: error: unknown type name 'u_short'; did you mean 'short'?\r\n        u_short ip_off;                 /* fragment offset field */\r\n        ^\r\n/usr/include/netinet/ip.h:68:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ip_ttl;                 /* time to live */\r\n        ^\r\n/usr/include/netinet/ip.h:69:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ip_p;                   /* protocol */\r\n        ^\r\n/usr/include/netinet/ip.h:70:2: error: unknown type name 'u_short'; did you mean 'short'?\r\n        u_short ip_sum;                 /* checksum */\r\n        ^\r\n/usr/include/netinet/ip.h:71:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:71:24: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                               ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:174:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ipt_code;               /* IPOPT_TS */\r\n        ^\r\n/usr/include/netinet/ip.h:175:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ipt_len;                /* size of structure (variable) */\r\n        ^\r\n/usr/include/netinet/ip.h:176:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ipt_ptr;                /* index of current entry */\r\n        ^\r\n/usr/include/netinet/ip.h:178:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char  ipt_flg:4,              /* flags, see below */\r\n        ^\r\n/usr/include/netinet/ip.h:188:19: error: field has incomplete type 'struct in_addr'\r\n                        struct in_addr ipt_addr;\r\n                                       ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:223:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ippseudo_src;   /* source internet address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:224:17: error: field has incomplete type 'struct in_addr'\r\n        struct  in_addr ippseudo_dst;   /* destination internet address */\r\n                        ^\r\n/usr/include/netinet/ip.h:71:9: note: forward declaration of 'in_addr'\r\n        struct  in_addr ip_src,ip_dst;  /* source and dest address */\r\n                ^\r\n/usr/include/netinet/ip.h:225:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char          ippseudo_pad;   /* pad, must be zero */\r\n        ^\r\n/usr/include/netinet/ip.h:226:2: error: unknown type name 'u_char'; did you mean 'char'?\r\n        u_char          ippseudo_p;     /* protocol */\r\n        ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n20 errors generated.\r\ngmake[2]: *** [Makefile:8866: libbitcoin_util_a-randomenv.o] Error 1\r\ngmake[2]: Leaving directory '/tmp/cirrus-ci-build/src'\r\ngmake[1]: *** [Makefile:14135: install-recursive] Error 1\r\ngmake[1]: Leaving directory '/tmp/cirrus-ci-build/src'\r\ngmake: *** [Makefile:774: install-recursive] Error 1\r\nExit status: 2\r\n```\r\n\r\n</details>",
      "created_at" : "2019-10-28T19:28:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547108271",
      "id" : 547108271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzEwODI3MQ==",
      "updated_at" : "2019-10-28T19:28:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547108271",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "new build :pray: https://cirrus-ci.com/task/6286311933083648",
      "created_at" : "2019-10-28T20:49:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547139733",
      "id" : 547139733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzEzOTczMw==",
      "updated_at" : "2019-10-28T20:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547139733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Hmm, \"checking whether sysctlbyname is declared... no\". Does FreeBSD not have `sysctlbyname`?",
      "created_at" : "2019-10-28T21:09:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547146948",
      "id" : 547146948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzE0Njk0OA==",
      "updated_at" : "2019-10-28T21:09:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547146948",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> MarcoFalke Hmm, \"checking whether sysctlbyname is declared... no\". Does FreeBSD not have sysctlbyname?\r\n\r\nIt does, looks like you'll just need to include `sys/types.h` as well. See the [sysctlbyname docs](http://nixdoc.net/man-pages/FreeBSD/man3/sysctlbyname.3.html).\r\n\r\nAfter including `sys/types.h`I've tested using `12.0-RELEASE-p6` and see `sysctlbyname is declared... yes`.",
      "created_at" : "2019-10-28T22:19:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547170020",
      "id" : 547170020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzE3MDAyMA==",
      "updated_at" : "2019-10-28T22:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547170020",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "New build: https://cirrus-ci.com/task/5389706841292800",
      "created_at" : "2019-10-29T13:40:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547424674",
      "id" : 547424674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQyNDY3NA==",
      "updated_at" : "2019-10-29T13:40:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547424674",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I have to review more closely, but how do we detect situations \"where system entropy is somehow broken\"? Are these sources now unconditionally rolled into our seeding process?",
      "created_at" : "2019-10-29T16:02:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547497557",
      "id" : 547497557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQ5NzU1Nw==",
      "updated_at" : "2019-10-29T16:02:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547497557",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jamesob They're undetectable in general.\n\nTo clarify: I mean situations where system entropy is broken, for example because /dev/urandum is initialized to just 2^32 possible states and nothing new is fed into it.  An attacker who knows this could predict the random numbers you're going to generate, by simply looping over all 2^32 possibilities and comparing them with your output.\n\nThis is generally not detectable, unless it's a very extreme case (with no entropy whatsoever, say, and all reads from /dev/urandom or similar produce the same output). There is also not anything we can do to fix it; it's a terrible bug if it happens, but fixing it requires discovering and fixing the root cause.\n\nWhat this PR does is add in a bunch of environment data (e.g. interrupt statistics, resource usage statistics, pids, ...) that would make the situation slightly less bad in such a case - perhaps enough to make it non-attackable. But it's not a fix.",
      "created_at" : "2019-10-29T16:05:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547499248",
      "id" : 547499248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQ5OTI0OA==",
      "updated_at" : "2019-10-29T17:05:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547499248",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r340200295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340200295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you sure you don't need to keep `if defined(USE_ASM)` around for `void Transform(`?",
      "commit_id" : "832959da993f1493c1872cf7a2a2e0301bed64bb",
      "created_at" : "2019-10-29T16:51:45Z",
      "diff_hunk" : "@@ -8,15 +8,14 @@\n #include <assert.h>\n #include <string.h>\n \n+#include <compat/cpuid.h>\n+\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-#if defined(USE_ASM)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r340200295",
      "id" : 340200295,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDIwMDI5NQ==",
      "original_commit_id" : "35cfbf75871da0833c6bdd32a9ccc0114506de01",
      "original_position" : 7,
      "path" : "src/crypto/sha256.cpp",
      "position" : 7,
      "pull_request_review_id" : 308673063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270",
      "updated_at" : "2019-10-29T17:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340200295",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For obviously broken cases (e.g. the random number generator returns a constant) it is possible to detect it with automated tools that apply heuristics such as those described in https://web.archive.org/web/20110602194701/http://users.eecs.northwestern.edu/~nickle/310/2010/headRuns.pdf . However, these tools can only hint at potential problems and never certify correctness. See https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-22r1a.pdf for an example of such a tool. That tool only works for long sequences, so it doesn't seem applicable to the sources added here... Not to mention the randomness sources added in this pull request are non-cryptographic, so any slightly sane tool would immediately yell at them.",
      "created_at" : "2019-10-29T17:27:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547538883",
      "id" : 547538883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzUzODg4Mw==",
      "updated_at" : "2019-10-29T17:27:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547538883",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r340246307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340246307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "832959da993f1493c1872cf7a2a2e0301bed64bb",
      "created_at" : "2019-10-29T18:14:21Z",
      "diff_hunk" : "@@ -8,15 +8,14 @@\n #include <assert.h>\n #include <string.h>\n \n+#include <compat/cpuid.h>\n+\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-#if defined(USE_ASM)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#discussion_r340246307",
      "id" : 340246307,
      "in_reply_to_id" : 340200295,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDI0NjMwNw==",
      "original_commit_id" : "35cfbf75871da0833c6bdd32a9ccc0114506de01",
      "original_position" : 7,
      "path" : "src/crypto/sha256.cpp",
      "position" : 7,
      "pull_request_review_id" : 308731736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17270",
      "updated_at" : "2019-10-29T18:14:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340246307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A bunch of updates over the past days:\r\n* Cherry-picked https://github.com/bitcoin/bitcoin/commit/770cd9640e8b38d3456527bdf3d84b589cbd3418\r\n* Added a moveonly commit to merge the cpuid code in random and crypto/sha256, making it reusable for randomenv.\r\n* Added a commit to use `getauxval` on Linux.\r\n* Added a commit to use `sysctlbyname` on BSD/MacOS.\r\n* Added a commit to make sure dynamic env seeders do not run more than once per minute, and added a scheduled task to make sure they do get run occasionally.\r\n* Added a commit to fix a bug in the perfmon seeder (now that it can be called from multiple threads, it may need an atomic to track the previous run time).\r\n",
      "created_at" : "2019-10-29T19:42:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547596533",
      "id" : 547596533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzU5NjUzMw==",
      "updated_at" : "2019-10-29T21:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547596533",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A reminder that this sort of thing is important:  Some ryzen cpus rng returns a constant (and success), and in default configs linux relies on it for many purposes (I think, /dev/random in current default kernel configs mostly manages to dodge the over-reliance, but many other things do-- so it's a narrow miss.)\r\n\r\nhttps://arstechnica.com/gadgets/2019/10/how-a-months-old-amd-microcode-bug-destroyed-my-weekend/",
      "created_at" : "2019-10-29T20:40:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547619465",
      "id" : 547619465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzYxOTQ2NQ==",
      "updated_at" : "2019-10-29T21:00:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547619465",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis error on mingw:\r\n```\r\nrandomenv.cpp: In function âvoid {anonymous}::RandAddSeedPerfmon(CSHA512&)â:\r\nrandomenv.cpp:63:33: error: variable âstd::atomic<long long int> last_perfmonâ has initializer but incomplete type\r\n     static std::atomic<int64_t> last_perfmon{0};\r\n                                 ^~~~~~~~~~~~\r\n```",
      "created_at" : "2019-10-30T13:26:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17270#issuecomment-547901395",
      "id" : 547901395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17270",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzkwMTM5NQ==",
      "updated_at" : "2019-10-30T13:26:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547901395",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
