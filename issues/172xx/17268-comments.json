[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-26T21:28:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-546641071",
      "id" : 546641071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjY0MTA3MQ==",
      "updated_at" : "2019-10-26T21:28:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546641071",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased :+1: ",
      "created_at" : "2019-10-26T21:30:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-546641159",
      "id" : 546641159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjY0MTE1OQ==",
      "updated_at" : "2019-10-26T21:30:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546641159",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16910](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16910.html) (wallet: reduce loading time by using unordered maps by achow101)\n* [#16490](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16490.html) (rpc: Report reason for replaceable txpool transactions by MarcoFalke)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (validation: Tidy up ValidationState interface by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-10-26T22:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-546645680",
      "id" : 546645680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjY0NTY4MA==",
      "updated_at" : "2019-10-29T20:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546645680",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17268#discussion_r339356314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17268"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339356314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This can be replaced by a std::remove_if and a std::erase idiom, which will be of similar behavior (remove_if keeps order stable) and same complexity. Much easier to read and less chance of bugs.",
      "commit_id" : "128748d44aaf37f80f14ff3a680a337d17637903",
      "created_at" : "2019-10-27T18:17:17Z",
      "diff_hunk" : "@@ -173,17 +173,18 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     return std::move(pblocktemplate);\n }\n \n-void BlockAssembler::onlyUnconfirmed(CTxMemPool::setEntries& testSet)\n+void BlockAssembler::onlyUnconfirmed(CTxMemPool::vecEntries& testSet)\n {\n-    for (CTxMemPool::setEntries::iterator iit = testSet.begin(); iit != testSet.end(); ) {\n-        // Only test txs not already in the block\n-        if (inBlock.count(*iit)) {\n-            testSet.erase(iit++);\n-        }\n-        else {\n-            iit++;\n-        }\n+    size_t max_element = testSet.size(), i = 0;\n+    while (i < max_element) {\n+        bool not_in_block = !inBlock.count(testSet[i]);\n+        // if !not_in_block, set testSet[i] to testSet[max_element-1]\n+        max_element -= !not_in_block;\n+        testSet[i] = testSet[!not_in_block*max_element + not_in_block*i];\n+        i += not_in_block;\n     }\n+    // drop erased elements\n+    testSet.resize(max_element);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#discussion_r339356314",
      "id" : 339356314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTM1NjMxNA==",
      "original_commit_id" : "7f7f7a2fbbc98314f628189a8bbbc73048a4e21b",
      "original_position" : 24,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_review_id" : 307587120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17268",
      "updated_at" : "2019-10-27T18:22:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339356314",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17268#discussion_r339356418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17268"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339356418"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "std::binary_search on a std::set takes `O(N log N)` because std::advance on the iterators is `O(N)`.\r\n\r\nTo fix this, allow passing in a predicate that knows how to query alreadyAdded efficient. Other options would be to make alreadyAdded a sorted vector or make it a hashtable always. But that's a bigger change than the predicate, which doesn't change any data types.",
      "commit_id" : "128748d44aaf37f80f14ff3a680a337d17637903",
      "created_at" : "2019-10-27T18:19:57Z",
      "diff_hunk" : "@@ -230,16 +231,21 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     }\n }\n \n-int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n+template<typename SortedIterable>\n+int BlockAssembler::UpdatePackagesForAdded(const SortedIterable& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n     int nDescendantsUpdated = 0;\n+    CTxMemPool::vecEntries descendants;\n     for (CTxMemPool::txiter it : alreadyAdded) {\n-        CTxMemPool::setEntries descendants;\n-        mempool.CalculateDescendants(it, descendants);\n+        descendants.clear();\n+        // can't use external epoch to loop because we want to update\n+        // all descendants\n+        // No need to add self (it) because we would filter it from the loop\n+        mempool.CalculateDescendantsVec(it, descendants);\n         // Insert all descendants (not yet in block) into the modified set\n         for (CTxMemPool::txiter desc : descendants) {\n-            if (alreadyAdded.count(desc))\n+            if (std::binary_search(alreadyAdded.cbegin(), alreadyAdded.cend(), desc, CTxMemPool::CompareIteratorByHash()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#discussion_r339356418",
      "id" : 339356418,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTM1NjQxOA==",
      "original_commit_id" : "7f7f7a2fbbc98314f628189a8bbbc73048a4e21b",
      "original_position" : 59,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_review_id" : 307587120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17268",
      "updated_at" : "2019-10-27T18:22:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339356418",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added some changes as per suggestion from @TheBlueMatt, which should make reviewing the final state easier.\r\n\r\nThe epochs are no longer stored on the stack (instead we reference them via the mempool itself) and we use a scoped stack guard in order to ensure that only one part of the code is using epochs at a time. This prevents a called function from creating an epoch guard (via assertion). While there is occasionally use for a multiple outstanding epochs, none are implemented currently. If it comes up in the future it can be special cased.",
      "created_at" : "2019-10-28T19:51:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-547117050",
      "id" : 547117050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzExNzA1MA==",
      "updated_at" : "2019-10-28T19:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547117050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I just opened up #17292, which adds a motivating benchmark for the Epoch Mempool.\r\n\r\n`./src/bench/bench_bitcoin --filter=ComplexMemPool --scaling=5`\r\n\r\nBefore:\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 5, 6.62715, 0.264409, 0.265441, 0.2654\r\n```\r\nAfter:\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 5, 3.07116, 0.122246, 0.12351, 0.122783\r\n```\r\n\r\nThis shows a **> 2x speedup** on this difficult benchmark (~2.15x across total, min, max, median).\r\n\r\n\r\nNote: For scientific purity, I created it \"single shot blind\". That is, I did not modify the test at all after running it on the new branch (I had to run it on master to fix bugs / adjust the expected iters for a second parameter, and then adjust the internal params to get it to be about a second).",
      "created_at" : "2019-10-28T23:23:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-547188487",
      "id" : 547188487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzE4ODQ4Nw==",
      "updated_at" : "2019-10-28T23:23:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547188487",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I ran the test against master, changing the parameter on number transactions. For this test, the 2x improvement seems to hold. They both seem to be quadratic fundamentally, but that may be a reflection of the test setup and not the actual upper bound.\r\n\r\n![image](https://user-images.githubusercontent.com/886523/67787134-46cfb300-fa2d-11e9-8bff-ea5dcfa0b1ec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/886523/67787818-7337ff00-fa2e-11e9-97f8-d97bb329dc76.png)\r\n\r\n",
      "created_at" : "2019-10-29T16:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-547511193",
      "id" : 547511193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzUxMTE5Mw==",
      "updated_at" : "2019-10-29T16:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547511193",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems like a moderately important area for optimization.  One thing that might be worth keeping in mind:  It would probably be useful to support a \"fast but imprecise\" accounting method for the first block template after a new block.  This is really easy to do with the current code (just skip updating the costs while inserting transactions), not sure if your work would change that.\r\n\r\n[Aside, usually when talking about improving asymptotic complexity people ignore constant factors. You might want to use different language when describing this work to avoid confusing people.]\r\n\r\nIn theory, I think the common case where confirmation includes an entire disjoint subgraph at once it should be possible to make that linear time (by basically noticing that the entire subgraph is removed, so any cost updates can be skipped).  Interestingly: for attack resistance the worst case (permitted by policy) is what matters... but for revenue reasons the average case is more important.\r\n\r\nI'm not sure if there are greater wins though from speedups or from latency hiding hacks. e.g. if one keeps a small redundant highest fee only mempool perhaps without CPFP dependency tracking at all, and uses it while the real stuff is updating in the background... then it probably doesn't matter that much if the main mempool is taking tens of seconds.",
      "created_at" : "2019-10-29T21:24:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17268#issuecomment-547635956",
      "id" : 547635956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17268",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzYzNTk1Ng==",
      "updated_at" : "2019-10-29T21:24:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547635956",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
