[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it known to be true that every call to LogPrint has no expressions with\nside effects?\n\nOn Tue, Oct 22, 2019, 11:28 AM Jeffrey Czyz <notifications@github.com>\nwrote:\n\n> Calling LogPrint with a category that is not enabled results in\n> evaluating the remaining function arguments, which may be arbitrarily\n> complex (and possibly expensive) expressions. Defining LogPrint as a\n> macro prevents this unnecessary expression evaluation.\n>\n> This is a partial revert of #14209\n> <https://github.com/bitcoin/bitcoin/pull/14209>. The decision to revert\n> is discussed\n> in #16688 <https://github.com/bitcoin/bitcoin/pull/16688>, which adds\n> verbose logging for validation event notification.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/bitcoin/bitcoin/pull/17218\n> Commit Summary\n>\n>    - Replace the LogPrint function with a macro\n>\n> File Changes\n>\n>    - *M* src/logging.h\n>    <https://github.com/bitcoin/bitcoin/pull/17218/files#diff-0> (12)\n>\n> Patch Links:\n>\n>    - https://github.com/bitcoin/bitcoin/pull/17218.patch\n>    - https://github.com/bitcoin/bitcoin/pull/17218.diff\n>\n> â\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/17218?email_source=notifications&email_token=AAGYN67LZZ4C7NCSPBAFEVDQP5A4VA5CNFSM4JDTSZXKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HTSVB2A>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGYN67C6XATDCTWFXGPE6TQP5A4VANCNFSM4JDTSZXA>\n> .\n>\n",
      "created_at" : "2019-10-22T18:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545104442",
      "id" : 545104442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTEwNDQ0Mg==",
      "updated_at" : "2019-10-22T18:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545104442",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337702226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337702226"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just a suggestion, but it might be good to leave existing LogPrint function alone, and instead just add a new `LOG_CATEGORY(category, format, ...)` macro. This would avoid issue the Jeremy raised about side effects in existing code, and also be nicer in my opinion because uppercase naming would be more consistent with other macros.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T19:16:14Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337702226",
      "id" : 337702226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzcwMjIyNg==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305446649,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T20:45:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337702226",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337705213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337705213"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to see a developer comment to explain why this is a macro (not a function like `LogPrintf` just a few lines up).\r\n\r\noptional: You may install `clang-format` and run the https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy script to align the newline continuation chars `\\`.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T19:23:26Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337705213",
      "id" : 337705213,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzcwNTIxMw==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305450473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T20:45:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337705213",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is this a pure optimisation PR, or can we think of reasons beyond that?\r\n\r\nDo we have any examples of slow `LogPrint(â¦)` calls where this would make a significant difference?\r\n\r\nCan we benchmark this in any way?\r\n",
      "created_at" : "2019-10-22T20:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545131818",
      "id" : 545131818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTEzMTgxOA==",
      "updated_at" : "2019-10-22T20:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545131818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337741803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337741803"
         }
      },
      "author_association" : "NONE",
      "body" : "Done in 8734c85.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T20:47:08Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337741803",
      "id" : 337741803,
      "in_reply_to_id" : 337705213,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzc0MTgwMw==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305497516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T20:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337741803",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337746958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337746958"
         }
      },
      "author_association" : "NONE",
      "body" : "My feeling is that providing two ways to log where one is subtly different than the other adds unnecessary cognitive load to readers and reviewers. Will address Jeremey's comment in a follow-up.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T20:58:23Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337746958",
      "id" : 337746958,
      "in_reply_to_id" : 337702226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzc0Njk1OA==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305504169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T20:58:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337746958",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've thought about it a bit and I think for the reason I gave above I'd\nwant to NACK this change.\n\nIf there are motivating examples for not evaluating the calls, they should\nbe fixed one by one.\n\nIt would also seem like perfect forwarding and inline can help with some of\nthese concerns too to nudge the compiler to defer constructing strings or\nwhatever.\n\nOn Tue, Oct 22, 2019, 1:47 PM Jeffrey Czyz <notifications@github.com> wrote:\n\n> *@jkczyz* commented on this pull request.\n> ------------------------------\n>\n> In src/logging.h\n> <https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337741803>:\n>\n> > @@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n>      }\n>  }\n>\n> -template <typename... Args>\n> -static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n> -{\n> -    if (LogAcceptCategory((category))) {\n> -        LogPrintf(args...);\n> -    }\n> -}\n> +#define LogPrint(category, ...) do { \\\n>\n> Done in 8734c85\n> <https://github.com/bitcoin/bitcoin/commit/8734c856f85cb506fa97596383dd7e7b9edd7e03>\n> .\n>\n> â\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/17218?email_source=notifications&email_token=AAGYN6ZCEVD7RSKFT4WLQPTQP5RGBA5CNFSM4JDTSZXKYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCI2YLLA#discussion_r337741803>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGYN636IOUCRCYGJ2VKPFDQP5RGBANCNFSM4JDTSZXA>\n> .\n>\n",
      "created_at" : "2019-10-22T21:01:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545153543",
      "id" : 545153543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTE1MzU0Mw==",
      "updated_at" : "2019-10-22T21:01:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545153543",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Is it known to be true that every call to LogPrint has no expressions with side effects?\r\n\r\nI grepped over call sites to check if anything suspicious stood out, but I did not thoroughly check if each expression was free of side effects.\r\n\r\nNote that this PR simply reverts the unintended behavioral change of #14209. Any side effects would have been introduced by that PR or subsequent changes.\r\n\r\n> If there are motivating examples for not evaluating the calls, they should\r\nbe fixed one by one.\r\n\r\nThe motivating example is #16688. I think this change is relatively low risk and restores the previous behavior of `LogPrint`. The alternative of adding a separate logging function would move the codebase into a worse state, IMHO. That should be weighed against the perceived risk of removing any unintended side effects.\r\n\r\n> It would also seem like perfect forwarding and inline can help with some of\r\nthese concerns too to nudge the compiler to defer constructing strings or\r\nwhatever.\r\n\r\nI don't believe perfect forwarding will prevent an argument expression from being evaluated, which is the reason for the PR. The compiler is also free to ignore `inline`.",
      "created_at" : "2019-10-22T22:00:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545174764",
      "id" : 545174764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTE3NDc2NA==",
      "updated_at" : "2019-10-22T22:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545174764",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Is this a pure optimisation PR, or can we think of reasons beyond that?\r\n> \r\n> Do we have any examples of slow `LogPrint(â¦)` calls where this would make a significant difference?\r\n> \r\n> Can we benchmark this in any way?\r\n\r\nI see it more as restoring the previous behavior of only paying for the logging that you want. Thus, anyone is free to add very verbose logging to their module without others incurring a cost when logging for that category isn't enabled.",
      "created_at" : "2019-10-22T22:19:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545180347",
      "id" : 545180347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTE4MDM0Nw==",
      "updated_at" : "2019-10-22T22:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545180347",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337775930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337775930"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> My feeling is that providing two ways to log where one is subtly different than the other adds unnecessary cognitive load to readers and reviewers. Will address Jeremey's comment in a follow-up.\r\n\r\nIf the concern is cognitive load, I'd think the current:\r\n\r\n- `LogPrintf` - log unconditionally\r\n- `LogPrint` - log for category\r\n\r\nis more confusing than what I'm proposing:\r\n\r\n- `LogPrintf` - log unconditionally\r\n- `LOG_CATEGORY` - log for category with macro magic\r\n\r\nBut if it would take a long time to deprecate `LogPrint` (not sure why it would), then I agree inconsistency would not look nice in the interim.\r\n\r\nI don't feel strongly any way about this, so please ignore this suggestion if doesn't suit you.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T22:19:05Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337775930",
      "id" : 337775930,
      "in_reply_to_id" : 337702226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzc3NTkzMA==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305541239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T22:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337775930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337779900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337779900"
         }
      },
      "author_association" : "NONE",
      "body" : "Ah, I thought you were suggesting `LogPrint`, `LogPrintf`, and `LOG_CATEGORY`.\r\n\r\nI'm not completely opposed to changing call sites to `LOG_CATEGORY` (and checking for side effects in the process). But I would like to be sure such a change would be welcome before putting in the work. :)",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-22T22:34:02Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337779900",
      "id" : 337779900,
      "in_reply_to_id" : 337702226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzc3OTkwMA==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305546338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-22T22:34:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337779900",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah didn't catch that it's reverting behavior.\n\nI think that given that it's a revert it's more ok.\n\nIt's tricky to tell by glance if there are no side effects because of\natomics autoderef loading and stuff, which is why I felt it deserves\ncareful consideration.\n\nI don't care to bikeshed too much, but I think that making it IF_CAT(cat,\nexpr) would be semantic in terms of implying the arguments may not be\nevaluated, and then expr can be an unconditional Logprint. But that's a few\nextra characters... I wouldn't object if expr is passed to LogPrint in the\nmacro, but feel it's a bit harder to comprehend at a glance.\n\nOn Tue, Oct 22, 2019, 3:34 PM Jeffrey Czyz <notifications@github.com> wrote:\n\n> *@jkczyz* commented on this pull request.\n> ------------------------------\n>\n> In src/logging.h\n> <https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337779900>:\n>\n> > @@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n>      }\n>  }\n>\n> -template <typename... Args>\n> -static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n> -{\n> -    if (LogAcceptCategory((category))) {\n> -        LogPrintf(args...);\n> -    }\n> -}\n> +#define LogPrint(category, ...) do { \\\n>\n> Ah, I thought you were suggesting LogPrint, LogPrintf, and LOG_CATEGORY.\n>\n> I'm not completely opposed to changing call sites to LOG_CATEGORY (and\n> checking for side effects in the process). But I would like to be sure such\n> a change would be welcome before putting in the work. :)\n>\n> â\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/17218?email_source=notifications&email_token=AAGYN67PZ3X5Z2MVSRXTJFDQP55W5A5CNFSM4JDTSZXKYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCI3EIYQ#discussion_r337779900>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGYN6Z3TFDBZLZOUXAEQITQP55W5ANCNFSM4JDTSZXA>\n> .\n>\n",
      "created_at" : "2019-10-22T22:48:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545188419",
      "id" : 545188419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTE4ODQxOQ==",
      "updated_at" : "2019-10-22T22:48:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545188419",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I see it more as restoring the previous behavior of only paying for the logging that you want. Thus, anyone is free to add very verbose logging to their module without others incurring a cost when logging for that category isn't enabled.\r\n\r\nIn other types of software that is universally a good idea, but it could be argued that in Bitcoin Core we want to make sure that execution of consensus critical code should be as identical as possible across clients. See sipas arguments in #4576 regarding always evaluating arguments to not have uncertainty what performance impact consistency checks.\r\n\r\nWhen it comes to consensus critical code it could be argued that consistency in taken code paths is often more important than raw execution speed.\r\n\r\nIf we want to put that principle aside we should have good reasons for doing so: that's why it is important to benchmark a change like this. Is the performance impact measurable in practice?",
      "created_at" : "2019-10-23T06:08:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545283628",
      "id" : 545283628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTI4MzYyOA==",
      "updated_at" : "2019-10-23T06:09:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545283628",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~Concept NACK, this used to be a macro in the past. We changed it to a function for argument hygiene as is common in modern C++.~~\r\n\r\n~~If you really need to log in performance-critical contexts, then you could do a special thing there, but I'm very much against changing the general log system for this.~~\r\n\r\nNever mind, I was confused here. It still uses an internal function for that. The whole point here was to be able to shortcut in case logging for the category was disabledâ¦\r\n\r\nI think the assumption in  #14209 was that an inline was just as good as a macro in this regard. Have you benchmarked this?",
      "created_at" : "2019-10-23T08:35:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545333791",
      "id" : 545333791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTMzMzc5MQ==",
      "updated_at" : "2019-10-23T09:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545333791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337957363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337957363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would like to be sure such a change would be welcome before putting in the work. :)\r\n\r\nTo be clear, suggestion is _not_ to do more work. My suggestion is:\r\n\r\n1. Add your new macro with a name like `LOG_CATEGORY`, to be clear that it is a macro and not something that evaluated like a normal function.\r\n2. Leave `LogPrint` alone, mark it deprecated and add a note like \"LOG_CATEGORY is preferred over LogPrint in new code as a more performant alternative\"\r\n\r\nSeparately after that, I do not think it would take a lot of work to replace instances of `LogPrint` and remove it. We could start with a simple [scripted-diff](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#scripted-diffs) to replace simple variable references that obviously don't have side effects.\r\n\r\n```sh\r\ngit grep -l LogPrint | xargs sed -i 's/LogPrint\\((BCLog::[A-Z]\\+, \"[^\"]\\+\"\\(, [A-Za-z_]\\+\\)*)\\)/LOG_CATEGORY\\1/g'\r\n```\r\n\r\nAs for organizing these changes, I might consider closing this PR, and instead adding the new macro directly where you intend to use it in #16688.",
      "commit_id" : "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at" : "2019-10-23T10:01:33Z",
      "diff_hunk" : "@@ -155,12 +155,10 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+#define LogPrint(category, ...) do { \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#discussion_r337957363",
      "id" : 337957363,
      "in_reply_to_id" : 337702226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzk1NzM2Mw==",
      "original_commit_id" : "93e8f7a833a03a0add51612d1fcac557af51359c",
      "original_position" : 11,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 305771888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17218",
      "updated_at" : "2019-10-23T10:01:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337957363",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think the assumption in #14209 was that an inline was just as good as a macro in this regard. Have you benchmarked this?\r\n\r\nPracticalswift asked the same question yesterday and this hasn't been benchmarked yet. It might be the case that performance is roughly equivalent, but if by \"just as good\" you mean actually equivalent, it's probably not a good assumption that compilers are going to be able to deduce that calls like `pindex->GetBlockHash().GetHex()` have no side-effects and inline them out.",
      "created_at" : "2019-10-23T10:05:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17218#issuecomment-545369956",
      "id" : 545369956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17218",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTM2OTk1Ng==",
      "updated_at" : "2019-10-23T10:06:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545369956",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
