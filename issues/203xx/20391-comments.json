[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks to @Xekyo for suggesting this in https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520234818.",
      "created_at" : "2020-11-14T22:24:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727273591",
      "id" : 727273591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI3MzU5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-14T22:24:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727273591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Idea: since this is per-wallet, return the name of the wallet in the responses.",
      "created_at" : "2020-11-14T22:35:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727274760",
      "id" : 727274760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI3NDc2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-14T22:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727274760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20286 (rpc: deprecate `addresses` and `reqSigs` from rpc outputs by mjdietzx)\n* #20012 (rpc: Remove duplicate name and argNames from CRPCCommand by MarcoFalke)\n* #19735 (Fix -Wtautological-constant-out-of-range-compare warnings on 32-bit systems by hebasto)\n* #19602 (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n* #16795 (rpc: have raw transaction decoding infer output descriptors by instagibbs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-15T00:07:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727284177",
      "id" : 727284177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI4NDE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-29T03:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727284177",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In the 'Successful responses' and 'Error responses' above shouldn't it be `sat/vB` instead of `sat/B`?",
      "created_at" : "2020-11-15T03:28:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727363191",
      "id" : 727363191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzM2MzE5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-15T03:28:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727363191",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@prayank23 thanks for looking. Those will be automatically updated from sat/B to sat/vB by #20305, which updates the ToString() helper in `CFeeRate`. I updated the PR descpription to clarify that (thanks!)",
      "created_at" : "2020-11-15T07:21:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727527712",
      "id" : 727527712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzUyNzcxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-15T15:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727527712",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-17T14:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-728947930",
      "id" : 728947930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyODk0NzkzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T14:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728947930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530037069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530037069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO we should add a `ValueFromFeeRate`",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-25T00:48:04Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530037069",
      "id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAzNzA2OQ==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 538077112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530037069",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530044646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530044646"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe rebase this on top of 8798383475f4e1db44f734cdd94885e5527761fe",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-25T01:13:14Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530044646",
      "id" : 530044646,
      "in_reply_to_id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0NDY0Ng==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 538085656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530044646",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531175708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531175708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe rebase this on top of [8798383](https://github.com/bitcoin/bitcoin/commit/8798383475f4e1db44f734cdd94885e5527761fe)\r\n\r\nSGTM",
      "commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "created_at" : "2020-11-26T18:07:09Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531175708",
      "id" : 531175708,
      "in_reply_to_id" : 530037069,
      "line" : 2410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTcwOA==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 78,
      "pull_request_review_id" : 539496909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-26T18:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531175708",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531709471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531709471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe rebase this on top of [8798383](https://github.com/bitcoin/bitcoin/commit/8798383475f4e1db44f734cdd94885e5527761fe)\r\n\r\nPulled 8798383 in as commit 0e2c3ace86b8aa",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-27T17:27:50Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531709471",
      "id" : 531709471,
      "in_reply_to_id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwOTQ3MQ==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540114340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531709471",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and updated per the plan outlined in https://github.com/bitcoin/bitcoin/pull/20484#issuecomment-734786305.",
      "created_at" : "2020-11-27T17:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-734933069",
      "id" : 734933069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDkzMzA2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T17:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734933069",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: might use f-string? ",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-28T09:25:34Z",
      "diff_hunk" : "@@ -107,7 +107,7 @@ def run_test(self):\n         assert_equal(stats[self.max_stat_pos]['height'], self.start_height + self.max_stat_pos)\n \n         for i in range(self.max_stat_pos+1):\n-            self.log.info('Checking block %d\\n' % (i))\n+            self.log.info('Checking block %d' % (i))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010092",
      "id" : 532010092,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMDA5Mg==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 110,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/rpc_getblockstats.py",
      "position" : null,
      "pull_request_review_id" : 540354468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The second argument of the cfeerate constructor is size_t (number of bytes), not CAmount (number of satoshis). Instead of adding more calls to the confusing constructor, I'd prefer to add a new constructor that takes in a univalue feerate as sat/b. I think this has also been provided as feedback when this code template was initially introduced.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-28T09:28:51Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010352",
      "id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMDM1Mg==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540354468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010352",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good idea; done",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-28T19:01:03Z",
      "diff_hunk" : "@@ -107,7 +107,7 @@ def run_test(self):\n         assert_equal(stats[self.max_stat_pos]['height'], self.start_height + self.max_stat_pos)\n \n         for i in range(self.max_stat_pos+1):\n-            self.log.info('Checking block %d\\n' % (i))\n+            self.log.info('Checking block %d' % (i))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094624",
      "id" : 532094624,
      "in_reply_to_id" : 532010092,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5NDYyNA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 110,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/rpc_getblockstats.py",
      "position" : null,
      "pull_request_review_id" : 540411033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094624",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, done in 9c479bfc293fec906 and proposed a refactoring in 392495bc4d9648fe0c28d that can be dropped",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-28T19:03:44Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094834",
      "id" : 532094834,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5NDgzNA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540411161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094834",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oops, adding the CFeeRate UniValue ctor caused a circular dependency. ",
      "created_at" : "2020-11-28T19:28:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-735280367",
      "id" : 735280367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTI4MDM2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-28T19:28:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735280367",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532099670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532099670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, bringing the RPC utilities and UniValue into CFeeRate seems like a layer violation (and caused a circular dependency). Maybe a CFeeRate ctor that takes a CAmount + FeeEstimateMode instead of UniValue.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-28T19:52:48Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532099670",
      "id" : 532099670,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTY3MA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540413842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532099670",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532263170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532263170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated the new CFeeRate ctor to take `(CAmount fee_rate, FeeEstimateMode mode)` and added unit tests.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-29T20:40:06Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532263170",
      "id" : 532263170,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI2MzE3MA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540514624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T10:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532263170",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added more unit test coverage per `git diff 14c5e50 2176a3`.",
      "created_at" : "2020-11-30T10:22:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-735695224",
      "id" : 735695224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTY5NTIyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-30T10:27:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735695224",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532515768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532515768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit d6643ef609bf442fe38dd8a1335dd7c580f1fdd7:\r\n\r\ncould clang-format?",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T11:06:38Z",
      "diff_hunk" : "@@ -42,3 +42,7 @@ std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n     default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n     }\n }\n+\n+std::string CFeeRate::SatsToString() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532515768",
      "id" : 532515768,
      "line" : 42,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNTc2OA==",
      "original_commit_id" : "d6643ef609bf442fe38dd8a1335dd7c580f1fdd7",
      "original_line" : 46,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 57,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T11:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532515768",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532520613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532520613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit in 4cccf2d88377a9f813ab6d63889cbb5136c31aad\r\n\r\nMight be good to make this impossible to compile instead of a runtime-just-return-0. Can be achieved via `constexpr if` (and some template magic) or by having a `CFeeRate::FromSatB(amount)` and `FromBtcKb(amount)` helper.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T11:15:14Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532520613",
      "id" : 532520613,
      "line" : 115,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMDYxMw==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : 40,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T11:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532520613",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532537444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532537444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 3c92185b95764f5c3536637e5923316cd9c2d8b0:\r\n\r\nMight be good if the method name included the unit (sat/b) to avoid calling this in a btc/kb context",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T11:45:57Z",
      "diff_hunk" : "@@ -40,6 +41,7 @@ int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp\n UniValue ValueFromAmount(const CAmount& amount);\n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532537444",
      "id" : 532537444,
      "line" : 44,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNzQ0NA==",
      "original_commit_id" : "3c92185b95764f5c3536637e5923316cd9c2d8b0",
      "original_line" : 44,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 12,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T11:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532537444",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532539956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532539956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why are the refactors in 7289e559eb720d972e3e31c0ca81dd8091775b07 needed? They break asan, it seems.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T11:50:21Z",
      "diff_hunk" : "@@ -7,35 +7,31 @@\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532539956",
      "id" : 532539956,
      "line" : 7,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzOTk1Ng==",
      "original_commit_id" : "7289e559eb720d972e3e31c0ca81dd8091775b07",
      "original_line" : 7,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 1,
      "pull_request_review_id" : 540835728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T11:50:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532539956",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532681447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532681447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The CI was green with the refactors yesterday; the change was the added unit tests. It may be better to propose the refactors in their own PR. I'll drop the refactoring commit to test what the CI says.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T15:28:00Z",
      "diff_hunk" : "@@ -7,35 +7,31 @@\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532681447",
      "id" : 532681447,
      "in_reply_to_id" : 532539956,
      "line" : 7,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4MTQ0Nw==",
      "original_commit_id" : "7289e559eb720d972e3e31c0ca81dd8091775b07",
      "original_line" : 7,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 1,
      "pull_request_review_id" : 541017683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T15:28:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532681447",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532701499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532701499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh oops hm, these lines 113-115 aren't testing the new constructor, but the `CFeeRate(CAmount, size_t)` one, so it was mistake to add them here. Will move them into the tests for that constructor and see if anything needs to be done there; normally the ctor should just set `nSatoshisPerK` to 0 in that case.",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T15:54:04Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532701499",
      "id" : 532701499,
      "in_reply_to_id" : 532520613,
      "line" : 115,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwMTQ5OQ==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : 40,
      "pull_request_review_id" : 541043362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T15:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532701499",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532704803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532704803"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(my comment should be on the `BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0})` line)",
      "commit_id" : "2176a3af5424e82319c10587bf5dbc02e1b68d1c",
      "created_at" : "2020-11-30T15:58:16Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532704803",
      "id" : 532704803,
      "in_reply_to_id" : 532520613,
      "line" : 115,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwNDgwMw==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : 40,
      "pull_request_review_id" : 541047630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T15:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532704803",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
