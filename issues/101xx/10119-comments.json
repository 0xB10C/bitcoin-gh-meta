[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108992551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108992551"
         }
      },
      "body" : "Any reason to not return a const ref?\r\n\r\nAlso, ArgsAt is a bit of an odd name, perhaps ArgsFor or something (but maybe not worth the effort to redo this)",
      "commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "created_at" : "2017-03-30T17:50:11Z",
      "diff_hunk" : "@@ -378,63 +374,94 @@ void ParseParameters(int argc, const char* const argv[])\n         InterpretNegativeSetting(str, strValue);\n \n         mapArgs[str] = strValue;\n-        _mapMultiArgs[str].push_back(strValue);\n+        mapMultiArgs[str].push_back(strValue);\n     }\n }\n \n-bool IsArgSet(const std::string& strArg)\n+std::vector<std::string> ArgsManager::ArgsAt(const std::string& strArg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108992551",
      "id" : 108992551,
      "original_commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "original_position" : 55,
      "path" : "src/util.cpp",
      "position" : 55,
      "pull_request_review_id" : 30064767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119",
      "updated_at" : "2017-03-30T18:14:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108992551",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108993944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108993944"
         }
      },
      "body" : "Should this push_back or replace?",
      "commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "created_at" : "2017-03-30T17:55:25Z",
      "diff_hunk" : "@@ -378,63 +374,94 @@ void ParseParameters(int argc, const char* const argv[])\n         InterpretNegativeSetting(str, strValue);\n \n         mapArgs[str] = strValue;\n-        _mapMultiArgs[str].push_back(strValue);\n+        mapMultiArgs[str].push_back(strValue);\n     }\n }\n \n-bool IsArgSet(const std::string& strArg)\n+std::vector<std::string> ArgsManager::ArgsAt(const std::string& strArg)\n+{\n+    LOCK(cs_args);\n+    return mapMultiArgs.at(strArg);\n+}\n+\n+bool ArgsManager::IsArgSet(const std::string& strArg)\n {\n     LOCK(cs_args);\n     return mapArgs.count(strArg);\n }\n \n-std::string GetArg(const std::string& strArg, const std::string& strDefault)\n+std::string ArgsManager::GetArg(const std::string& strArg, const std::string& strDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return mapArgs[strArg];\n     return strDefault;\n }\n \n-int64_t GetArg(const std::string& strArg, int64_t nDefault)\n+int64_t ArgsManager::GetArg(const std::string& strArg, int64_t nDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return atoi64(mapArgs[strArg]);\n     return nDefault;\n }\n \n-bool GetBoolArg(const std::string& strArg, bool fDefault)\n+bool ArgsManager::GetBoolArg(const std::string& strArg, bool fDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return InterpretBool(mapArgs[strArg]);\n     return fDefault;\n }\n \n-bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n+bool ArgsManager::SoftSetArg(const std::string& strArg, const std::string& strValue)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return false;\n-    mapArgs[strArg] = strValue;\n+    this->ForceSetArg(strArg, strValue);\n     return true;\n }\n \n-bool SoftSetBoolArg(const std::string& strArg, bool fValue)\n+bool ArgsManager::SoftSetBoolArg(const std::string& strArg, bool fValue)\n {\n     if (fValue)\n         return SoftSetArg(strArg, std::string(\"1\"));\n     else\n         return SoftSetArg(strArg, std::string(\"0\"));\n }\n \n-void ForceSetArg(const std::string& strArg, const std::string& strValue)\n+void ArgsManager::ForceSetArg(const std::string& strArg, const std::string& strValue)\n {\n     LOCK(cs_args);\n     mapArgs[strArg] = strValue;\n+    mapMultiArgs[strArg].push_back(strValue);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108993944",
      "id" : 108993944,
      "original_commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "original_position" : 119,
      "path" : "src/util.cpp",
      "position" : 119,
      "pull_request_review_id" : 30064767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119",
      "updated_at" : "2017-03-30T18:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108993944",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108994163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108994163"
         }
      },
      "body" : "Is the PR too big if you get rid of these?",
      "commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "created_at" : "2017-03-30T17:56:17Z",
      "diff_hunk" : "@@ -378,63 +374,94 @@ void ParseParameters(int argc, const char* const argv[])\n         InterpretNegativeSetting(str, strValue);\n \n         mapArgs[str] = strValue;\n-        _mapMultiArgs[str].push_back(strValue);\n+        mapMultiArgs[str].push_back(strValue);\n     }\n }\n \n-bool IsArgSet(const std::string& strArg)\n+std::vector<std::string> ArgsManager::ArgsAt(const std::string& strArg)\n+{\n+    LOCK(cs_args);\n+    return mapMultiArgs.at(strArg);\n+}\n+\n+bool ArgsManager::IsArgSet(const std::string& strArg)\n {\n     LOCK(cs_args);\n     return mapArgs.count(strArg);\n }\n \n-std::string GetArg(const std::string& strArg, const std::string& strDefault)\n+std::string ArgsManager::GetArg(const std::string& strArg, const std::string& strDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return mapArgs[strArg];\n     return strDefault;\n }\n \n-int64_t GetArg(const std::string& strArg, int64_t nDefault)\n+int64_t ArgsManager::GetArg(const std::string& strArg, int64_t nDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return atoi64(mapArgs[strArg]);\n     return nDefault;\n }\n \n-bool GetBoolArg(const std::string& strArg, bool fDefault)\n+bool ArgsManager::GetBoolArg(const std::string& strArg, bool fDefault)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return InterpretBool(mapArgs[strArg]);\n     return fDefault;\n }\n \n-bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n+bool ArgsManager::SoftSetArg(const std::string& strArg, const std::string& strValue)\n {\n     LOCK(cs_args);\n     if (mapArgs.count(strArg))\n         return false;\n-    mapArgs[strArg] = strValue;\n+    this->ForceSetArg(strArg, strValue);\n     return true;\n }\n \n-bool SoftSetBoolArg(const std::string& strArg, bool fValue)\n+bool ArgsManager::SoftSetBoolArg(const std::string& strArg, bool fValue)\n {\n     if (fValue)\n         return SoftSetArg(strArg, std::string(\"1\"));\n     else\n         return SoftSetArg(strArg, std::string(\"0\"));\n }\n \n-void ForceSetArg(const std::string& strArg, const std::string& strValue)\n+void ArgsManager::ForceSetArg(const std::string& strArg, const std::string& strValue)\n {\n     LOCK(cs_args);\n     mapArgs[strArg] = strValue;\n+    mapMultiArgs[strArg].push_back(strValue);\n }\n \n+bool IsArgSet(const std::string& strArg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108994163",
      "id" : 108994163,
      "original_commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "original_position" : 122,
      "path" : "src/util.cpp",
      "position" : 122,
      "pull_request_review_id" : 30064767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119",
      "updated_at" : "2017-03-30T18:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108994163",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108994438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108994438"
         }
      },
      "body" : "why not use multimap?",
      "commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "created_at" : "2017-03-30T17:57:19Z",
      "diff_hunk" : "@@ -133,6 +131,16 @@ inline bool IsSwitchChar(char c)\n #endif\n }\n \n+class ArgsManager\n+{\n+protected:\n+    CCriticalSection cs_args;\n+    std::map<std::string, std::string> mapArgs;\n+    std::map<std::string, std::vector<std::string> > mapMultiArgs;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10119#discussion_r108994438",
      "id" : 108994438,
      "original_commit_id" : "11b82c4e32e97e63b779b242d234c855dd187200",
      "original_position" : 41,
      "path" : "src/util.h",
      "position" : 41,
      "pull_request_review_id" : 30064767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10119",
      "updated_at" : "2017-03-30T18:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108994438",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
