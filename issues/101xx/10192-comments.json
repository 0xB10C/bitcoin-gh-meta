[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118"
         }
      },
      "body" : "I think the division should be outside of GetArg. Otherwise, if you specify -maxsigcachesize=32, you end up with a total of 64MiB worth of caches.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-11T22:18:19Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118",
      "id" : 111027118,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 82,
      "pull_request_review_id" : 32242425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Fixed test_bitcoin segfaulting as it didnt init the script cache as it does the sigcache.",
      "created_at" : "2017-04-11T23:36:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293430562",
      "id" : 293430562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-11T23:36:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293430562",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810"
         }
      },
      "body" : "Maybe better to add a wrapper class around cuckoocache.h in a separate file so that you don't depend on CuckooCache internals and can replace it with something more efficient more easily.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T05:47:30Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810",
      "id" : 111068810,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200"
         }
      },
      "body" : "https://github.com/bitcoin/bitcoin/pull/9480 exposes this class from the sigcache, we should probably just use that rather than adding this code again in a another location.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T05:52:07Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200",
      "id" : 111069200,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178"
         }
      },
      "body" : "static in the middle of a function is messy -- add a wrapper class around cuckoocache.h",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T06:02:44Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178",
      "id" : 111070178,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401"
         }
      },
      "body" : "Yes; adding a wrapper class would do this for you. Can be a read lock.\r\n\r\nAlso if you're using this class single threaded only ever, cuckoocache could be extended to offer a version without atomics...",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T06:04:56Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401",
      "id" : 111070401,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 117,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537"
         }
      },
      "body" : "FYI You can cut the hashing overhead in half by either:\r\n\r\n- making the nonce 64 bytes & static caching then copyinh the midstate.\r\n- using only 19 bytes of nonce.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T06:35:06Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537",
      "id" : 111073537,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329"
         }
      },
      "body" : "Good, because the division is outside of the GetArg. :)",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T09:42:36Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329",
      "id" : 111106329,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 82,
      "pull_request_review_id" : 32325959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2017-04-12T09:44:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293527298",
      "id" : 293527298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T09:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293527298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039"
         }
      },
      "body" : "Struggling to understand how a unique nonce per cache entry vs per cache works.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T16:00:01Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039",
      "id" : 111191039,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32419116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372"
         }
      },
      "body" : "it's static so it is per cache.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T16:17:23Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372",
      "id" : 111195372,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32423861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2017-04-12T16:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293634385",
      "id" : 293634385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T16:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293634385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908"
         }
      },
      "body" : "Is using the public interface of CuckooCache::cache really using its \"internals\"?",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T17:28:25Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908",
      "id" : 111211908,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946"
         }
      },
      "body" : "Rebased on that, removed this class.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T17:28:38Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946",
      "id" : 111211946,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068"
         }
      },
      "body" : "I'd much much rather have a static in the function than add yet another class to compile. We need to have fewer two-line wrapper classes, not more...our memory usage is already insane.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T17:29:17Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068",
      "id" : 111212068,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117"
         }
      },
      "body" : "Using 19 bytes of nonce, thats way more than enough.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T17:29:32Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117",
      "id" : 111212117,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Addressed Jeremy's comments aside from the request for a wrapper class, I think we need fewer dummy classes, not more :/. Also rebased on #9480.",
      "created_at" : "2017-04-12T17:30:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293651106",
      "id" : 293651106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T17:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293651106",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451"
         }
      },
      "body" : "Memory usage during compile time? Is it really that bad for an added class?\r\n\r\nCan you at least move the static decl to the top of the function?",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-12T21:36:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451",
      "id" : 111266451,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32500529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717"
         }
      },
      "body" : "It seems I am blind.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-13T15:55:29Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717",
      "id" : 111423717,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 82,
      "pull_request_review_id" : 32669925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279"
         }
      },
      "body" : "Static assert on the size of the flags so the nonce gets reduced if the flags are made 64-bits in the future?",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-18T18:27:00Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279",
      "id" : 112029279,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33313042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572"
         }
      },
      "body" : "Done.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-18T18:58:55Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572",
      "id" : 112036572,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33321006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972"
         }
      },
      "body" : "Done. Moved the static to the top of the function with the static CuckooCache as well.",
      "commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "created_at" : "2017-04-18T21:01:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972",
      "id" : 112062972,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33350164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-18T21:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
