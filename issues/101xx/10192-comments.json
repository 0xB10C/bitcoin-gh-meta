[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118"
         }
      },
      "body" : "I think the division should be outside of GetArg. Otherwise, if you specify -maxsigcachesize=32, you end up with a total of 64MiB worth of caches.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-11T22:18:19Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118",
      "id" : 111027118,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 129,
      "pull_request_review_id" : 32242425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Fixed test_bitcoin segfaulting as it didnt init the script cache as it does the sigcache.",
      "created_at" : "2017-04-11T23:36:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293430562",
      "id" : 293430562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-11T23:36:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293430562",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810"
         }
      },
      "body" : "Maybe better to add a wrapper class around cuckoocache.h in a separate file so that you don't depend on CuckooCache internals and can replace it with something more efficient more easily.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T05:47:30Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810",
      "id" : 111068810,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200"
         }
      },
      "body" : "https://github.com/bitcoin/bitcoin/pull/9480 exposes this class from the sigcache, we should probably just use that rather than adding this code again in a another location.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T05:52:07Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200",
      "id" : 111069200,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178"
         }
      },
      "body" : "static in the middle of a function is messy -- add a wrapper class around cuckoocache.h",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T06:02:44Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178",
      "id" : 111070178,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401"
         }
      },
      "body" : "Yes; adding a wrapper class would do this for you. Can be a read lock.\r\n\r\nAlso if you're using this class single threaded only ever, cuckoocache could be extended to offer a version without atomics...",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T06:04:56Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401",
      "id" : 111070401,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 117,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537"
         }
      },
      "body" : "FYI You can cut the hashing overhead in half by either:\r\n\r\n- making the nonce 64 bytes & static caching then copyinh the midstate.\r\n- using only 19 bytes of nonce.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T06:35:06Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537",
      "id" : 111073537,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329"
         }
      },
      "body" : "Good, because the division is outside of the GetArg. :)",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T09:42:36Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329",
      "id" : 111106329,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 129,
      "pull_request_review_id" : 32325959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2017-04-12T09:44:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293527298",
      "id" : 293527298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T09:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293527298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039"
         }
      },
      "body" : "Struggling to understand how a unique nonce per cache entry vs per cache works.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T16:00:01Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039",
      "id" : 111191039,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32419116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372"
         }
      },
      "body" : "it's static so it is per cache.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T16:17:23Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372",
      "id" : 111195372,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32423861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2017-04-12T16:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293634385",
      "id" : 293634385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T16:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293634385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908"
         }
      },
      "body" : "Is using the public interface of CuckooCache::cache really using its \"internals\"?",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T17:28:25Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908",
      "id" : 111211908,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946"
         }
      },
      "body" : "Rebased on that, removed this class.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T17:28:38Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946",
      "id" : 111211946,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068"
         }
      },
      "body" : "I'd much much rather have a static in the function than add yet another class to compile. We need to have fewer two-line wrapper classes, not more...our memory usage is already insane.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T17:29:17Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068",
      "id" : 111212068,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117"
         }
      },
      "body" : "Using 19 bytes of nonce, thats way more than enough.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T17:29:32Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117",
      "id" : 111212117,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Addressed Jeremy's comments aside from the request for a wrapper class, I think we need fewer dummy classes, not more :/. Also rebased on #9480.",
      "created_at" : "2017-04-12T17:30:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293651106",
      "id" : 293651106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T17:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293651106",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451"
         }
      },
      "body" : "Memory usage during compile time? Is it really that bad for an added class?\r\n\r\nCan you at least move the static decl to the top of the function?",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-12T21:36:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451",
      "id" : 111266451,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32500529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717"
         }
      },
      "body" : "It seems I am blind.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-13T15:55:29Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717",
      "id" : 111423717,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 129,
      "pull_request_review_id" : 32669925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279"
         }
      },
      "body" : "Static assert on the size of the flags so the nonce gets reduced if the flags are made 64-bits in the future?",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-18T18:27:00Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279",
      "id" : 112029279,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33313042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572"
         }
      },
      "body" : "Done.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-18T18:58:55Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572",
      "id" : 112036572,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33321006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972"
         }
      },
      "body" : "Done. Moved the static to the top of the function with the static CuckooCache as well.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-18T21:01:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972",
      "id" : 112062972,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33350164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "> Note that the cache is indexed only on the script execution flags\r\nand the transaction's witness hash. While this is sufficient to\r\nmake the CScriptCheck() calls pure functions, this introduces\r\ndependancies on the mempool calculating things such as the\r\nPrecomputedTransactionData object, filling the CCoinsViewCache, etc\r\nin the exact same way as ConnectBlock. I belive this is a reasonable\r\nassumption, but should be noted carefully.\r\n\r\nSo if I understand correctly, this makes CCoinsViewMempool, and therefore the mempool itself, consensus critical, which I would prefer to avoid.  Would we still get a performance benefit if we were to include the coins being spent in the hash for the index lookup?\r\n\r\nEdited: as per offline discussion, perhaps just move CCoinsViewMemPool into validation.cpp to make it clear it's part of consensus, and sanity check the results from the mempool.",
      "created_at" : "2017-04-19T15:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-295316813",
      "id" : 295316813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-19T17:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295316813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar I'm not convinced its a massive concern, but I went ahead and added a wrapper which checks each scriptPubKey returned by the CCoinsViewCache is the one committed to by the input's prevout hash, which I believe removes that dependancy entirely.",
      "created_at" : "2017-04-19T18:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-295371111",
      "id" : 295371111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-19T18:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295371111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639333"
         }
      },
      "body" : "Would be nice to update the LogPrintf here (and in the new Init) to say something about how the space is divided among multiple caches now, so users aren't confused why they aren't getting the full allocation here.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-21T08:37:37Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n     // setup_bytes creates the minimum possible cache (2 elements).\n-    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE)), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n     size_t nElems = signatureCache.setup_bytes(nMaxCacheSize);\n     LogPrintf(\"Using %zu MiB out of %zu requested for signature cache, able to store %zu elements\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639333",
      "id" : 112639333,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 7,
      "path" : "src/script/sigcache.cpp",
      "position" : null,
      "pull_request_review_id" : 33969253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639333",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639391"
         }
      },
      "body" : "I guess not.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-21T08:38:00Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639391",
      "id" : 112639391,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 33969253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639391",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112771950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112771950"
         }
      },
      "body" : "OK, done, also updated the doc for -maxsigcachesize.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-21T20:38:49Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n     // setup_bytes creates the minimum possible cache (2 elements).\n-    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE)), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n     size_t nElems = signatureCache.setup_bytes(nMaxCacheSize);\n     LogPrintf(\"Using %zu MiB out of %zu requested for signature cache, able to store %zu elements\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112771950",
      "id" : 112771950,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 7,
      "path" : "src/script/sigcache.cpp",
      "position" : null,
      "pull_request_review_id" : 34118234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112771950",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Concept ACK\r\nBut I'd prefer if there were more safeguards in place against future changes that might cause consensus failure.  For instance, I think anything that is inputted to CScriptCheck should be committed to by the hash.  Right now it its the case that anything USED by CScriptCheck is committed to, but there is nothing stopping a future change to CScriptCheck that used the height from the Coins or something and caused problems.\r\n",
      "created_at" : "2017-04-25T16:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-297084564",
      "id" : 297084564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-25T16:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297084564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113251292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113251292"
         }
      },
      "body" : "This function can take Consensus::Params directly instead of CChainParams\r\nCan we pass ```ThresholdConditionCache& cache``` to this and move it to src/versionbits ?\r\nI know not all flags are activated with bip9, but it seems the best place to me.\r\nDoing so would prevent you from calling IsWitnessEnabled() and AssertLockHeld(cs_main), but do you need to?\r\nYou can do the latter from the caller like we do with VersionBitsState",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-25T16:53:41Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113251292",
      "id" : 113251292,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34623315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113251292",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113252837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113252837"
         }
      },
      "body" : "why a separated declaration if it's going to be static?",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-25T17:00:02Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113252837",
      "id" : 113252837,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34625069,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113252837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113254568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113254568"
         }
      },
      "body" : "It's a forward declaration. As to why the definition isn't just there, I'm not sure, maybe GetBlockScriptFlags also has some dependency that would need a forward decl.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-25T17:07:25Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113254568",
      "id" : 113254568,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34626981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113254568",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113329148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113329148"
         }
      },
      "body" : "history bike-sheeding currentBlockScriptVerifyFlags should be part of the previous commit, not this one (and for my taste this commit could be an independent PR).",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-25T22:40:59Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113329148",
      "id" : 113329148,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34707843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113329148",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113330975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113330975"
         }
      },
      "body" : "Perhaps everything that is below this case could be moved to CheckInputsFromMempoolAndCache too",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-25T22:53:30Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113330975",
      "id" : 113330975,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34709759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113330975",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713125"
         }
      },
      "body" : "I'd much prefer to encapsulate the version bits stuff in GetBlockScriptFlags, and keep the diff on the smaller side. You're welcome to move things around afterwards, validation.cpp need to continue its trek towards better internal interfaces.\r\n\r\nI changed it to take Consensus::Params.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T14:40:53Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713125",
      "id" : 113713125,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713135"
         }
      },
      "body" : "The reason its down further is that I didnt want to move it up with the mempool stuff in validation.cpp, but its called from ATMP, so needed the forward declaration. Hopefully this stuff gets ironed out as we move towards better internal interfaces (see #10279).",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T14:40:55Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713135",
      "id" : 113713135,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713135",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713145"
         }
      },
      "body" : "Its needed in this PR because its much more likely to trigger after the changes in this PR, though still unsupported. I'm happy to make it a PR on its own if you think its really worth it, but it seems to me this PR is still of very-reviewable-size.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T14:40:57Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713145",
      "id" : 113713145,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713145",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713156"
         }
      },
      "body" : "I dont think CheckInputsFromMempoolAndCache should make assumptions about having called CheckInputs already prior to this call? Maybe I'm confused as to what you're suggesting here.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T14:40:59Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713156",
      "id" : 113713156,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713156",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@morcos I added an additional commit to only pass the scriptPubKey and nValue from the prevout into CScriptCheck, so hopefully any such future changes would be super clear to reviewers as consensus bugs. Sadly I dont really want to just include the height in the hash, as there are many heights, but I think this is a sufficient change.",
      "created_at" : "2017-04-27T14:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-297734351",
      "id" : 297734351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-27T14:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297734351",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113725617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113725617"
         }
      },
      "body" : "Moving it to src/versionbits.cpp would still encapsulate version bits stuff in GetBlockScriptFlags, you would just not be using the versionbitscache and cs_main globals from validation.cpp.\r\nYou will also avoid using the unnecessary wrapper ```IsWitnessEnabled()``` (specially unnecessary in this function since you are already using ```VersionBitsState()``` directly for csv anyway).\r\n\r\nIt is \"free\" to do it now vs moving it in the future (if that ever gets the review). It may not be important to your approach to libconsensus, but it is to mine. I've been trying to do this for a long time, @CodeShark tried something similar as preparation to bip9 too.\r\n",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:19:55Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113725617",
      "id" : 113725617,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35139022,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113725617",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113726199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113726199"
         }
      },
      "body" : "You are creating the function as new, it won't be any more disruptive to avoid the forward declaration. Anyway, my preference would be to move it to versionbits.o which is also ignored as \"something that can be ironed out later\", so whatever.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:22:13Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113726199",
      "id" : 113726199,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35139702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113726199",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113727154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113727154"
         }
      },
      "body" : "You misunderstood. Creating a currentBlockScriptVerifyFlags local variable just makes the next line simpler, which is fine, but could have been done in \"Cache full script execution results in addition to signatures\" directly which already touches those lines instead of \"Do not print soft-fork-script warning with -promiscuousmempool\", which would be clearer without that extra bikeshedding +2-1.\r\nAnyway, as said, history bikeshedding, not a big deal",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:25:51Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113727154",
      "id" : 113727154,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35140782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113727154",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113728900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728900"
         }
      },
      "body" : "I mean moving the following inside the function too: \r\n```\r\n         {\r\n              // If we're using promiscuousmempoolflags, we may hit this normally\r\n              // Check if current block has some flags that scriptVerifyFlags\r\n             // does not before printing an ominous warning\r\n             if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\r\n                 return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\r\n                     __func__, hash.ToString(), FormatStateMessage(state));\r\n         }\r\n```\r\nThen here you would just call:\r\n\r\n```\r\nif (!CheckInputsFromMempoolAndCache(tx, state, view, pool, scriptVerifyFlags, currentBlockScriptVerifyFlags, true, txdata)) {\r\n   return false;\r\n}",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:32:16Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113728900",
      "id" : 113728900,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35142665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113729145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113729145"
         }
      },
      "body" : "The error should no be printed, but the function still needs to return false, no?",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:33:08Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n+        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113729145",
      "id" : 113729145,
      "original_commit_id" : "061d06faceed0272d1913800369768188876df77",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35142937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113729145",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113730339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730339"
         }
      },
      "body" : "Perhaps even put the 2 calls to checkinputs in it, from https://github.com/bitcoin/bitcoin/pull/10192/commits/061d06faceed0272d1913800369768188876df77#diff-24efdb00bfbe56b140fb006b562cc70bR889",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:37:31Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113730339",
      "id" : 113730339,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35144274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113733922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113733922"
         }
      },
      "body" : "I dont think it makes any sense to move this entire function into src/versionbits.cpp? This function has stuff for BIP 65, 66 and 16, none of which are versionbits-activated? Moving all soft forks into a separate thing is definitely a separate issue from this PR.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:51:53Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113733922",
      "id" : 113733922,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35148152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113733922",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734840"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:55:15Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734840",
      "id" : 113734840,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734844"
         }
      },
      "body" : "But that logging implicitly makes an assumption about the fact that you've already called CheckInputs prior to the CheckInputsFromMempoolAndCache call, which I'd prefer not to do. CheckInputsFromMempoolAndCache *only* does some additional mempool-shouldnt-pollute-cache checks, and then calls CheckInputs.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:55:17Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734844",
      "id" : 113734844,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734844",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734847"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T15:55:18Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n+        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734847",
      "id" : 113734847,
      "original_commit_id" : "061d06faceed0272d1913800369768188876df77",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113744666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113744666"
         }
      },
      "body" : "I noted that at the beginning \"I know not all flags are activated with bip9\", but I still think it's the best place for this new function (even if some lines of the function don't rely on versionbits, they also don't rely on anything that versionbits didn't already rely on).Doing a separate module only for this single function seems stupid to me.\r\nAnyway, as disappointing as your rejection to move the new function for free may be to me, let's move on. \r\n\r\nCan you at least avoid the use of globals you don't need to use, ie versionbitscache and cs_main  (both used directly and also indirectly through IsWitnessEnabled())?\r\nThat way, if we ever move this function out of validation (like all previous attempts at creating it did) it can be a clean moveonly commit (whether it goes to versionbits.o or somewhere else) instead of needing to change the function signature.\r\n ",
      "commit_id" : "a7ae7f9560720fe4245cdaa4eabc528d8b216f4d",
      "created_at" : "2017-04-27T16:36:02Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113744666",
      "id" : 113744666,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35160014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-04-27T16:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113744666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needs rebase",
      "created_at" : "2017-05-19T17:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-302762722",
      "id" : 302762722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-19T17:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302762722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
