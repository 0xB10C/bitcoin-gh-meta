[
   {
      "body" : "This is awesome.",
      "created_at" : "2017-04-12T18:03:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-293660229",
      "id" : 293660229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-12T18:03:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293660229",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Rebased on top of new #10148.",
      "created_at" : "2017-04-16T17:43:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-294364323",
      "id" : 294364323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-16T17:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294364323",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased without #10148 at popular request.",
      "created_at" : "2017-04-19T15:35:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-295313204",
      "id" : 295313204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-19T15:35:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295313204",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Few overrides needed probably:\r\n```\r\n+./coins.h:200:10: warning: 'BatchWrite' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\r\n+    bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\r\n+         ^\r\n+./coins.h:178:18: note: overridden virtual function is here\r\n+    virtual bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\r\n+                 ^\r\n+./coins.h:201:23: warning: 'Cursor' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\r\n+    CCoinsViewCursor *Cursor() const;\r\n+                      ^\r\n+./coins.h:181:31: note: overridden virtual function is here\r\n+    virtual CCoinsViewCursor *Cursor() const;\r\n+                              ^\r\n+2 warnings generated.\r\n```\r\n\r\nAnd few initializations:\r\n\r\n```\r\n+./undo.h:70:23: note: initialize the variable 'count' to silence this warning\r\n+        uint64_t count;\r\n+                      ^\r\n+                       = 0\r\n...\r\n+./coins.h:81:22: note: initialize the variable 'code' to silence this warning\r\n+        uint32_t code;\r\n+                     ^\r\n+                      = 0\r\n```",
      "created_at" : "2017-04-19T16:01:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-295323193",
      "id" : 295323193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-19T16:08:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295323193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r112495450"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112495450"
         }
      },
      "body" : "Why not just switch to hash_serialized_2?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-04-20T16:12:02Z",
      "diff_hunk" : "@@ -52,7 +52,6 @@ def _test_gettxoutsetinfo(self):\n         assert_equal(res['txouts'], 200)\n         assert_equal(res['bytes_serialized'], 13924),\n         assert_equal(len(res['bestblock']), 64)\n-        assert_equal(len(res['hash_serialized']), 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r112495450",
      "id" : 112495450,
      "original_commit_id" : "1aa8b8b8ba8e55ea493cb81ea892dde38c97d33b",
      "original_position" : 4,
      "path" : "test/functional/blockchain.py",
      "position" : null,
      "pull_request_review_id" : 33815611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112495450",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r112499717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112499717"
         }
      },
      "body" : "Shouldnt the first two be an error and not a \"done upgrading\" result?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-04-20T16:31:24Z",
      "diff_hunk" : "@@ -242,3 +243,120 @@ bool CBlockTreeDB::LoadBlockIndexGuts(boost::function<CBlockIndex*(const uint256\n \n     return true;\n }\n+\n+namespace {\n+\n+class COldCoins\n+{\n+public:\n+    //! whether transaction is a coinbase\n+    bool fCoinBase;\n+\n+    //! unspent transaction outputs; spent outputs are .IsNull(); spent outputs at the end of the array are dropped\n+    std::vector<CTxOut> vout;\n+\n+    //! at which height this transaction was included in the active block chain\n+    int nHeight;\n+\n+    //! version of the CTransaction; accesses to this value should probably check for nHeight as well,\n+    //! as new tx version will probably only be introduced at certain heights\n+    int nVersion;\n+\n+    //! empty constructor\n+    COldCoins() : fCoinBase(false), vout(0), nHeight(0), nVersion(0) { }\n+\n+    /**\n+     * calculate number of bytes for the bitmask, and its number of non-zero bytes\n+     * each bit in the bitmask represents the availability of one output, but the\n+     * availabilities of the first two outputs are encoded separately\n+     */\n+    void CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) const {\n+        unsigned int nLastUsedByte = 0;\n+        for (unsigned int b = 0; 2+b*8 < vout.size(); b++) {\n+            bool fZero = true;\n+            for (unsigned int i = 0; i < 8 && 2+b*8+i < vout.size(); i++) {\n+                if (!vout[2+b*8+i].IsNull()) {\n+                    fZero = false;\n+                    continue;\n+                }\n+            }\n+            if (!fZero) {\n+                nLastUsedByte = b + 1;\n+                nNonzeroBytes++;\n+            }\n+        }\n+        nBytes += nLastUsedByte;\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream &s) {\n+        unsigned int nCode = 0;\n+        // version\n+        ::Unserialize(s, VARINT(this->nVersion));\n+        // header code\n+        ::Unserialize(s, VARINT(nCode));\n+        fCoinBase = nCode & 1;\n+        std::vector<bool> vAvail(2, false);\n+        vAvail[0] = (nCode & 2) != 0;\n+        vAvail[1] = (nCode & 4) != 0;\n+        unsigned int nMaskCode = (nCode / 8) + ((nCode & 6) != 0 ? 0 : 1);\n+        // spentness bitmask\n+        while (nMaskCode > 0) {\n+            unsigned char chAvail = 0;\n+            ::Unserialize(s, chAvail);\n+            for (unsigned int p = 0; p < 8; p++) {\n+                bool f = (chAvail & (1 << p)) != 0;\n+                vAvail.push_back(f);\n+            }\n+            if (chAvail != 0)\n+                nMaskCode--;\n+        }\n+        // txouts themself\n+        vout.assign(vAvail.size(), CTxOut());\n+        for (unsigned int i = 0; i < vAvail.size(); i++) {\n+            if (vAvail[i])\n+                ::Unserialize(s, REF(CTxOutCompressor(vout[i])));\n+        }\n+        // coinbase height\n+        ::Unserialize(s, VARINT(nHeight));\n+    }\n+};\n+\n+}\n+\n+void CCoinsViewDB::Upgrade() {\n+    std::unique_ptr<CDBIterator> pcursor(db.NewIterator());\n+    pcursor->Seek(std::make_pair(DB_COINS_OLD, uint256()));\n+    if (!pcursor->Valid()) {\n+        return;\n+    }\n+\n+    LogPrintf(\"Upgrading database...\\n\");\n+    size_t batch_size = 1 << 24;\n+    CDBBatch batch(db);\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COldCoins oldcoins;\n+        std::pair<unsigned char, uint256> key;\n+        if (pcursor->GetValue(oldcoins) && pcursor->GetKey(key) && key.first == DB_COINS_OLD) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r112499717",
      "id" : 112499717,
      "original_commit_id" : "2f28c1c1ecf737870101473f1eb422e1d4219305",
      "original_position" : 107,
      "path" : "src/txdb.cpp",
      "position" : null,
      "pull_request_review_id" : 33815611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112499717",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I'm splitting the commits up more. I've pushed one update already, but I'm working splitting the big commit further.",
      "created_at" : "2017-04-22T11:43:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-296367685",
      "id" : 296367685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-22T11:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296367685",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Done. There is still one commit that does many things at once (\"Switch CCoinsView and chainstate db to per-txout\"), but splitting it is nontrivial. If requested, I can try splitting the database format change into a second commit, but that would require adding a bunch of conversion logic in the first commit that just gets removed in the second one. Thoughts?",
      "created_at" : "2017-04-24T21:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-296826822",
      "id" : 296826822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-24T21:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296826822",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r113130070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113130070"
         }
      },
      "body" : "init to 0 here please.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-04-25T08:08:07Z",
      "diff_hunk" : "@@ -12,53 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-    int nVersion;         // if the outpoint was the last unspent: its version\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0), nVersion(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0, int nVersionIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn), nVersion(nVersionIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0)\n-            ::Serialize(s, VARINT(this->nVersion));\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n+        }\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0)\n-            ::Unserialize(s, VARINT(this->nVersion));\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n+            int nVersionDummy;\n+            ::Unserialize(s, VARINT(nVersionDummy));\n+        }\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer\n+        uint64_t count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r113130070",
      "id" : 113130070,
      "original_commit_id" : "8da478ebd71caf0acd307ce0b160f0a93cae68c2",
      "original_position" : 86,
      "path" : "src/undo.h",
      "position" : 85,
      "pull_request_review_id" : 34492929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113130070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Rebased and reset the author timestamps (so that GitHub shows them in logical order, $@#!*).",
      "created_at" : "2017-04-25T18:31:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-297123617",
      "id" : 297123617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-04-25T18:31:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297123617",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-05-03T03:34:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-298816331",
      "id" : 298816331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-05-03T03:34:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298816331",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114555652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114555652"
         }
      },
      "body" : "In commit \"error() in disconnect for disk corruption, not inconsistency\"\r\n\r\nGiven that you're already changing places where fClean is set, might be good also to change return type of `ApplyTxInUndo` from `bool` to `DisconnectResult`, which I think would make the code more consistent and easier to understand.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T14:16:44Z",
      "diff_hunk" : "@@ -1504,18 +1504,15 @@ bool ApplyTxInUndo(const CTxInUndo& undo, CCoinsViewCache& view, const COutPoint\n     CCoinsModifier coins = view.ModifyCoins(out.hash);\n     if (undo.nHeight != 0) {\n         // undo data contains height: this is the last output of the prevout tx being spent\n-        if (!coins->IsPruned())\n-            fClean = fClean && error(\"%s: undo data overwriting existing transaction\", __func__);\n+        if (!coins->IsPruned()) fClean = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114555652",
      "id" : 114555652,
      "original_commit_id" : "f42c47b59d1622ece33b8ca4d05833dd3693ac4b",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114555652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114556290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114556290"
         }
      },
      "body" : "In commit \"error() in disconnect for disk corruption, not inconsistency\"\r\n\r\nMaybe the old error strings should become code comments, since they seem useful for understanding the different cases.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T14:19:04Z",
      "diff_hunk" : "@@ -1504,18 +1504,15 @@ bool ApplyTxInUndo(const CTxInUndo& undo, CCoinsViewCache& view, const COutPoint\n     CCoinsModifier coins = view.ModifyCoins(out.hash);\n     if (undo.nHeight != 0) {\n         // undo data contains height: this is the last output of the prevout tx being spent\n-        if (!coins->IsPruned())\n-            fClean = fClean && error(\"%s: undo data overwriting existing transaction\", __func__);\n+        if (!coins->IsPruned()) fClean = false;\n         coins->Clear();\n         coins->fCoinBase = undo.fCoinBase;\n         coins->nHeight = undo.nHeight;\n         coins->nVersion = undo.nVersion;\n     } else {\n-        if (coins->IsPruned())\n-            fClean = fClean && error(\"%s: undo data adding output to missing transaction\", __func__);\n+        if (coins->IsPruned()) fClean = false;\n     }\n-    if (coins->IsAvailable(out.n))\n-        fClean = fClean && error(\"%s: undo data overwriting existing output\", __func__);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114556290",
      "id" : 114556290,
      "original_commit_id" : "f42c47b59d1622ece33b8ca4d05833dd3693ac4b",
      "original_position" : 17,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114556290",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114561307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114561307"
         }
      },
      "body" : "In commit \"Introduce CHashVerifier to hash read data\"\r\n\r\nCould replace these two lines with just `read(data, now);`",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T14:37:07Z",
      "diff_hunk" : "@@ -160,6 +160,42 @@ class CHashWriter\n     }\n };\n \n+/** Reads data from an underlying stream, while hashing the read data. */\n+template<typename Source>\n+class CHashVerifier : public CHashWriter\n+{\n+private:\n+    Source* source;\n+\n+public:\n+    CHashVerifier(Source* source_) : CHashWriter(source_->GetType(), source_->GetVersion()), source(source_) {}\n+\n+    void read(char* pch, size_t nSize)\n+    {\n+        source->read(pch, nSize);\n+        this->write(pch, nSize);\n+    }\n+\n+    void ignore(size_t nSize)\n+    {\n+        char data[1024];\n+        while (nSize > 0) {\n+            size_t now = std::min<size_t>(nSize, 1024);\n+            source->read(data, now);\n+            this->write(data, now);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114561307",
      "id" : 114561307,
      "original_commit_id" : "2f0f26b34735d4249f3ec44799bdac499d7b8a1e",
      "original_position" : 26,
      "path" : "src/hash.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114561307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114568040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114568040"
         }
      },
      "body" : "In commit \"Remove/ignore tx version in utxo and undo\"\r\n\r\nMaybe mention this change in the commit message. It seems like a good change (I guess it makes the hash more robust), but not really related to the version stuff?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T15:00:58Z",
      "diff_hunk" : "@@ -793,12 +793,14 @@ static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n         if (pcursor->GetKey(key) && pcursor->GetValue(coins)) {\n             stats.nTransactions++;\n             ss << key;\n+            ss << VARINT(coins.nHeight * 2 + coins.fCoinBase);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114568040",
      "id" : 114568040,
      "original_commit_id" : "43fa7b7b116b8b74a32346a39de146a7cca98278",
      "original_position" : 4,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114568040",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114569087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114569087"
         }
      },
      "body" : "In commit \"Remove/ignore tx version in utxo and undo\"\r\n\r\nMaybe update `doc/release-notes.md` noting the various changes in RPC output here.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T15:04:27Z",
      "diff_hunk" : "@@ -977,7 +979,6 @@ UniValue gettxout(const JSONRPCRequest& request)\n     UniValue o(UniValue::VOBJ);\n     ScriptPubKeyToUniv(coins.vout[n].scriptPubKey, o, true);\n     ret.push_back(Pair(\"scriptPubKey\", o));\n-    ret.push_back(Pair(\"version\", coins.nVersion));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114569087",
      "id" : 114569087,
      "original_commit_id" : "43fa7b7b116b8b74a32346a39de146a7cca98278",
      "original_position" : 29,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114569087",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114578273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114578273"
         }
      },
      "body" : "In commit \"Store/allow tx metadata in all undo records\"\r\n\r\nMaybe expand this comment, I think new code would be confusing to read without knowing the history. Suggest maybe:\r\n\r\n```\r\n// Undo data does not contain height/coinbase. This should never happen\r\n// currently. Previously, this data was only saved for pruned transactions,\r\n// so check coins->IsPruned().\r\n```",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T15:38:09Z",
      "diff_hunk" : "@@ -1501,12 +1499,15 @@ bool ApplyTxInUndo(const CTxInUndo& undo, CCoinsViewCache& view, const COutPoint\n \n     CCoinsModifier coins = view.ModifyCoins(out.hash);\n     if (undo.nHeight != 0) {\n-        // undo data contains height: this is the last output of the prevout tx being spent\n-        if (!coins->IsPruned()) fClean = false;\n-        coins->Clear();\n+        if (!coins->IsPruned()) {\n+            // verify that the undo data matches the utxo tx metadata\n+            if (coins->fCoinBase != undo.fCoinBase || (uint32_t)coins->nHeight != undo.nHeight) fClean = false;\n+        }\n+        // restore height/coinbase tx metadata from undo data\n         coins->fCoinBase = undo.fCoinBase;\n         coins->nHeight = undo.nHeight;\n     } else {\n+        // undo data does not contain height/coinbase: it cannot be the last spent output of a tx",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114578273",
      "id" : 114578273,
      "original_commit_id" : "880868b0a76f8b64f8663387fbb6398347061a96",
      "original_position" : 30,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114578273",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114583897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114583897"
         }
      },
      "body" : "In commit \"Introduce CCoin, a single unspent output\"\r\n\r\nThis equality operator doesn't seem like something you would want to encourage use of. Maybe just move to coins_test where it's needed.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T15:59:15Z",
      "diff_hunk" : "@@ -20,6 +20,81 @@\n #include <boost/foreach.hpp>\n #include <unordered_map>\n \n+/**\n+ * A UTXO entry.\n+ *\n+ * Serialized format:\n+ * - VARINT(coinbase + height * 2)\n+ * - the non-spent CTxOut (via CTxOutCompressor)\n+ */\n+class CCoin\n+{\n+public:\n+    //! whether transaction is a coinbase\n+    bool fCoinBase;\n+\n+    //! unspent transaction outputs; spent outputs are .IsNull()\n+    CTxOut out;\n+\n+    //! at which height this transaction was included in the active block chain\n+    uint32_t nHeight;\n+\n+    //! construct a CCoin from a CTransaction, at a given height\n+    CCoin(CTxOut&& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(std::move(outIn)), nHeight(nHeightIn) {}\n+    CCoin(const CTxOut& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(outIn), nHeight(nHeightIn) {}\n+\n+    void Clear() {\n+        out.SetNull();\n+        fCoinBase = false;\n+        nHeight = 0;\n+    }\n+\n+    //! empty constructor\n+    CCoin() : fCoinBase(false), nHeight(0) { }\n+\n+    //! equality test\n+    friend bool operator==(const CCoin &a, const CCoin &b) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114583897",
      "id" : 114583897,
      "original_commit_id" : "0810a11afb30e778c56e6518beeb246c0f289318",
      "original_position" : 37,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114583897",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114584597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114584597"
         }
      },
      "body" : "In commit \"Introduce CCoin, a single unspent output\"\r\n\r\nMaybe Clear() / Pruned() should be named consistently? Prune/Pruned or Clear/IsCleared",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T16:01:59Z",
      "diff_hunk" : "@@ -20,6 +20,81 @@\n #include <boost/foreach.hpp>\n #include <unordered_map>\n \n+/**\n+ * A UTXO entry.\n+ *\n+ * Serialized format:\n+ * - VARINT(coinbase + height * 2)\n+ * - the non-spent CTxOut (via CTxOutCompressor)\n+ */\n+class CCoin\n+{\n+public:\n+    //! whether transaction is a coinbase\n+    bool fCoinBase;\n+\n+    //! unspent transaction outputs; spent outputs are .IsNull()\n+    CTxOut out;\n+\n+    //! at which height this transaction was included in the active block chain\n+    uint32_t nHeight;\n+\n+    //! construct a CCoin from a CTransaction, at a given height\n+    CCoin(CTxOut&& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(std::move(outIn)), nHeight(nHeightIn) {}\n+    CCoin(const CTxOut& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(outIn), nHeight(nHeightIn) {}\n+\n+    void Clear() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114584597",
      "id" : 114584597,
      "original_commit_id" : "0810a11afb30e778c56e6518beeb246c0f289318",
      "original_position" : 27,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114584597",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114604501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114604501"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nGuess this comment should have been updated in the earlier commits, but good to see it updated.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:28:16Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114604501",
      "id" : 114604501,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 9,
      "path" : "src/undo.h",
      "position" : 9,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114604501",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114606471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114606471"
         }
      },
      "body" : "In commit \"Store/allow tx metadata in all undo records\"\r\n\r\nWhat does it mean in the commit message that \"undo dat written with this patch won't be readable by older versions anymore.\"? If this change is just writing actual data where there used to be 0's before, why would older versions have a problem reading it?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:36:29Z",
      "diff_hunk" : "@@ -1278,11 +1278,9 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             // mark an outpoint spent, and construct undo information\n             txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n             coins->Spend(nPos);\n-            if (coins->vout.size() == 0) {\n-                CTxInUndo& undo = txundo.vprevout.back();\n-                undo.nHeight = coins->nHeight;\n-                undo.fCoinBase = coins->fCoinBase;\n-            }\n+            CTxInUndo& undo = txundo.vprevout.back();\n+            undo.nHeight = coins->nHeight;\n+            undo.fCoinBase = coins->fCoinBase;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114606471",
      "id" : 114606471,
      "original_commit_id" : "389181ab57989e7276aa663d21d550ed4bd9da66",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114606471",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610132"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nThis isn't done in the current PR. What's the future plan?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:52:28Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610132",
      "id" : 114610132,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 84,
      "path" : "src/undo.h",
      "position" : 84,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610132",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610276"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nWhat's the alternative?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:53:00Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer\n+        uint64_t count;\n+        ::Unserialize(s, COMPACTSIZE(count));\n+        if (count > 111111) { // TODO: avoid hardcoding max txouts per tx",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610276",
      "id" : 114610276,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 87,
      "path" : "src/undo.h",
      "position" : 87,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610276",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610794"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nThis seems like it should be a for loop or range-for loop.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:55:09Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114610794",
      "id" : 114610794,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 74,
      "path" : "src/undo.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114610794",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114611236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114611236"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\n`for (auto& prevout : vprevout)`?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:56:28Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer\n+        uint64_t count;\n+        ::Unserialize(s, COMPACTSIZE(count));\n+        if (count > 111111) { // TODO: avoid hardcoding max txouts per tx\n+            throw std::ios_base::failure(\"Too many input undo records\");\n+        }\n+        vprevout.resize(count);\n+        uint64_t n = 0;\n+        while (n < count) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114611236",
      "id" : 114611236,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 92,
      "path" : "src/undo.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114611236",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114611511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114611511"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nMaybe `emplace_back`",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T17:57:29Z",
      "diff_hunk" : "@@ -1276,11 +1276,8 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             if (nPos >= coins->vout.size() || coins->vout[nPos].IsNull())\n                 assert(false);\n             // mark an outpoint spent, and construct undo information\n-            txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n+            txundo.vprevout.push_back(CCoin(std::move(coins->vout[nPos]), coins->nHeight, coins->fCoinBase));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114611511",
      "id" : 114611511,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114611511",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114613086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114613086"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nI'm not sure this std::move is ok. If `vout[nPos]` is cleared out then the `Spend` call below will fail early and never call `CCoins::Cleanup`.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T18:03:54Z",
      "diff_hunk" : "@@ -1276,11 +1276,8 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             if (nPos >= coins->vout.size() || coins->vout[nPos].IsNull())\n                 assert(false);\n             // mark an outpoint spent, and construct undo information\n-            txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n+            txundo.vprevout.push_back(CCoin(std::move(coins->vout[nPos]), coins->nHeight, coins->fCoinBase));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114613086",
      "id" : 114613086,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114613086",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114613254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114613254"
         }
      },
      "body" : "In commit \"Replace CTxInUndo with CCoin\"\r\n\r\nMight be good to check the return value from Spend. Or have Spend raise errors instead of returning bool.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T18:04:35Z",
      "diff_hunk" : "@@ -1276,11 +1276,8 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             if (nPos >= coins->vout.size() || coins->vout[nPos].IsNull())\n                 assert(false);\n             // mark an outpoint spent, and construct undo information\n-            txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n+            txundo.vprevout.push_back(CCoin(std::move(coins->vout[nPos]), coins->nHeight, coins->fCoinBase));\n             coins->Spend(nPos);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114613254",
      "id" : 114613254,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114613254",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114625074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114625074"
         }
      },
      "body" : "In commit \"Introduce new per-txout CCoinsViewCache functions\"\r\n\r\nShould it be an error to spend a coin that can't be found? Can you add a comment here explaining when this case is expected to happen if it is not an error condition?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T18:53:10Z",
      "diff_hunk" : "@@ -152,6 +152,55 @@ CCoinsModifier CCoinsViewCache::ModifyNewCoins(const uint256 &txid, bool coinbas\n     return CCoinsModifier(*this, ret.first, 0);\n }\n \n+void CCoinsViewCache::AddCoin(const COutPoint &outpoint, CCoin&& coin, bool possible_overwrite) {\n+    assert(!coin.IsPruned());\n+    auto ret = cacheCoins.emplace(std::piecewise_construct, std::forward_as_tuple(outpoint.hash), std::forward_as_tuple(nullptr));\n+    bool fresh = false;\n+    if (!ret.second) {\n+        cachedCoinsUsage -= ret.first->second.coins.DynamicMemoryUsage();\n+    }\n+    if (!possible_overwrite) {\n+        if (ret.first->second.coins.IsAvailable(outpoint.n)) {\n+            throw std::logic_error(\"Adding new coin that replaces non-pruned entry\");\n+        }\n+        fresh = !(ret.first->second.flags & CCoinsCacheEntry::DIRTY);\n+    }\n+    if (ret.first->second.coins.vout.size() <= outpoint.n) {\n+        ret.first->second.coins.vout.resize(outpoint.n + 1);\n+    }\n+    ret.first->second.coins.vout[outpoint.n] = std::move(coin.out);\n+    ret.first->second.coins.nHeight = coin.nHeight;\n+    ret.first->second.coins.fCoinBase = coin.fCoinBase;\n+    ret.first->second.flags |= CCoinsCacheEntry::DIRTY | (fresh ? CCoinsCacheEntry::FRESH : 0);\n+    cachedCoinsUsage += ret.first->second.coins.DynamicMemoryUsage();\n+}\n+\n+void AddCoins(CCoinsViewCache& cache, const CTransaction &tx, int nHeight) {\n+    bool fCoinbase = tx.IsCoinBase();\n+    const uint256& txid = tx.GetHash();\n+    for (size_t i = 0; i < tx.vout.size(); ++i) {\n+        if (!tx.vout[i].scriptPubKey.IsUnspendable()) {\n+            cache.AddCoin(COutPoint(txid, i), CCoin(tx.vout[i], nHeight, fCoinbase), fCoinbase);\n+        }\n+    }\n+}\n+\n+void CCoinsViewCache::SpendCoin(const COutPoint &outpoint, CCoin* moveout) {\n+    CCoinsMap::iterator it = FetchCoins(outpoint.hash);\n+    if (it == cacheCoins.end()) return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114625074",
      "id" : 114625074,
      "original_commit_id" : "93733c0c974030be1efcc1ae3b28fb03ceb772ce",
      "original_position" : 48,
      "path" : "src/coins.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114625074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114625361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114625361"
         }
      },
      "body" : "In commit \"Introduce new per-txout CCoinsViewCache functions\"\r\n\r\nAgain should it be an error if IsAvailable is not true?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T18:54:08Z",
      "diff_hunk" : "@@ -152,6 +152,55 @@ CCoinsModifier CCoinsViewCache::ModifyNewCoins(const uint256 &txid, bool coinbas\n     return CCoinsModifier(*this, ret.first, 0);\n }\n \n+void CCoinsViewCache::AddCoin(const COutPoint &outpoint, CCoin&& coin, bool possible_overwrite) {\n+    assert(!coin.IsPruned());\n+    auto ret = cacheCoins.emplace(std::piecewise_construct, std::forward_as_tuple(outpoint.hash), std::forward_as_tuple(nullptr));\n+    bool fresh = false;\n+    if (!ret.second) {\n+        cachedCoinsUsage -= ret.first->second.coins.DynamicMemoryUsage();\n+    }\n+    if (!possible_overwrite) {\n+        if (ret.first->second.coins.IsAvailable(outpoint.n)) {\n+            throw std::logic_error(\"Adding new coin that replaces non-pruned entry\");\n+        }\n+        fresh = !(ret.first->second.flags & CCoinsCacheEntry::DIRTY);\n+    }\n+    if (ret.first->second.coins.vout.size() <= outpoint.n) {\n+        ret.first->second.coins.vout.resize(outpoint.n + 1);\n+    }\n+    ret.first->second.coins.vout[outpoint.n] = std::move(coin.out);\n+    ret.first->second.coins.nHeight = coin.nHeight;\n+    ret.first->second.coins.fCoinBase = coin.fCoinBase;\n+    ret.first->second.flags |= CCoinsCacheEntry::DIRTY | (fresh ? CCoinsCacheEntry::FRESH : 0);\n+    cachedCoinsUsage += ret.first->second.coins.DynamicMemoryUsage();\n+}\n+\n+void AddCoins(CCoinsViewCache& cache, const CTransaction &tx, int nHeight) {\n+    bool fCoinbase = tx.IsCoinBase();\n+    const uint256& txid = tx.GetHash();\n+    for (size_t i = 0; i < tx.vout.size(); ++i) {\n+        if (!tx.vout[i].scriptPubKey.IsUnspendable()) {\n+            cache.AddCoin(COutPoint(txid, i), CCoin(tx.vout[i], nHeight, fCoinbase), fCoinbase);\n+        }\n+    }\n+}\n+\n+void CCoinsViewCache::SpendCoin(const COutPoint &outpoint, CCoin* moveout) {\n+    CCoinsMap::iterator it = FetchCoins(outpoint.hash);\n+    if (it == cacheCoins.end()) return;\n+    cachedCoinsUsage -= it->second.coins.DynamicMemoryUsage();\n+    if (moveout && it->second.coins.IsAvailable(outpoint.n)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114625361",
      "id" : 114625361,
      "original_commit_id" : "93733c0c974030be1efcc1ae3b28fb03ceb772ce",
      "original_position" : 50,
      "path" : "src/coins.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114625361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114626538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114626538"
         }
      },
      "body" : "In commit \"Introduce new per-txout CCoinsViewCache functions\"\r\n\r\nJust noting at this point the comment is aspirational. It becomes true in a later commit.\r\n",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T18:59:27Z",
      "diff_hunk" : "@@ -480,6 +482,13 @@ class CCoinsViewCache : public CCoinsViewBacked\n     const CCoins* AccessCoins(const uint256 &txid) const;\n \n     /**\n+     * Return a reference to CCoin in the cache, or a pruned one if not found. This is\n+     * more efficient than GetCoins. Modifications to other cache entries are\n+     * allowed while accessing the returned pointer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114626538",
      "id" : 114626538,
      "original_commit_id" : "93733c0c974030be1efcc1ae3b28fb03ceb772ce",
      "original_position" : 22,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114626538",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114631654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114631654"
         }
      },
      "body" : "In commit \"Switch from per-tx to per-txout CCoinsViewCache methods in some places\"\r\n\r\nCould you add a comment saying what this is for? This would only seem to affect the internal state of the view. Realize your change probably doesn't affect whatever it's supposed to be doing, ",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T19:23:42Z",
      "diff_hunk" : "@@ -632,9 +632,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n         view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\n \n         BOOST_FOREACH(const CTxIn& txin, mergedTx.vin) {\n-            const uint256& prevHash = txin.prevout.hash;\n-            CCoins coins;\n-            view.AccessCoins(prevHash); // this is certainly allowed to fail\n+            view.AccessCoin(txin.prevout); // this is certainly allowed to fail",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114631654",
      "id" : 114631654,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 7,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114631654",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114636226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114636226"
         }
      },
      "body" : "In commit \"Switch from per-tx to per-txout CCoinsViewCache methods in some places\"\r\n\r\nSeems like there should be a more direct way to do this using leveldb Iterator::Seek. Unfortunately the cache map is unordered so harder to search by txid.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T19:47:48Z",
      "diff_hunk" : "@@ -1016,11 +1016,14 @@ bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus\n \n     if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n         int nHeight = -1;\n-        {\n+        size_t out = 0;\n+        while (nHeight == -1 && out < 1024) { // Only try first 1024 outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114636226",
      "id" : 114636226,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 17,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114636226",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114636458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114636458"
         }
      },
      "body" : "In commit \"Switch from per-tx to per-txout CCoinsViewCache methods in some places\"\r\n\r\nSeems like should be a for loop, not while.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T19:48:49Z",
      "diff_hunk" : "@@ -1016,11 +1016,14 @@ bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus\n \n     if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n         int nHeight = -1;\n-        {\n+        size_t out = 0;\n+        while (nHeight == -1 && out < 1024) { // Only try first 1024 outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114636458",
      "id" : 114636458,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 17,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114636458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114639256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114639256"
         }
      },
      "body" : "In commit \"Switch from per-tx to per-txout CCoinsViewCache methods in some places\"\r\n\r\nThis commit is a lot to take in at once. It consists of a lot of straightforward replacements, plus 2 more gnarly workarounds (the \"try first 1024 outputs\" code above, and this undo height/coinbase reconstruction). Would recommend splitting the two workarounds out into separate commits so they don't get in the way of the easier parts of the review.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:01:52Z",
      "diff_hunk" : "@@ -1494,23 +1490,27 @@ bool ApplyTxInUndo(CCoin&& undo, CCoinsViewCache& view, const COutPoint& out)\n {\n     bool fClean = true;\n \n-    CCoinsModifier coins = view.ModifyCoins(out.hash);\n-    if (undo.nHeight != 0) {\n-        if (!coins->IsPruned()) {\n-            // verify that the undo data matches the utxo tx metadata\n-            if (coins->fCoinBase != undo.fCoinBase || (uint32_t)coins->nHeight != undo.nHeight) fClean = false;\n+    if (view.HaveCoins(out)) fClean = false;\n+\n+    if (undo.nHeight == 0) {\n+        // Missing undo metadata (height and coinbase). Older versions included this\n+        // information only in undo records for the last spend of a transactions'\n+        // outputs. This implies that it must be present for some other output of the same tx.\n+        COutPoint iter(out.hash, 0);\n+        bool found = false;\n+        while (iter.n * ::GetSerializeSize(CTxOut(), SER_NETWORK, PROTOCOL_VERSION) < MAX_BLOCK_BASE_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114639256",
      "id" : 114639256,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 99,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114639256",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114639530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114639530"
         }
      },
      "body" : "In commit \"Switch from per-tx to per-txout CCoinsViewCache methods in some places\"\r\n\r\nMeant to be `const auto&`?",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:03:13Z",
      "diff_hunk" : "@@ -1494,23 +1490,27 @@ bool ApplyTxInUndo(CCoin&& undo, CCoinsViewCache& view, const COutPoint& out)\n {\n     bool fClean = true;\n \n-    CCoinsModifier coins = view.ModifyCoins(out.hash);\n-    if (undo.nHeight != 0) {\n-        if (!coins->IsPruned()) {\n-            // verify that the undo data matches the utxo tx metadata\n-            if (coins->fCoinBase != undo.fCoinBase || (uint32_t)coins->nHeight != undo.nHeight) fClean = false;\n+    if (view.HaveCoins(out)) fClean = false;\n+\n+    if (undo.nHeight == 0) {\n+        // Missing undo metadata (height and coinbase). Older versions included this\n+        // information only in undo records for the last spend of a transactions'\n+        // outputs. This implies that it must be present for some other output of the same tx.\n+        COutPoint iter(out.hash, 0);\n+        bool found = false;\n+        while (iter.n * ::GetSerializeSize(CTxOut(), SER_NETWORK, PROTOCOL_VERSION) < MAX_BLOCK_BASE_SIZE) {\n+            const auto alternate = view.AccessCoin(iter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114639530",
      "id" : 114639530,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 100,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114639530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114643391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114643391"
         }
      },
      "body" : "In commit \"Switch tests from ModifyCoins to AddCoin/SpendCoin\"\r\n\r\nConsider replacing \"coinbase\" everywhere in this test with \"potential_overwrite\" to reflect the new name of the argument.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:21:45Z",
      "diff_hunk" : "@@ -724,64 +704,46 @@ void CheckModifyNewCoinsBase(CAmount base_value, CAmount cache_value, CAmount mo\n     BOOST_CHECK_EQUAL(result_flags, expected_flags);\n }\n \n-// Simple wrapper for CheckModifyNewCoinsBase function above that loops through\n+// Simple wrapper for CheckAddCoinBase function above that loops through\n // different possible base_values, making sure each one gives the same results.\n // This wrapper lets the modify_new test below be shorter and less repetitive,\n // while still verifying that the CoinsViewCache::ModifyNewCoins implementation\n // ignores base values.\n template <typename... Args>\n-void CheckModifyNewCoins(Args&&... args)\n+void CheckAddCoin(Args&&... args)\n {\n     for (CAmount base_value : {ABSENT, PRUNED, VALUE1})\n-        CheckModifyNewCoinsBase(base_value, std::forward<Args>(args)...);\n+        CheckAddCoinBase(base_value, std::forward<Args>(args)...);\n }\n \n-BOOST_AUTO_TEST_CASE(ccoins_modify_new)\n+BOOST_AUTO_TEST_CASE(ccoins_add)\n {\n-    /* Check ModifyNewCoin behavior, requesting a new coin from a cache view,\n+    /* Check AddCoin behavior, requesting a new coin from a cache view,\n      * writing a modification to the coin, and then checking the resulting\n      * entry in the cache after the modification. Verify behavior with the\n      * with the ModifyNewCoin coinbase argument set to false, and to true.\n      *\n-     *                  Cache   Write   Result  Cache        Result     Coinbase\n-     *                  Value   Value   Value   Flags        Flags\n+     *           Cache   Write   Result  Cache        Result     Coinbase",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114643391",
      "id" : 114643391,
      "original_commit_id" : "b3c81cf91a819bfdac06dd80c095483e8e8b2364",
      "original_position" : 277,
      "path" : "src/test/coins_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114643391",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114644951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114644951"
         }
      },
      "body" : "In commit \"Refactor GetUTXOStats in preparation for per-COutPoint iteration\"\r\n\r\nShould check or assert outputs.size() is not 0.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:29:00Z",
      "diff_hunk" : "@@ -773,6 +773,21 @@ struct CCoinsStats\n     CCoinsStats() : nHeight(0), nTransactions(0), nTransactionOutputs(0), nSerializedSize(0), nTotalAmount(0) {}\n };\n \n+static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, CCoin>& outputs)\n+{\n+    ss << hash;\n+    ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114644951",
      "id" : 114644951,
      "original_commit_id" : "19eb485cc4e59b0cadd3a13c12d338b7836d17d1",
      "original_position" : 7,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114644951",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114646373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114646373"
         }
      },
      "body" : "In commit \"Switch CCoinsView and chainstate db from per-txid to per-txout\"\r\n\r\nShould this be called coin instead of coins? Also should `CCoinsCacheEntry` class be renamed? (maybe in a separate commit if it would make this diff bigger.)",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:34:26Z",
      "diff_hunk" : "@@ -312,28 +312,28 @@ class CCoins\n     }\n };\n \n-class SaltedTxidHasher\n+class SaltedOutpointHasher\n {\n private:\n     /** Salt */\n     const uint64_t k0, k1;\n \n public:\n-    SaltedTxidHasher();\n+    SaltedOutpointHasher();\n \n     /**\n      * This *must* return size_t. With Boost 1.46 on 32-bit systems the\n      * unordered_map will behave unpredictably if the custom hasher returns a\n      * uint64_t, resulting in failures when syncing the chain (#4634).\n      */\n-    size_t operator()(const uint256& txid) const {\n-        return SipHashUint256(k0, k1, txid);\n+    size_t operator()(const COutPoint& id) const {\n+        return SipHashUint256Extra(k0, k1, id.hash, id.n);\n     }\n };\n \n struct CCoinsCacheEntry\n {\n-    CCoins coins; // The actual cached data.\n+    CCoin coins; // The actual cached data.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114646373",
      "id" : 114646373,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 30,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114646373",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114646810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114646810"
         }
      },
      "body" : "In commit \"Switch CCoinsView and chainstate db from per-txid to per-txout\"\r\n\r\nThis seems identical to the default constructor. Maybe remove and call that instead, or remove the default constructor.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:36:22Z",
      "diff_hunk" : "@@ -346,21 +346,22 @@ struct CCoinsCacheEntry\n          */\n     };\n \n-    CCoinsCacheEntry() : coins(), flags(0) {}\n-    CCoinsCacheEntry(nullptr_t) : coins(), flags(0) {}\n+    CCoinsCacheEntry() : flags(0) {}\n+    explicit CCoinsCacheEntry(std::nullptr_t) : coins(), flags(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114646810",
      "id" : 114646810,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 41,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114646810",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114648278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114648278"
         }
      },
      "body" : "In commit \"Switch CCoinsView and chainstate db from per-txid to per-txout\"\r\n\r\nComment above on line 913 needs to be updated.\r\n\r\nAlso maybe worth noting this change of behavior in the commit message.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:42:36Z",
      "diff_hunk" : "@@ -914,8 +914,7 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n             // requesting or processing some txs which have already been included in a block\n             return recentRejects->contains(inv.hash) ||\n                    mempool.exists(inv.hash) ||\n-                   mapOrphanTransactions.count(inv.hash) ||\n-                   pcoinsTip->HaveCoinsInCache(inv.hash);\n+                   mapOrphanTransactions.count(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114648278",
      "id" : 114648278,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 6,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114648278",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114650081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114650081"
         }
      },
      "body" : "In commit \"Refactor GetUTXOStats in preparation for per-COutPoint iteration\":\r\n\r\nThis stats.ntotalamount value seems to get overwritten in line 815. Probably that line should be removed.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:50:15Z",
      "diff_hunk" : "@@ -773,6 +773,21 @@ struct CCoinsStats\n     CCoinsStats() : nHeight(0), nTransactions(0), nTransactionOutputs(0), nSerializedSize(0), nTotalAmount(0) {}\n };\n \n+static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, CCoin>& outputs)\n+{\n+    ss << hash;\n+    ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase);\n+    stats.nTransactions++;\n+    for (const auto output : outputs) {\n+        ss << VARINT(output.first + 1);\n+        ss << *(const CScriptBase*)(&output.second.out.scriptPubKey);\n+        ss << VARINT(output.second.out.nValue);\n+        stats.nTransactionOutputs++;\n+        stats.nTotalAmount += output.second.out.nValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114650081",
      "id" : 114650081,
      "original_commit_id" : "19eb485cc4e59b0cadd3a13c12d338b7836d17d1",
      "original_position" : 14,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114650081",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114651793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114651793"
         }
      },
      "body" : "In commit \"Switch CCoinsView and chainstate db from per-txid to per-txout\"\r\n\r\nOh no... not another one of these 1024-output-while-loop-that-should-be-a-for-loop things!\r\n\r\nI'd suggest adding a  `GetTxHeight(CCoinsView&, const& uint256)` or similar helper function implementing the lookup 1024 times logic in a single place that could potentially be improved later.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T20:57:49Z",
      "diff_hunk" : "@@ -219,9 +219,13 @@ UniValue gettxoutproof(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         pblockindex = mapBlockIndex[hashBlock];\n     } else {\n-        CCoins coins;\n-        if (pcoinsTip->GetCoins(oneTxid, coins) && coins.nHeight > 0 && coins.nHeight <= chainActive.Height())\n-            pblockindex = chainActive[coins.nHeight];\n+        CCoin coins;\n+        size_t o = 0;\n+        while (pblockindex == nullptr && o < 1024) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114651793",
      "id" : 114651793,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 9,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114651793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114653075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114653075"
         }
      },
      "body" : "In commit \"Switch CCoinsView and chainstate db from per-txid to per-txout\"\r\n\r\nMaybe rename txid to outpoint in various places.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-03T21:03:40Z",
      "diff_hunk" : "@@ -889,19 +888,23 @@ bool CTxMemPool::HasNoInputsOf(const CTransaction &tx) const\n \n CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView* baseIn, const CTxMemPool& mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n \n-bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n+bool CCoinsViewMemPool::GetCoins(const COutPoint &txid, CCoin &coins) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114653075",
      "id" : 114653075,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 28,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 36031717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114653075",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Updated and addressed many of @ryanofsky's review comments. I'll respond only individually to the ones I'm not addressing.",
      "created_at" : "2017-05-04T01:51:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-299080792",
      "id" : 299080792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-05-04T01:51:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299080792",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689234"
         }
      },
      "body" : "Older code requires that there are 0s for everything but the last spend of an output, in the disconnect code. That's what the \"allow\" refers to in the commit title: it allows nonzero metadata in any undo record.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:54:00Z",
      "diff_hunk" : "@@ -1278,11 +1278,9 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             // mark an outpoint spent, and construct undo information\n             txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n             coins->Spend(nPos);\n-            if (coins->vout.size() == 0) {\n-                CTxInUndo& undo = txundo.vprevout.back();\n-                undo.nHeight = coins->nHeight;\n-                undo.fCoinBase = coins->fCoinBase;\n-            }\n+            CTxInUndo& undo = txundo.vprevout.back();\n+            undo.nHeight = coins->nHeight;\n+            undo.fCoinBase = coins->fCoinBase;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689234",
      "id" : 114689234,
      "original_commit_id" : "389181ab57989e7276aa663d21d550ed4bd9da66",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36176721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689234",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689261"
         }
      },
      "body" : "This is very hard, unfortunately.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:54:20Z",
      "diff_hunk" : "@@ -1016,11 +1016,14 @@ bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus\n \n     if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n         int nHeight = -1;\n-        {\n+        size_t out = 0;\n+        while (nHeight == -1 && out < 1024) { // Only try first 1024 outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689261",
      "id" : 114689261,
      "original_commit_id" : "40982486bbf8575ed73ac7b2870b29cfee6d4e96",
      "original_position" : 17,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36176747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689261",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689363"
         }
      },
      "body" : "Not going to rename things all over the place now. Maybe I can add a commit at the end that fixes it up later.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:55:55Z",
      "diff_hunk" : "@@ -20,6 +20,81 @@\n #include <boost/foreach.hpp>\n #include <unordered_map>\n \n+/**\n+ * A UTXO entry.\n+ *\n+ * Serialized format:\n+ * - VARINT(coinbase + height * 2)\n+ * - the non-spent CTxOut (via CTxOutCompressor)\n+ */\n+class CCoin\n+{\n+public:\n+    //! whether transaction is a coinbase\n+    bool fCoinBase;\n+\n+    //! unspent transaction outputs; spent outputs are .IsNull()\n+    CTxOut out;\n+\n+    //! at which height this transaction was included in the active block chain\n+    uint32_t nHeight;\n+\n+    //! construct a CCoin from a CTransaction, at a given height\n+    CCoin(CTxOut&& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(std::move(outIn)), nHeight(nHeightIn) {}\n+    CCoin(const CTxOut& outIn, int nHeightIn, bool fCoinBaseIn) : fCoinBase(fCoinBaseIn), out(outIn), nHeight(nHeightIn) {}\n+\n+    void Clear() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689363",
      "id" : 114689363,
      "original_commit_id" : "0810a11afb30e778c56e6518beeb246c0f289318",
      "original_position" : 27,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36176846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689363",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689431"
         }
      },
      "body" : "It actually used to be called `coin` in an earlier version of the patch, but just s/coins/coin/ changes were such a substantial fraction of the commit that I backed out. Can be done later, I guess.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:56:42Z",
      "diff_hunk" : "@@ -312,28 +312,28 @@ class CCoins\n     }\n };\n \n-class SaltedTxidHasher\n+class SaltedOutpointHasher\n {\n private:\n     /** Salt */\n     const uint64_t k0, k1;\n \n public:\n-    SaltedTxidHasher();\n+    SaltedOutpointHasher();\n \n     /**\n      * This *must* return size_t. With Boost 1.46 on 32-bit systems the\n      * unordered_map will behave unpredictably if the custom hasher returns a\n      * uint64_t, resulting in failures when syncing the chain (#4634).\n      */\n-    size_t operator()(const uint256& txid) const {\n-        return SipHashUint256(k0, k1, txid);\n+    size_t operator()(const COutPoint& id) const {\n+        return SipHashUint256Extra(k0, k1, id.hash, id.n);\n     }\n };\n \n struct CCoinsCacheEntry\n {\n-    CCoins coins; // The actual cached data.\n+    CCoin coins; // The actual cached data.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689431",
      "id" : 114689431,
      "original_commit_id" : "25b95d6b17d8ce2f97e6f42877c82e134ee93be1",
      "original_position" : 30,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 36176904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689431",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689486"
         }
      },
      "body" : "I have a plan for doing this cleanly, but it requires some refactoring in serialize.h which I'd like to avoid in this PR.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:57:26Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689486",
      "id" : 114689486,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 84,
      "path" : "src/undo.h",
      "position" : 84,
      "pull_request_review_id" : 36176952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689486",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689543"
         }
      },
      "body" : "Depending on consensus.h and deriving the constant directly. Alternatively, we may not need this protection if we'd use the std::vector deserialization code (see TODO above).",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T01:58:21Z",
      "diff_hunk" : "@@ -12,56 +12,72 @@\n \n /** Undo information for a CTxIn\n  *\n- *  Contains the prevout's CTxOut being spent, and if this was the\n- *  last output of the affected transaction, its metadata as well\n- *  (coinbase or not, height, transaction version)\n+ *  Contains the prevout's CTxOut being spent, and its metadata as well\n+ *  (coinbase or not, height). Earlier versions also stored the transaction\n+ *  version.\n  */\n-class CTxInUndo\n+class CTxInUndoSerializer\n {\n-public:\n-    CTxOut txout;         // the txout data before being spent\n-    bool fCoinBase;       // if the outpoint was the last unspent: whether it belonged to a coinbase\n-    unsigned int nHeight; // if the outpoint was the last unspent: its height\n-\n-    CTxInUndo() : txout(), fCoinBase(false), nHeight(0) {}\n-    CTxInUndo(const CTxOut &txoutIn, bool fCoinBaseIn = false, unsigned int nHeightIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) { }\n+    CCoin* txout;\n \n+public:\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(nHeight*2+(fCoinBase ? 1 : 0)));\n-        if (nHeight > 0) {\n-            int nVersionDummy = 0;\n-            ::Serialize(s, VARINT(nVersionDummy));\n+        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1 : 0)));\n+        if (txout->nHeight > 0) {\n+            // Store a dummy for the transaction version.\n+            ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout)));\n+        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        nHeight = nCode / 2;\n-        fCoinBase = nCode & 1;\n-        if (nHeight > 0) {\n+        txout->nHeight = nCode / 2;\n+        txout->fCoinBase = nCode & 1;\n+        if (txout->nHeight > 0) {\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))));\n+        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n     }\n+\n+    CTxInUndoSerializer(const CCoin* coins) : txout(const_cast<CCoin*>(coins)) {}\n };\n \n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n-    std::vector<CTxInUndo> vprevout;\n+    std::vector<CCoin> vprevout;\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        // TODO: avoid reimplementing vector serializer\n+        uint64_t count = vprevout.size();\n+        ::Serialize(s, COMPACTSIZE(REF(count)));\n+        uint64_t n = 0;\n+        while (n < count) {\n+            ::Serialize(s, REF(CTxInUndoSerializer(&vprevout[n++])));\n+        }\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vprevout);\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        // TODO: avoid reimplementing vector deserializer\n+        uint64_t count;\n+        ::Unserialize(s, COMPACTSIZE(count));\n+        if (count > 111111) { // TODO: avoid hardcoding max txouts per tx",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114689543",
      "id" : 114689543,
      "original_commit_id" : "f9d26448f339751916e967fb99dc8e020472600d",
      "original_position" : 87,
      "path" : "src/undo.h",
      "position" : 87,
      "pull_request_review_id" : 36177016,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114689543",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114748619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114748619"
         }
      },
      "body" : "In commit \"Store/allow tx metadata in all undo records\"\r\n\r\n> Older code requires that there are 0s for everything but the last spend of an output, in the disconnect code. That's what the \"allow\" refers to in the commit title: it allows nonzero metadata in any undo record.\r\n\r\nCould you clarify in the commit message what \"won't be readable by older versions anymore\" means? Will older software just log errors and keep working, or require re-indexing, or will it not work at all?\r\n\r\nI understand that older code has a check for this condition here:\r\n https://github.com/bitcoin/bitcoin/blob/431a548faaf51c7a5fc89b6e479187a1c0e29805/src/validation.cpp#L1508. But I also thought this was one of the cases that DisconnectBlock would \"graciously deal with\" (according to earlier commit message).",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T11:13:00Z",
      "diff_hunk" : "@@ -1278,11 +1278,9 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             // mark an outpoint spent, and construct undo information\n             txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n             coins->Spend(nPos);\n-            if (coins->vout.size() == 0) {\n-                CTxInUndo& undo = txundo.vprevout.back();\n-                undo.nHeight = coins->nHeight;\n-                undo.fCoinBase = coins->fCoinBase;\n-            }\n+            CTxInUndo& undo = txundo.vprevout.back();\n+            undo.nHeight = coins->nHeight;\n+            undo.fCoinBase = coins->fCoinBase;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114748619",
      "id" : 114748619,
      "original_commit_id" : "389181ab57989e7276aa663d21d550ed4bd9da66",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36240198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T11:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114748619",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114877706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114877706"
         }
      },
      "body" : "> Will older software just log errors and keep working, or require re-indexing, or will it not work at all?\r\n\r\nOlder code will fail during the start-up consistency check (the rollback test will notice entries with undo data present where it isn't expected), and fail to start.\r\n\r\n> But I also thought this was one of the cases that DisconnectBlock would \"graciously deal with\"\r\n\r\nWell, it does deal with it correctly (it's DISCONNECT_UNCLEAN case, not a DISCONNECT_FAILED one), but the code calling DisconnectBlock requires a DISCONNECT_OK.\r\n\r\nIn #10148, DisconnectBlock is called to rewind blocks for replay at startup, and there DISCONNECT_UNCLEAN is acceptable.",
      "commit_id" : "aaf39b924be5f4eafc1392ba010f90ae2ad6003d",
      "created_at" : "2017-05-04T20:20:21Z",
      "diff_hunk" : "@@ -1278,11 +1278,9 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, CTxUndo &txund\n             // mark an outpoint spent, and construct undo information\n             txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n             coins->Spend(nPos);\n-            if (coins->vout.size() == 0) {\n-                CTxInUndo& undo = txundo.vprevout.back();\n-                undo.nHeight = coins->nHeight;\n-                undo.fCoinBase = coins->fCoinBase;\n-            }\n+            CTxInUndo& undo = txundo.vprevout.back();\n+            undo.nHeight = coins->nHeight;\n+            undo.fCoinBase = coins->fCoinBase;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#discussion_r114877706",
      "id" : 114877706,
      "original_commit_id" : "389181ab57989e7276aa663d21d550ed4bd9da66",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 36376422,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10195",
      "updated_at" : "2017-05-04T20:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114877706",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Here is a graph of the speed and memory usage of a `-reindex-chainstate` until the default assumevalid point, with infinity -dbcache, on a 2.2GHz dual-cpu 28-core 56-threads machine with 256GiB RAM. Note that the x axis is progress (so proportional to the number of transactions).\r\n\r\n![reindex](https://cloud.githubusercontent.com/assets/548488/25756823/0e61e73e-317d-11e7-9470-9f09db5ae131.png)\r\n",
      "created_at" : "2017-05-05T17:26:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-299525746",
      "id" : 299525746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-05-05T17:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299525746",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Same machine, but flushing at 1300 MiB:\r\n![reindex-1300](https://cloud.githubusercontent.com/assets/548488/25769030/c84fe65e-31c4-11e7-8819-264c44e50ddf.png)\r\n",
      "created_at" : "2017-05-06T01:58:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10195#issuecomment-299608732",
      "id" : 299608732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10195",
      "updated_at" : "2017-05-06T01:58:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299608732",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
