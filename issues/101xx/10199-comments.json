[
   {
      "body" : "Great!\r\nConcept ACK.\r\n\r\n> The GUI needs to be updated to access the new range of estimates. I would suggest providing options for targets of: 2,4,6,12,24,48,144,504,1008\r\n\r\nI'll have a look at this soon.",
      "created_at" : "2017-04-13T11:58:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#issuecomment-293871720",
      "id" : 293871720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10199",
      "updated_at" : "2017-04-13T11:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293871720",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "ping @crwatkins (he presented some fee estimation overview at the wallet standards group meeting in Berlin this month).",
      "created_at" : "2017-04-19T17:03:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#issuecomment-295346654",
      "id" : 295346654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10199",
      "updated_at" : "2017-04-19T17:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295346654",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10199#discussion_r112291804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112291804"
         }
      },
      "body" : "Nit: implementation",
      "commit_id" : "7306590db98a0d175083d89d572ac86d3c4ba4cb",
      "created_at" : "2017-04-19T19:22:04Z",
      "diff_hunk" : "@@ -853,15 +855,98 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n \n     int nBlocks = request.params[0].get_int();\n+    bool conservative = true;\n+    if (request.params.size() > 1 && !request.params[1].isNull()) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        conservative = request.params[1].get_bool();\n+    }\n \n     UniValue result(UniValue::VOBJ);\n     int answerFound;\n-    CFeeRate feeRate = mempool.estimateSmartFee(nBlocks, &answerFound);\n+    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(nBlocks, &answerFound, ::mempool, conservative);\n     result.push_back(Pair(\"feerate\", feeRate == CFeeRate(0) ? -1.0 : ValueFromAmount(feeRate.GetFeePerK())));\n     result.push_back(Pair(\"blocks\", answerFound));\n     return result;\n }\n \n+UniValue estimaterawfee(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1|| request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"estimaterawfee nblocks\\n\"\n+            \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n+            \"\\nWARNING: This is an advanced API call that is tightly coupled to the specific\\n\"\n+            \"         implementation of fee estimation. The parameters it can be called with\\n\"\n+            \"         and the results it returns will change if the internal implementaion changes.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#discussion_r112291804",
      "id" : 112291804,
      "original_commit_id" : "7306590db98a0d175083d89d572ac86d3c4ba4cb",
      "original_position" : 72,
      "path" : "src/rpc/mining.cpp",
      "position" : 72,
      "pull_request_review_id" : 33595467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10199",
      "updated_at" : "2017-04-19T19:22:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112291804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/288011?v=3",
         "events_url" : "https://api.github.com/users/jlopp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jlopp/followers",
         "following_url" : "https://api.github.com/users/jlopp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jlopp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jlopp",
         "id" : 288011,
         "login" : "jlopp",
         "organizations_url" : "https://api.github.com/users/jlopp/orgs",
         "received_events_url" : "https://api.github.com/users/jlopp/received_events",
         "repos_url" : "https://api.github.com/users/jlopp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jlopp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jlopp"
      }
   },
   {
      "body" : "I'm not sure if this is a problem specific to your code, though requiring a leading 0 seems like a bug:\r\n\r\n```\r\nbitcoin-cli estimaterawfee 10 .85 0\r\nerror: Error parsing JSON:.85\r\n```",
      "created_at" : "2017-04-19T19:23:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#issuecomment-295401425",
      "id" : 295401425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10199",
      "updated_at" : "2017-04-19T19:23:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295401425",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/288011?v=3",
         "events_url" : "https://api.github.com/users/jlopp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jlopp/followers",
         "following_url" : "https://api.github.com/users/jlopp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jlopp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jlopp",
         "id" : 288011,
         "login" : "jlopp",
         "organizations_url" : "https://api.github.com/users/jlopp/orgs",
         "received_events_url" : "https://api.github.com/users/jlopp/received_events",
         "repos_url" : "https://api.github.com/users/jlopp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jlopp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jlopp"
      }
   },
   {
      "body" : "@jlopp .85 is not valid JSON.",
      "created_at" : "2017-04-19T19:49:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#issuecomment-295411118",
      "id" : 295411118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10199",
      "updated_at" : "2017-04-19T19:49:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295411118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10199#discussion_r112303336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112303336"
         }
      },
      "body" : "Would prefer more explicit range bounding on the threshold with an \"Invalid threshold\" error response; it currently allows numbers < 0 and > 1 and just returns a -1 feerate.",
      "commit_id" : "7306590db98a0d175083d89d572ac86d3c4ba4cb",
      "created_at" : "2017-04-19T20:18:07Z",
      "diff_hunk" : "@@ -853,15 +855,98 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n \n     int nBlocks = request.params[0].get_int();\n+    bool conservative = true;\n+    if (request.params.size() > 1 && !request.params[1].isNull()) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        conservative = request.params[1].get_bool();\n+    }\n \n     UniValue result(UniValue::VOBJ);\n     int answerFound;\n-    CFeeRate feeRate = mempool.estimateSmartFee(nBlocks, &answerFound);\n+    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(nBlocks, &answerFound, ::mempool, conservative);\n     result.push_back(Pair(\"feerate\", feeRate == CFeeRate(0) ? -1.0 : ValueFromAmount(feeRate.GetFeePerK())));\n     result.push_back(Pair(\"blocks\", answerFound));\n     return result;\n }\n \n+UniValue estimaterawfee(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1|| request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"estimaterawfee nblocks\\n\"\n+            \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n+            \"\\nWARNING: This is an advanced API call that is tightly coupled to the specific\\n\"\n+            \"         implementation of fee estimation. The parameters it can be called with\\n\"\n+            \"         and the results it returns will change if the internal implementaion changes.\\n\"\n+            \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n+            \"confirmation within nblocks blocks if possible. Uses virtual transaction size as defined\\n\"\n+            \"in BIP 141 (witness data is discounted).\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. nblocks     (numeric)\\n\"\n+            \"2. threshold   (numeric, optional) The proportion of transactions in a given feerate range that must have been\\n\"\n+            \"               confirmed within nblocks in order to consider those feerates as high enough and proceed to check\\n\"\n+            \"               lower buckets.  Default: 0.95\\n\"\n+            \"3. horizon     (numeric, optional) How long a history of estimates to consider. 0=short, 1=medium, 2=long.\\n\"\n+            \"               Default: 1\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"feerate\\\" : x.x,        (numeric) estimate fee-per-kilobyte (in BTC)\\n\"\n+            \"  \\\"decay\\\" : x.x,          (numeric) exponential decay for historical moving average of confirmation data\\n\"\n+            \"  \\\"scale\\\" : x,            (numeric) The resolution of confirmation targets at this time horizon\\n\"\n+            \"  \\\"pass.\\\"                 information about the last range of feerates to succeed in meeting the threshold\\n\"\n+            \"  \\\"fail.\\\"                 information about the first range of feerates to fail to meet the threshold\\n\"\n+            \"  \\\"startrange\\\" : x.x,     (numeric) start of feerate range\\n\"\n+            \"  \\\"endrange\\\" : x.x,       (numeric) end of feerate range\\n\"\n+            \"  \\\"withintarget\\\" : x.x,   (numeric) number of txs over history horizon in the feerate range that were confirmed within target\\n\"\n+            \"  \\\"totalconfirmed\\\" : x.x, (numeric) number of txs over history horizon in the feerate range total\\n\"\n+            \"  \\\"inmempool\\\" : x.x,      (numeric) current number of txs in mempool in the feerate range unconfirmed for at least target blocks\\n\"\n+            \"  \\\"leftmempool\\\" : x.x,    (numeric) number of txs over history horizon in the feerate range that left mempool unconfirmed after target\\n\"\n+            \"}\\n\"\n+            \"\\n\"\n+            \"A negative value is returned if no answer can be given.\\n\"\n+            \"\\nExample:\\n\"\n+            + HelpExampleCli(\"estimaterawfee\", \"6 0.9 1\")\n+            );\n+\n+    RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM)(UniValue::VNUM)(UniValue::VNUM), true);\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int nBlocks = request.params[0].get_int();\n+    double threshold = 0.95;\n+    if (!request.params[1].isNull())\n+        threshold = request.params[1].get_real();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10199#discussion_r112303336",
      "id" : 112303336,
      "original_commit_id" : "7306590db98a0d175083d89d572ac86d3c4ba4cb",
      "original_position" : 108,
      "path" : "src/rpc/mining.cpp",
      "position" : 108,
      "pull_request_review_id" : 33608339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10199",
      "updated_at" : "2017-04-19T20:18:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112303336",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/288011?v=3",
         "events_url" : "https://api.github.com/users/jlopp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jlopp/followers",
         "following_url" : "https://api.github.com/users/jlopp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jlopp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jlopp",
         "id" : 288011,
         "login" : "jlopp",
         "organizations_url" : "https://api.github.com/users/jlopp/orgs",
         "received_events_url" : "https://api.github.com/users/jlopp/received_events",
         "repos_url" : "https://api.github.com/users/jlopp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jlopp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jlopp"
      }
   }
]
