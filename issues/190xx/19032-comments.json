[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428235753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428235753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 3fc67497b85b1f465beb5c3d52303a7828c8cacc:\r\n\r\nWhy change the documentation?\r\n\r\n```suggestion\r\n            /* flag as external address if we can't read the m_pre_split boolean\r\n```",
      "commit_id" : "613061a5dadf0627f0a4cadbee682657307e19b4",
      "created_at" : "2020-05-20T18:49:23Z",
      "diff_hunk" : "@@ -110,36 +110,37 @@ class CKeyPool\n     CKeyPool();\n     CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn);\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n-        READWRITE(nTime);\n-        READWRITE(vchPubKey);\n-        if (ser_action.ForRead()) {\n-            try {\n-                READWRITE(fInternal);\n-            }\n-            catch (std::ios_base::failure&) {\n-                /* flag as external address if we can't read the internal boolean\n-                   (this will be the case for any wallet before the HD chain split version) */\n-                fInternal = false;\n-            }\n-            try {\n-                READWRITE(m_pre_split);\n-            }\n-            catch (std::ios_base::failure&) {\n-                /* flag as postsplit address if we can't read the m_pre_split boolean\n-                   (this will be the case for any wallet that upgrades to HD chain split)*/\n-                m_pre_split = false;\n-            }\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n+        s << nTime << vchPubKey << fInternal << m_pre_split;\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        int nVersion;\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s >> nVersion;\n+        }\n+        s >> nTime >> vchPubKey;\n+        try {\n+            s >> fInternal;\n+        } catch (std::ios_base::failure&) {\n+            /* flag as external address if we can't read the internal boolean\n+               (this will be the case for any wallet before the HD chain split version) */\n+            fInternal = false;\n         }\n-        else {\n-            READWRITE(fInternal);\n-            READWRITE(m_pre_split);\n+        try {\n+            s >> m_pre_split;\n+        } catch (std::ios_base::failure&) {\n+            /* flag as external address if we can't read the internal boolean",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428235753",
      "id" : 428235753,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNTc1Mw==",
      "original_commit_id" : "3fc67497b85b1f465beb5c3d52303a7828c8cacc",
      "original_line" : 141,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : 60,
      "pull_request_review_id" : 415622687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T19:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428235753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428236072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428236072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n               (this will be the case for any wallet that upgrades to HD chain split)*/\r\n```\r\n\r\nSame",
      "commit_id" : "613061a5dadf0627f0a4cadbee682657307e19b4",
      "created_at" : "2020-05-20T18:49:56Z",
      "diff_hunk" : "@@ -110,36 +110,37 @@ class CKeyPool\n     CKeyPool();\n     CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn);\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n-        READWRITE(nTime);\n-        READWRITE(vchPubKey);\n-        if (ser_action.ForRead()) {\n-            try {\n-                READWRITE(fInternal);\n-            }\n-            catch (std::ios_base::failure&) {\n-                /* flag as external address if we can't read the internal boolean\n-                   (this will be the case for any wallet before the HD chain split version) */\n-                fInternal = false;\n-            }\n-            try {\n-                READWRITE(m_pre_split);\n-            }\n-            catch (std::ios_base::failure&) {\n-                /* flag as postsplit address if we can't read the m_pre_split boolean\n-                   (this will be the case for any wallet that upgrades to HD chain split)*/\n-                m_pre_split = false;\n-            }\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n+        s << nTime << vchPubKey << fInternal << m_pre_split;\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        int nVersion;\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s >> nVersion;\n+        }\n+        s >> nTime >> vchPubKey;\n+        try {\n+            s >> fInternal;\n+        } catch (std::ios_base::failure&) {\n+            /* flag as external address if we can't read the internal boolean\n+               (this will be the case for any wallet before the HD chain split version) */\n+            fInternal = false;\n         }\n-        else {\n-            READWRITE(fInternal);\n-            READWRITE(m_pre_split);\n+        try {\n+            s >> m_pre_split;\n+        } catch (std::ios_base::failure&) {\n+            /* flag as external address if we can't read the internal boolean\n+               (this will be the case for any wallet before the HD chain split version) */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428236072",
      "id" : 428236072,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNjA3Mg==",
      "original_commit_id" : "3fc67497b85b1f465beb5c3d52303a7828c8cacc",
      "original_line" : 142,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : 61,
      "pull_request_review_id" : 415622687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T19:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428236072",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428237089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428237089"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 3fc67497b85b1f465beb5c3d52303a7828c8cacc:\r\n\r\nLooks like the change in this file isn't needed? I don't mind either way, just noting.",
      "commit_id" : "613061a5dadf0627f0a4cadbee682657307e19b4",
      "created_at" : "2020-05-20T18:51:48Z",
      "diff_hunk" : "@@ -247,15 +247,13 @@ struct COutputEntry\n class CMerkleTx\n {\n public:\n-    template<typename Stream>\n-    void Unserialize(Stream& s)\n+    SERIALIZE_METHODS(CMerkleTx, obj)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19032#discussion_r428237089",
      "id" : 428237089,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNzA4OQ==",
      "original_commit_id" : "3fc67497b85b1f465beb5c3d52303a7828c8cacc",
      "original_line" : 250,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 6,
      "pull_request_review_id" : 415622687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19032",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T19:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428237089",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The fuzz tests are complaining:\r\n```\r\ntest/fuzz/string.cpp:111:15: error: no template named 'LimitedString'\r\n\r\n        const LimitedString<10> limited_string = LIMITED_STRING(random_string_1, 10);",
      "created_at" : "2020-05-20T19:15:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19032#issuecomment-631671836",
      "id" : 631671836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTY3MTgzNg==",
      "updated_at" : "2020-05-20T19:15:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631671836",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThe new serialization code is clearer and thus much easier to reason about.",
      "created_at" : "2020-05-21T07:14:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19032#issuecomment-631926143",
      "id" : 631926143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTkyNjE0Mw==",
      "updated_at" : "2020-05-21T07:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631926143",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
