[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK for the reasons you mention.\r\n\r\nReview should be easy, but this might conflict with some other work in net processing which is going on right now. Let's wait for DrahtBot to list the conflicts to get a better idea when a change like this is least disruptive.",
      "created_at" : "2020-05-22T16:27:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632783713",
      "id" : 632783713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjc4MzcxMw==",
      "updated_at" : "2020-05-22T16:27:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632783713",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK(boo pointers) and agree this should be fairly simple to review. ",
      "created_at" : "2020-05-22T16:46:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632795986",
      "id" : 632795986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjc5NTk4Ng==",
      "updated_at" : "2020-05-22T16:46:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632795986",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Very mild concept ACK. Pass-by-reference makes sense for `CNode` since we can't call `ProcessMessages()` with a null `CNode` and we never rebind the node reference when we're in net processing. Passing by reference should generally be the preferred way to pass in-out params (https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-inout)",
      "created_at" : "2020-05-22T18:07:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632834452",
      "id" : 632834452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjgzNDQ1Mg==",
      "updated_at" : "2020-05-22T18:07:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632834452",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK",
      "created_at" : "2020-05-22T21:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632922332",
      "id" : 632922332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjkyMjMzMg==",
      "updated_at" : "2020-05-22T21:51:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632922332",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19044 (net processing: Add support for getcfilters by jnewbery)\n* #19010 (net processing: Add support for getcfheaders by jnewbery)\n* #18968 (doc: noban precludes maxuploadtarget disconnects by MarcoFalke)\n* #18819 (net: Replace cs_feeFilter with simple std::atomic by MarcoFalke)\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #18638 (net: Use mockable time for ping/pong, add tests by MarcoFalke)\n* #18238 (net_processing: Retry notfounds with more urgency by ajtowns)\n* #17785 (p2p: Unify Send and Receive protocol versions by hebasto)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n* #15206 (Immediately disconnect on invalid net message checksum by jonasschnelli)\n* #14033 (p2p: Drop CADDR_TIME_VERSION checks now that MIN_PEER_PROTO_VERSION is greater by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-22T22:36:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632934146",
      "id" : 632934146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjkzNDE0Ng==",
      "updated_at" : "2020-05-22T22:36:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632934146",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hm. Let's wait until a bunch of those conflicts are in first.",
      "created_at" : "2020-05-22T22:40:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632934735",
      "id" : 632934735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjkzNDczNQ==",
      "updated_at" : "2020-05-22T22:40:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632934735",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theStack Thanks for doing this! If you want to investigate other cases where we are currently using raw pointer arguments without any reason doing so these commands might be helpful:\r\n\r\nTop list of types passed as raw pointer arguments:\r\n\r\n```\r\n$ git grep -E '^[a-zA-Z].* [a-zA-Z:]+\\([^()]*\\*[^()]*\\)' -- \"src/**.cpp\" \"src/**.h\" \r\n      \":(exclude)src/bench/\" \":(exclude)src/compat/\" \":(exclude)src/crc32c/\" \\\r\n      \":(exclude)src/leveldb/\" \":(exclude)src/qt/\" \":(exclude)src/secp256k1/\" \\\r\n      \":(exclude)src/test/\" \":(exclude)src/tinyformat.h\" \":(exclude)src/univalue/\" \\\r\n      \":(exclude)src/zmq/\" \":(exclude)src/wallet/\" | grep -vE \"char *\\*\" | \\\r\n      cut -f2 -d'(' | cut -f1 -d')' | tr \",\" \"\\n\" | grep \"\\*\" | sed 's/^ *const  *//g' | \\\r\n      sed 's/^ *//g' | sed 's/ \\*/* /g' | sed 's/\\*.*$/*/g' | grep -E '[a-zA-Z]' | \\\r\n      sort | uniq -c | sort -rn\r\n    118 CBlockIndex*\r\n     24 CNode*\r\n     11 ScriptError*\r\n     10 void*\r\n      9 FILE*\r\n      9 bool*\r\n      8 CConnman*\r\n      7 std::string*\r\n      6 RPCTimerInterface*\r\n      6 CNetAddr*\r\n      4 std::vector<int>*\r\n      4 SigningProvider*\r\n      4 LockPoints*\r\n      4 HTTPRequest*\r\n      4 FlatFilePos*\r\n      4 CValidationInterface*\r\n      4 CScriptWitness*\r\n      4 CBlockHeader*\r\n      3 uint32_t*\r\n      3 struct sockaddr*\r\nâ¦\r\n```\r\n\r\nA subset of functions with raw pointer arguments:\r\n\r\n```\r\n$ git grep -E '^[a-zA-Z].* [a-zA-Z:]+\\([^()]*\\*[^()]*\\)' -- \"src/**.cpp\" \"src/**.h\" \\\r\n      \":(exclude)src/bench/\" \":(exclude)src/compat/\" \":(exclude)src/crc32c/\" \\\r\n      \":(exclude)src/leveldb/\" \":(exclude)src/qt/\" \":(exclude)src/secp256k1/\" \\\r\n      \":(exclude)src/test/\" \":(exclude)src/tinyformat.h\" \":(exclude)src/univalue/\" \\\r\n      \":(exclude)src/zmq/\" \":(exclude)src/wallet/\" | grep -vE \"char *\\*\"\r\nsrc/addrman.cpp:CAddrInfo* CAddrMan::Find(const CNetAddr& addr, int* pnId)\r\nsrc/addrman.cpp:CAddrInfo* CAddrMan::Create(const CAddress& addr, const CNetAddr& addrSource, int* pnId)\r\nsrc/bitcoin-cli.cpp:static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, const std::vector<std::string>& args)\r\nsrc/blockfilter.cpp:bool GCSFilter::MatchInternal(const uint64_t* element_hashes, size_t size) const\r\nsrc/chain.cpp:void CChain::SetTip(CBlockIndex *pindex) {\r\nsrc/chain.cpp:CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\r\nsrc/chain.cpp:const CBlockIndex* LastCommonAncestor(const CBlockIndex* pa, const CBlockIndex* pb) {\r\nsrc/chain.h:const CBlockIndex* LastCommonAncestor(const CBlockIndex* pa, const CBlockIndex* pb);\r\nsrc/coins.cpp:bool CCoinsViewCache::SpendCoin(const COutPoint &outpoint, Coin* moveout) {\r\nsrc/consensus/merkle.cpp:uint256 ComputeMerkleRoot(std::vector<uint256> hashes, bool* mutated) {\r\nsrc/consensus/merkle.cpp:uint256 BlockMerkleRoot(const CBlock& block, bool* mutated)\r\nsrc/consensus/merkle.cpp:uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated)\r\nsrc/consensus/merkle.h:uint256 ComputeMerkleRoot(std::vector<uint256> hashes, bool* mutated = nullptr);\r\nsrc/consensus/merkle.h:uint256 BlockMerkleRoot(const CBlock& block, bool* mutated = nullptr);\r\nsrc/consensus/merkle.h:uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated = nullptr);\r\nsrc/consensus/tx_verify.cpp:std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\r\nsrc/consensus/tx_verify.cpp:bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\r\nsrc/consensus/tx_verify.h:std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block);\r\nsrc/consensus/tx_verify.h:bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block);\r\nsrc/crypto/ripemd160.cpp:void inline Initialize(uint32_t* s)\r\nâ¦\r\n```",
      "created_at" : "2020-05-23T06:51:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632997002",
      "id" : 632997002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19053",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjk5NzAwMg==",
      "updated_at" : "2020-05-23T06:51:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632997002",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
