[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19335 (wallet: Cleanup and separate BerkeleyDatabase and BerkeleyBatch by achow101)\n* #19334 (wallet: Introduce WalletDatabase abstract class by achow101)\n* #19325 (wallet: Refactor BerkeleyDatabase to introduce DatabaseBatch abstract class by achow101)\n* #19324 (wallet: Move BerkeleyBatch static functions to BerkeleyDatabase by achow101)\n* #19137 (wallettool: Add dump and createfromdump commands by achow101)\n* #19102 (wallet: Introduce and use DummyDatabase instead of dummy BerkeleyDatabase by achow101)\n* #18904 (Don't call lsn_reset in periodic flush by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-28T04:57:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-635100733",
      "id" : 635100733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTEwMDczMw==",
      "updated_at" : "2020-06-23T21:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635100733",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept â¶â¸â",
      "created_at" : "2020-05-28T10:47:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-635265128",
      "id" : 635265128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTI2NTEyOA==",
      "updated_at" : "2020-05-28T10:47:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635265128",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @fanquake . I've rebased on master.",
      "created_at" : "2020-06-04T15:14:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-638916606",
      "id" : 638916606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODkxNjYwNg==",
      "updated_at" : "2020-06-04T15:14:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638916606",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-17T10:01:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-645279166",
      "id" : 645279166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTI3OTE2Ng==",
      "updated_at" : "2020-06-17T10:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645279166",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2020-06-23T18:41:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-648344890",
      "id" : 648344890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0ODM0NDg5MA==",
      "updated_at" : "2020-06-23T18:41:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648344890",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, while retouching this code, `++i` is preferred over `i++`\r\n```suggestion\r\n    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); ++it) {\r\n```",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T02:50:34Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086302",
      "id" : 448086302,
      "line" : 640,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NjMwMg==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 640,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 36,
      "pull_request_review_id" : 440512302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T03:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086302",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sanity check: Does this erase the same element as the previous version? `env->mapFileUseCount.erase(mi++);`",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T02:52:19Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained\n+    env->CloseDb(strFile);\n+    env->CheckpointLSN(strFile);\n+    env->mapFileUseCount.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086697",
      "id" : 448086697,
      "line" : 654,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NjY5Nw==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 654,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 59,
      "pull_request_review_id" : 440512302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T03:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086697",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448087227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448087227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: self-contained",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T02:54:50Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448087227",
      "id" : 448087227,
      "line" : 651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NzIyNw==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 651,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 56,
      "pull_request_review_id" : 440512302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T03:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448087227",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note to reviewers: I suggest looking at the diff with space changes ignored (`git show -w`).",
      "created_at" : "2020-07-01T03:04:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-652159459",
      "id" : 652159459,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjE1OTQ1OQ==",
      "updated_at" : "2020-07-01T03:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652159459",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448371355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448371355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. The post-incrementer returns (a copy of) the value before incrementing https://en.cppreference.com/w/cpp/language/operator_incdec",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T13:41:34Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained\n+    env->CloseDb(strFile);\n+    env->CheckpointLSN(strFile);\n+    env->mapFileUseCount.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448371355",
      "id" : 448371355,
      "in_reply_to_id" : 448086697,
      "line" : 654,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MTM1NQ==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 654,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 59,
      "pull_request_review_id" : 440879913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T13:41:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448371355",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372257"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It makes no difference to the compiled code since we're not using the return value of the incrementer. I'll change to `++it` if I have to retouch this branch, but otherwise it's not worth invalidating ACKs.",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T13:43:01Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372257",
      "id" : 448372257,
      "in_reply_to_id" : 448086302,
      "line" : 640,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MjI1Nw==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 640,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 36,
      "pull_request_review_id" : 440881201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T13:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372257",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372383"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will change if I need to retouch",
      "commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "created_at" : "2020-07-01T13:43:13Z",
      "diff_hunk" : "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372383",
      "id" : 448372383,
      "in_reply_to_id" : 448087227,
      "line" : 651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MjM4Mw==",
      "original_commit_id" : "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
      "original_line" : 651,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/wallet/bdb.cpp",
      "position" : 56,
      "pull_request_review_id" : 440881358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T13:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372383",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
