[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nIt would be good to motivate the change. Maybe something like this?\r\n\r\nThe scriptnum test (https://github.com/bitcoin/bitcoin/pull/14816) is a roundtrip test of the test framwork. Thus, it would be better suited as a unit test. This is now possible with the introduction of the unit test module for the functional tests. See https://github.com/bitcoin/bitcoin/pull/18576",
      "created_at" : "2020-05-27T17:18:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19082#issuecomment-634814645",
      "id" : 634814645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDgxNDY0NQ==",
      "updated_at" : "2020-05-27T17:18:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634814645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19082#discussion_r431312915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431312915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think for a unit test it could make sense to simply hard-code the value of `coinbase_tx.vin[0].scriptSig` instead of computing it every single time by mining 200 blocks.",
      "commit_id" : "fba67c6672242cb39d06b6aa5ffdc83cde6fd4b0",
      "created_at" : "2020-05-27T17:21:06Z",
      "diff_hunk" : "@@ -731,3 +731,37 @@ def test_bn2vch(self):\n         self.assertEqual(bn2vch(0xFFFFFFFF), bytes([0xFF, 0xFF, 0xFF, 0xFF, 0x00]))\n         self.assertEqual(bn2vch(123456789), bytes([0x15, 0xCD, 0x5B, 0x07]))\n         self.assertEqual(bn2vch(-54321), bytes([0x31, 0xD4, 0x80]))\n+\n+    def test_mining(self):\n+        self.mine_chain()\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        self.assert_equal(mining_info['blocks'], 200)\n+        self.assert_equal(mining_info['chain'], self.chain)\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        self.assert_equal(mining_info['difficulty'], Decimal('4.656542373906925E-10'))\n+        self.assert_equal(mining_info['networkhashps'], Decimal('0.003333333333333334'))\n+        self.assert_equal(mining_info['pooledtx'], 0)\n+\n+        # Mine a block to leave initial block download\n+        node.generatetoaddress(1, node.get_deterministic_priv_key().address)\n+        tmpl = node.getblocktemplate({'rules': ['segwit']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        next_height = int(tmpl[\"height\"])\n+        coinbase_tx = create_coinbase(height=next_height)\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        # round-trip the encoded bip34 block height commitment\n+        self.assert_equal(CScriptNum.decode(coinbase_tx.vin[0].scriptSig), next_height)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19082#discussion_r431312915",
      "id" : 431312915,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMxMjkxNQ==",
      "original_commit_id" : "4b38a1cd1bc88e23e1e74cacfdb441e315fad3f5",
      "original_line" : 763,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/script.py",
      "position" : null,
      "pull_request_review_id" : 419446839,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19082",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-27T18:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431312915",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19082#discussion_r431331283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431331283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this one was actually testing the miner, so should be kept in this file.",
      "commit_id" : "fba67c6672242cb39d06b6aa5ffdc83cde6fd4b0",
      "created_at" : "2020-05-27T17:50:32Z",
      "diff_hunk" : "@@ -83,20 +81,8 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n         self.log.info(\"getblocktemplate: Test capability advertised\")\n         assert 'proposal' in tmpl['capabilities']\n         assert 'coinbasetxn' not in tmpl\n-\n-        next_height = int(tmpl[\"height\"])\n-        coinbase_tx = create_coinbase(height=next_height)\n-        # sequence numbers must not be max for nLockTime to have effect\n-        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n-        coinbase_tx.rehash()\n-\n-        # round-trip the encoded bip34 block height commitment\n-        assert_equal(CScriptNum.decode(coinbase_tx.vin[0].scriptSig), next_height)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19082#discussion_r431331283",
      "id" : 431331283,
      "line" : 94,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMzMTI4Mw==",
      "original_commit_id" : "0107629e29641da7b21d14906743c19716f933e4",
      "original_line" : 94,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/mining_basic.py",
      "position" : 22,
      "pull_request_review_id" : 419471139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19082",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-27T18:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431331283",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
