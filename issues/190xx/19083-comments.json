[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18788 (wallet: tests: Update more tests to work with descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-28T05:00:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-635101579",
      "id" : 635101579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19083",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTEwMTU3OQ==",
      "updated_at" : "2020-05-28T05:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635101579",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432978430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432978430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you can remove the `services` and `send_version` arguments, and just set them directly below (this function is only ever called once, and you know what `services` and `send_version` should be set to.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-05-31T19:52:25Z",
      "diff_hunk" : "@@ -51,6 +56,21 @@ def on_merkleblock(self, message):\n     def on_tx(self, message):\n         self.tx_received = True\n \n+class FilterNodeFRelay(FilterNode):\n+    def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=True, **kwargs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432978430",
      "id" : 432978430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3ODQzMA==",
      "original_commit_id" : "e692c3cdd1e56ef6780bc43058f9321085f5a9de",
      "original_line" : 60,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 421522894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432978430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432986314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432986314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there any reason to overwrite this at all? The whole overwrite with the `on_connection_send_msg` magic is a bit of a mental load. I believe this can simply be a `FilterNode`, where you set `send_version=False` and then `send_message(version_without_nRelay)` and then `wait_for_verack()`.\r\n\r\nOverall it should be less complex and less lines of code",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-05-31T21:32:54Z",
      "diff_hunk" : "@@ -51,6 +56,21 @@ def on_merkleblock(self, message):\n     def on_tx(self, message):\n         self.tx_received = True\n \n+class FilterNodeFRelay(FilterNode):\n+    def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=True, **kwargs):\n+        create_conn = P2PConnection.peer_connect(self, *args, **kwargs)\n+\n+        if send_version:\n+            # Send a version msg\n+            vt = msg_version()\n+            vt.nServices = services\n+            vt.addrTo.ip = self.dstaddr\n+            vt.addrTo.port = self.dstport\n+            vt.addrFrom.ip = \"0.0.0.0\"\n+            vt.addrFrom.port = 0\n+            vt.nRelay = 0 # default = 1\n+            self.on_connection_send_msg = vt  # Will be sent soon after connection_made\n+        return create_conn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432986314",
      "id" : 432986314,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NjMxNA==",
      "original_commit_id" : "e692c3cdd1e56ef6780bc43058f9321085f5a9de",
      "original_line" : 73,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 421529378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432986314",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434130754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434130754"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oops - had a big hole in my knowledge. You're right that was way too complicated ð¤¦ââï¸ . How does this look:\r\n```py\r\nclass FilterNode(P2PInterface):\r\n    def __init__(self, fRelay=True):\r\n        super().__init__()\r\n        if fRelay == False:\r\n            version_without_nRelay = msg_version()\r\n            version_without_nRelay.nRelay = 0\r\n            self.on_connection_send_msg = version_without_nRelay\r\n```\r\nI'm still not 100% clear on how connection works under the hood, but setting `self.on_connection_send_msg` feels correct since it's handled in the `connection_made` callback - otherwise I need to somehow wait for connection to be established before using `send_message` directly.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-02T19:37:32Z",
      "diff_hunk" : "@@ -51,6 +56,21 @@ def on_merkleblock(self, message):\n     def on_tx(self, message):\n         self.tx_received = True\n \n+class FilterNodeFRelay(FilterNode):\n+    def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=True, **kwargs):\n+        create_conn = P2PConnection.peer_connect(self, *args, **kwargs)\n+\n+        if send_version:\n+            # Send a version msg\n+            vt = msg_version()\n+            vt.nServices = services\n+            vt.addrTo.ip = self.dstaddr\n+            vt.addrTo.port = self.dstport\n+            vt.addrFrom.ip = \"0.0.0.0\"\n+            vt.addrFrom.port = 0\n+            vt.nRelay = 0 # default = 1\n+            self.on_connection_send_msg = vt  # Will be sent soon after connection_made\n+        return create_conn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434130754",
      "id" : 434130754,
      "in_reply_to_id" : 432986314,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDc1NA==",
      "original_commit_id" : "e692c3cdd1e56ef6780bc43058f9321085f5a9de",
      "original_line" : 73,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 422999172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434130754",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434160361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434160361"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When I added `on_connection_send_msg` it was meant to be a \"private\" member. Obviously in python there is no \"private\", so discount my point by that.\r\n\r\nI think either is fine. Your solution with the `on_connection_send_msg` or something along the lines of:\r\n\r\n```\r\np2p = create_connection(bla)\r\np2p.wait_until(p2p.is_connected)\r\np2p.send_message(ver)\r\np2p.wait_for_verack()",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-02T20:36:15Z",
      "diff_hunk" : "@@ -51,6 +56,21 @@ def on_merkleblock(self, message):\n     def on_tx(self, message):\n         self.tx_received = True\n \n+class FilterNodeFRelay(FilterNode):\n+    def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=True, **kwargs):\n+        create_conn = P2PConnection.peer_connect(self, *args, **kwargs)\n+\n+        if send_version:\n+            # Send a version msg\n+            vt = msg_version()\n+            vt.nServices = services\n+            vt.addrTo.ip = self.dstaddr\n+            vt.addrTo.port = self.dstport\n+            vt.addrFrom.ip = \"0.0.0.0\"\n+            vt.addrFrom.port = 0\n+            vt.nRelay = 0 # default = 1\n+            self.on_connection_send_msg = vt  # Will be sent soon after connection_made\n+        return create_conn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434160361",
      "id" : 434160361,
      "in_reply_to_id" : 432986314,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2MDM2MQ==",
      "original_commit_id" : "e692c3cdd1e56ef6780bc43058f9321085f5a9de",
      "original_line" : 73,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 423038066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434160361",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435227279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435227279"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit (feel free to ignore): I think pep-8 says two new lines before `class`",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-04T12:50:21Z",
      "diff_hunk" : "@@ -51,7 +61,6 @@ def on_merkleblock(self, message):\n     def on_tx(self, message):\n         self.tx_received = True\n \n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435227279",
      "id" : 435227279,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIyNzI3OQ==",
      "original_commit_id" : "951442335bdfb18f3f4dc4cf3ee2e5d5add8a775",
      "original_line" : 54,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 62,
      "pull_request_review_id" : 424406698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435227279",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435230233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435230233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How does this work? Isn't `peer_connect` called *after* init, in which case `on_connection_send_msg` would be overwritten?",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-04T12:55:08Z",
      "diff_hunk" : "@@ -34,6 +37,13 @@ class FilterNode(P2PInterface):\n         nFlags=1,\n     )\n \n+    def __init__(self, fRelay=True):\n+        super().__init__()\n+        if fRelay == False:\n+            version_without_nRelay = msg_version()\n+            version_without_nRelay.nRelay = 0\n+            self.on_connection_send_msg = version_without_nRelay",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435230233",
      "id" : 435230233,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIzMDIzMw==",
      "original_commit_id" : "951442335bdfb18f3f4dc4cf3ee2e5d5add8a775",
      "original_line" : 45,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424406698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435230233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435356224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435356224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Aw shoot, just fixed using `send_version=False` and then manually sending it after connection is established. Asserting `relaytxes=False` so it should be set correctly now.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-04T15:38:22Z",
      "diff_hunk" : "@@ -34,6 +37,13 @@ class FilterNode(P2PInterface):\n         nFlags=1,\n     )\n \n+    def __init__(self, fRelay=True):\n+        super().__init__()\n+        if fRelay == False:\n+            version_without_nRelay = msg_version()\n+            version_without_nRelay.nRelay = 0\n+            self.on_connection_send_msg = version_without_nRelay",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435356224",
      "id" : 435356224,
      "in_reply_to_id" : 435230233,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjIyNA==",
      "original_commit_id" : "951442335bdfb18f3f4dc4cf3ee2e5d5add8a775",
      "original_line" : 45,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424580848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435356224",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435365394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435365394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any time we access members of a `P2PInterface` or derived class, we should be taking the `mininode_lock`, otherwise there's the possibility of a data race between the main test logic thread and the network event loop. I think the easiest would be to define some getters on the `FilterNode` class that take the lock and then return the attribute value.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-04T15:50:47Z",
      "diff_hunk" : "@@ -125,8 +153,11 @@ def run_test(self):\n \n         self.log.info('Check that we receive a tx in reply to a mempool msg if the filter matches a mempool tx')\n         filter_node.merkleblock_received = False\n+        filter_node.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435365394",
      "id" : 435365394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2NTM5NA==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 156,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424592023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435365394",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435370818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435370818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fact, I think this whole part of the test is not actually testing the mempool message (which is obvious, since it was passing even before you added the line to send the mempool message). Since you're now testing the mempool message correctly in `test_msg_mempool()`, I think you can just erase this block.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-04T15:58:20Z",
      "diff_hunk" : "@@ -125,8 +153,11 @@ def run_test(self):\n \n         self.log.info('Check that we receive a tx in reply to a mempool msg if the filter matches a mempool tx')\n         filter_node.merkleblock_received = False\n+        filter_node.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435370818",
      "id" : 435370818,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MDgxOA==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 156,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424592023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435370818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435633618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435633618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: one style point that I've tried to move the tests away from is referring to connections as \"nodes\". A node is a bitcoind instance that we're testing. A p2p connection is a test structure used to interact with the node. Using the word _node_ for both the node and connections to it is confusing.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T00:52:35Z",
      "diff_hunk" : "@@ -153,6 +184,33 @@ def run_test(self):\n         filter_node.send_and_ping(msg_filterload(data=b'', nHashFuncs=1))\n         filter_node.send_and_ping(msg_filteradd(data=b'letstrytocrashthisnode'))\n \n+    def run_test(self):\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435633618",
      "id" : 435633618,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMzYxOA==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 188,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424592023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435633618",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435634793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435634793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This log seems in the wrong place. The connection has already been created earlier.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T00:57:38Z",
      "diff_hunk" : "@@ -93,11 +96,36 @@ def test_size_limits(self, filter_node):\n \n         filter_node.send_and_ping(msg_filterclear())\n \n-    def run_test(self):\n-        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+    def test_msg_mempool(self):\n+        self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n+        self.nodes[0].disconnect_p2ps()\n+        filter_node = FilterNode()\n+        filter_node.tx_received = False\n \n-        self.test_size_limits(filter_node)\n+        self.log.info(\"Create a tx relevant to the node before connecting\")\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+        txid = self.nodes[0].sendtoaddress(filter_address, 90)\n+\n+        self.log.info(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.nodes[0].add_p2p_connection(filter_node)\n+        filter_node.send_and_ping(filter_node.watch_filter_init)\n+        self.nodes[0].p2p.send_message(msg_mempool())\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.tx_received\n+\n+    def test_frelay_false(self, filter_node):\n+        self.log.info(\"Check that a node with fRelay set to false does not receive invs until the filter is set\")\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+        filter_node.tx_received = False\n+        self.nodes[0].sendtoaddress(filter_address, 90)\n+        # Sync to make sure the reason filter_node doesn't receive the tx isn't due to p2p delays\n+        filter_node.sync_with_ping()\n+        assert not filter_node.tx_received\n+\n+        # Clear the mempool so that this transaction does not impact subsequent tests\n+        self.nodes[0].generate(1)\n \n+    def test_filter(self, filter_node):\n         self.log.info('Add filtered P2P connection to the node')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435634793",
      "id" : 435634793,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzNDc5Mw==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 129,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424592023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435634793",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435638997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435638997"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "True, I had considered just changing the log message (since it didn't seem entirely correct) but I wasn't really sure what it should be. It looks like @MarcoFalke wrote this test, I'm wondering what he would have in mind?",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T01:14:58Z",
      "diff_hunk" : "@@ -125,8 +153,11 @@ def run_test(self):\n \n         self.log.info('Check that we receive a tx in reply to a mempool msg if the filter matches a mempool tx')\n         filter_node.merkleblock_received = False\n+        filter_node.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435638997",
      "id" : 435638997,
      "in_reply_to_id" : 435370818,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzODk5Nw==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 156,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424935780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435638997",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435639882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435639882"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point. I'm thinking a getter and a setter: `get_tx_received`, `reset_tx_received` (to False), and for `merkleblock_received` as well? Shall I change the rest of the test too since it uses these throughout?",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T01:18:51Z",
      "diff_hunk" : "@@ -125,8 +153,11 @@ def run_test(self):\n \n         self.log.info('Check that we receive a tx in reply to a mempool msg if the filter matches a mempool tx')\n         filter_node.merkleblock_received = False\n+        filter_node.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435639882",
      "id" : 435639882,
      "in_reply_to_id" : 435365394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzOTg4Mg==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 156,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 424936866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435639882",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435991790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435991790"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Shall I change the rest of the test too since it uses these throughout?\r\n\r\nIf you want to, that'd be great! There are lots of data races in this test where the test logic thread and the p2p handler thread can be accessing the same memory.\r\n\r\nTake a look at Python properties: https://docs.python.org/3/library/functions.html#property. By implementing a getter/setter using properties, you don't need to change the client code from `assert not filter_node.tx_received` to `assert not filter_node.get_tx_received()`.\r\n\r\nBe careful not to use the setter for the `on_xxxx()`, methods, which already have the lock when called. It's better to make the locks non-reentrant if possible (see https://github.com/bitcoin/bitcoin/pull/19178)",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T15:19:44Z",
      "diff_hunk" : "@@ -125,8 +153,11 @@ def run_test(self):\n \n         self.log.info('Check that we receive a tx in reply to a mempool msg if the filter matches a mempool tx')\n         filter_node.merkleblock_received = False\n+        filter_node.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435991790",
      "id" : 435991790,
      "in_reply_to_id" : 435365394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MTc5MA==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 156,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 425395549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435991790",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436194736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436194736"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Noted! Renaming all of them increases the number of lines in the diff by a lot, so I put renames for existing code in a separate commit.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T22:38:38Z",
      "diff_hunk" : "@@ -153,6 +184,33 @@ def run_test(self):\n         filter_node.send_and_ping(msg_filterload(data=b'', nHashFuncs=1))\n         filter_node.send_and_ping(msg_filteradd(data=b'letstrytocrashthisnode'))\n \n+    def run_test(self):\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436194736",
      "id" : 436194736,
      "in_reply_to_id" : 435633618,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5NDczNg==",
      "original_commit_id" : "72672bc5a3435c22890dcec245097a2e3c5a52ba",
      "original_line" : 188,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 425665965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T22:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436194736",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436200326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436200326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Weird that there are two `sync_with_ping`s here. @MarcoFalke would it be correct for me to remove one (since I'm touching the lines anyway)? From what I understand, one `sync_with_ping` is enough to ensure that the messages were sent and processed, and we'll be grabbing `mininode_lock` when we check the `*_received` values.",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-05T23:03:03Z",
      "diff_hunk" : "@@ -64,95 +92,140 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n-    def test_size_limits(self, filter_node):\n+    def test_size_limits(self, filter_peer):\n         self.log.info('Check that too large filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n \n         self.log.info('Check that max size filter is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE)))\n-        filter_node.send_and_ping(msg_filterclear())\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE)))\n+        filter_peer.send_and_ping(msg_filterclear())\n \n         self.log.info('Check that filter with too many hash functions is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n \n         self.log.info('Check that filter with max hash functions is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS))\n         # Don't send filterclear until next two filteradd checks are done\n \n         self.log.info('Check that max size data element to add to the filter is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE)))\n+            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE)))\n \n         self.log.info('Check that too large data element to add to the filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n+            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n \n-        filter_node.send_and_ping(msg_filterclear())\n+        filter_peer.send_and_ping(msg_filterclear())\n \n-    def run_test(self):\n-        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+    def test_msg_mempool(self):\n+        self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n+        self.nodes[0].disconnect_p2ps()\n+        filter_peer = P2PBloomFilter()\n+        filter_peer.tx_received = False\n \n-        self.test_size_limits(filter_node)\n+        self.log.info(\"Send a tx to the node before connecting\")\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        txid = self.nodes[0].sendtoaddress(filter_address, 90)\n \n-        self.log.info('Add filtered P2P connection to the node')\n-        filter_node.send_and_ping(filter_node.watch_filter_init)\n-        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+        self.log.info(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.nodes[0].add_p2p_connection(filter_peer)\n+        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n+        self.nodes[0].p2p.send_message(msg_mempool())\n+        filter_peer.wait_for_tx(txid)\n+        assert filter_peer.tx_received\n+\n+    def test_frelay_false(self, filter_peer):\n+        self.log.info(\"Check that a node with fRelay set to false does not receive invs until the filter is set\")\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        filter_peer.tx_received = False\n+        self.nodes[0].sendtoaddress(filter_address, 90)\n+        # Sync to make sure the reason filter_peer doesn't receive the tx is not p2p delays\n+        filter_peer.sync_with_ping()\n+        assert not filter_peer.tx_received\n+\n+        # Clear the mempool so that this transaction does not impact subsequent tests\n+        self.nodes[0].generate(1)\n+\n+    def test_filter(self, filter_peer):\n+        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n \n         self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n         block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n         txid = self.nodes[0].getblock(block_hash)['tx'][0]\n-        filter_node.wait_for_merkleblock(block_hash)\n-        filter_node.wait_for_tx(txid)\n+        filter_peer.wait_for_merkleblock(block_hash)\n+        filter_peer.wait_for_tx(txid)\n \n         self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n-        filter_node.tx_received = False\n+        filter_peer.tx_received = False\n         block_hash = self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())[0]\n-        filter_node.wait_for_merkleblock(block_hash)\n-        assert not filter_node.tx_received\n+        filter_peer.wait_for_merkleblock(block_hash)\n+        assert not filter_peer.tx_received\n \n         self.log.info('Check that we not receive a tx if the filter does not match a mempool tx')\n-        filter_node.merkleblock_received = False\n-        filter_node.tx_received = False\n+        filter_peer.merkleblock_received = False\n+        filter_peer.tx_received = False\n         self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 90)\n-        filter_node.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436200326",
      "id" : 436200326,
      "line" : 121,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMDMyNg==",
      "original_commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "original_line" : 121,
      "original_position" : 168,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 168,
      "pull_request_review_id" : 425672605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T23:03:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436200326",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436211479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436211479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There are no messages sent at all, so using `sync_with_ping` is odd, but I didn't know what else to use.\r\n\r\n* The first sync_with_ping is needed for any imaginary invs on the wire (from `SendMessages`) to be flushed to the filter peer\r\n* The seconds one is needed for our imaginary getdata (in reply to the imaginary inv) to be flushed to the node (and to be processed)",
      "commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "created_at" : "2020-06-06T00:02:59Z",
      "diff_hunk" : "@@ -64,95 +92,140 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n-    def test_size_limits(self, filter_node):\n+    def test_size_limits(self, filter_peer):\n         self.log.info('Check that too large filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n \n         self.log.info('Check that max size filter is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE)))\n-        filter_node.send_and_ping(msg_filterclear())\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE)))\n+        filter_peer.send_and_ping(msg_filterclear())\n \n         self.log.info('Check that filter with too many hash functions is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n \n         self.log.info('Check that filter with max hash functions is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS))\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS))\n         # Don't send filterclear until next two filteradd checks are done\n \n         self.log.info('Check that max size data element to add to the filter is accepted')\n         with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_node.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE)))\n+            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE)))\n \n         self.log.info('Check that too large data element to add to the filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_node.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n+            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n \n-        filter_node.send_and_ping(msg_filterclear())\n+        filter_peer.send_and_ping(msg_filterclear())\n \n-    def run_test(self):\n-        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+    def test_msg_mempool(self):\n+        self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n+        self.nodes[0].disconnect_p2ps()\n+        filter_peer = P2PBloomFilter()\n+        filter_peer.tx_received = False\n \n-        self.test_size_limits(filter_node)\n+        self.log.info(\"Send a tx to the node before connecting\")\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        txid = self.nodes[0].sendtoaddress(filter_address, 90)\n \n-        self.log.info('Add filtered P2P connection to the node')\n-        filter_node.send_and_ping(filter_node.watch_filter_init)\n-        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+        self.log.info(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.nodes[0].add_p2p_connection(filter_peer)\n+        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n+        self.nodes[0].p2p.send_message(msg_mempool())\n+        filter_peer.wait_for_tx(txid)\n+        assert filter_peer.tx_received\n+\n+    def test_frelay_false(self, filter_peer):\n+        self.log.info(\"Check that a node with fRelay set to false does not receive invs until the filter is set\")\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        filter_peer.tx_received = False\n+        self.nodes[0].sendtoaddress(filter_address, 90)\n+        # Sync to make sure the reason filter_peer doesn't receive the tx is not p2p delays\n+        filter_peer.sync_with_ping()\n+        assert not filter_peer.tx_received\n+\n+        # Clear the mempool so that this transaction does not impact subsequent tests\n+        self.nodes[0].generate(1)\n+\n+    def test_filter(self, filter_peer):\n+        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n \n         self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n         block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n         txid = self.nodes[0].getblock(block_hash)['tx'][0]\n-        filter_node.wait_for_merkleblock(block_hash)\n-        filter_node.wait_for_tx(txid)\n+        filter_peer.wait_for_merkleblock(block_hash)\n+        filter_peer.wait_for_tx(txid)\n \n         self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n-        filter_node.tx_received = False\n+        filter_peer.tx_received = False\n         block_hash = self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())[0]\n-        filter_node.wait_for_merkleblock(block_hash)\n-        assert not filter_node.tx_received\n+        filter_peer.wait_for_merkleblock(block_hash)\n+        assert not filter_peer.tx_received\n \n         self.log.info('Check that we not receive a tx if the filter does not match a mempool tx')\n-        filter_node.merkleblock_received = False\n-        filter_node.tx_received = False\n+        filter_peer.merkleblock_received = False\n+        filter_peer.tx_received = False\n         self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 90)\n-        filter_node.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436211479",
      "id" : 436211479,
      "in_reply_to_id" : 436200326,
      "line" : 121,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxMTQ3OQ==",
      "original_commit_id" : "f78730d582c605882e5a3bf554aefb1a92942b0e",
      "original_line" : 121,
      "original_position" : 168,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 168,
      "pull_request_review_id" : 425685087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19083",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-06T00:03:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436211479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
