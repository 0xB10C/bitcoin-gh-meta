[
   {
      "author_association" : "MEMBER",
      "body" : "This is the 3rd PR taken from #18876. Please see that PR for details of the full changes to support BIP 157.",
      "created_at" : "2020-05-18T18:59:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-630376790",
      "id" : 630376790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDM3Njc5MA==",
      "updated_at" : "2020-05-18T18:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630376790",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-18T23:57:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-630495208",
      "id" : 630495208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDQ5NTIwOA==",
      "updated_at" : "2020-05-20T19:17:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630495208",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r426954791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426954791"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                                CConnman& connman)\r\n```\r\n\r\nAny reason why this is a pointer, but missing the nullptr check?\r\n\r\n* Either this should be a proper pointer with nullptr check, or\r\n* it should be a reference\r\n\r\nMixing the two combines the worst of each option.\r\n\r\n(Same for pfrom)",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-18T23:58:18Z",
      "diff_hunk" : "@@ -2022,6 +2041,61 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n     return true;\n }\n \n+/**\n+ * Handle a cfheaders request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFHeaders(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r426954791",
      "id" : 426954791,
      "line" : 2059,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1NDc5MQ==",
      "original_commit_id" : "4b139e1832dc9842242c87a74cbfaa51df3fab23",
      "original_line" : 2059,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 65,
      "pull_request_review_id" : 414013131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426954791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428737628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428737628"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given these checks aren't necessary for ProcessGetCFCheckPt, would they be more suitable in separate function? Then the caller wouldn't have to know which values to pass to make the checks succeed.\r\n\r\nDownside is you might fetch the `BlockFilterIndex` even though these checks may later fail.",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T15:43:05Z",
      "diff_hunk" : "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428737628",
      "id" : 428737628,
      "line" : 2038,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzYyOA==",
      "original_commit_id" : "4b139e1832dc9842242c87a74cbfaa51df3fab23",
      "original_line" : 2038,
      "original_position" : 46,
      "original_start_line" : 2020,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 416266764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : 2024,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428737628",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428759826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it worth checking how many hashes are returned? Or would you consider it checked indirectly by `compute_last_header`?",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T16:15:10Z",
      "diff_hunk" : "@@ -100,12 +104,43 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826",
      "id" : 428759826,
      "line" : 119,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1OTgyNg==",
      "original_commit_id" : "befc63d5b0937ca24fd48ed2580349740b87b0ec",
      "original_line" : 119,
      "original_position" : 33,
      "original_start_line" : 115,
      "path" : "test/functional/p2p_blockfilters.py",
      "position" : 34,
      "pull_request_review_id" : 416266764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : 116,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428759826",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2020-05-21T16:51:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632220053",
      "id" : 632220053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjIyMDA1Mw==",
      "updated_at" : "2020-05-21T16:51:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632220053",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428835615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428835615"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This usage is the same as all the other `Process*()` functions in net_processing. Rather than introduce a new style for just this function, I think it makes sense to change it everywhere in net_processing in a refactor PR.",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T18:29:55Z",
      "diff_hunk" : "@@ -2022,6 +2041,61 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n     return true;\n }\n \n+/**\n+ * Handle a cfheaders request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFHeaders(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428835615",
      "id" : 428835615,
      "in_reply_to_id" : 426954791,
      "line" : 2059,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNTYxNQ==",
      "original_commit_id" : "4b139e1832dc9842242c87a74cbfaa51df3fab23",
      "original_line" : 2059,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 65,
      "pull_request_review_id" : 416389929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428835615",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428844525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428844525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this makes more sense if you also look at the full changes in https://github.com/bitcoin/bitcoin/pull/18876, where this function is common logic for getcfheaders and getcfilters, and the max number of headers that can be requested is 2000, and the max number of filters that can be requested in 1000.\r\n\r\nI agree that the getcfcheckpt logic passing in `0` and `std::numeric_limits<uint32_t>::max()` is a bit ugly. I could change it to pass in optionals, but that seems more aesthetic than anything.",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T18:47:05Z",
      "diff_hunk" : "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428844525",
      "id" : 428844525,
      "in_reply_to_id" : 428737628,
      "line" : 2038,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NDUyNQ==",
      "original_commit_id" : "4b139e1832dc9842242c87a74cbfaa51df3fab23",
      "original_line" : 2038,
      "original_position" : 46,
      "original_start_line" : 2020,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 416401486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : 2024,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428844525",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428849166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428849166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Another option would be to simply use default parameters, i.e. if start_height and max_height diff are not passed, the whole range is allowed. That would need to change the order of the parameters though.",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T18:55:46Z",
      "diff_hunk" : "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428849166",
      "id" : 428849166,
      "in_reply_to_id" : 428737628,
      "line" : 2038,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0OTE2Ng==",
      "original_commit_id" : "4b139e1832dc9842242c87a74cbfaa51df3fab23",
      "original_line" : 2038,
      "original_position" : 46,
      "original_start_line" : 2020,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 416407370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : 2024,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-21T18:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428849166",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Force pushed the branch to:\r\n\r\n- rebase on master now that #18960 is merged\r\n- Added a comment to `m_headers_cache` that didn't make it into #18960 (https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428395728)\r\n- Addressed @jkczyz's comment on the functional test (https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826)",
      "created_at" : "2020-05-21T19:25:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632297929",
      "id" : 632297929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjI5NzkyOQ==",
      "updated_at" : "2020-05-21T19:25:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632297929",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428864709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428864709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Technically, it's covered indirectly, but I think it's a good idea to explicitly test this so failures are easier to identify. I've added the check.",
      "commit_id" : "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
      "created_at" : "2020-05-21T19:26:31Z",
      "diff_hunk" : "@@ -100,12 +104,43 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428864709",
      "id" : 428864709,
      "in_reply_to_id" : 428759826,
      "line" : 119,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2NDcwOQ==",
      "original_commit_id" : "befc63d5b0937ca24fd48ed2580349740b87b0ec",
      "original_line" : 119,
      "original_position" : 33,
      "original_start_line" : 115,
      "path" : "test/functional/p2p_blockfilters.py",
      "position" : 34,
      "pull_request_review_id" : 416427372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
      "side" : "RIGHT",
      "start_line" : 116,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-21T19:26:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428864709",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> what's the general approach been for testing bad requests? BIP 157 says to not respond, but we are disconnecting the peer in these cases.\r\n\r\nI don't have a strong opinion about whether to disconnect or drop bad requests. Generally I prefer simply dropping bad requests to prevent bugs becoming network partition possibilities, but in this case:\r\n\r\n- the message type is entirely new.\r\n- the peers sending us these requests are light clients, so the downside of disconnecting them is small.\r\n\r\nI'm inclined to keep it as a disconnect since that's the only way we have to communicate to the client that there's a problem with the request, but I'm happy to change it if others disagree.",
      "created_at" : "2020-05-21T23:16:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632392766",
      "id" : 632392766,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjM5Mjc2Ng==",
      "updated_at" : "2020-05-21T23:16:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632392766",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
