[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One thing that I'd like to see better / more clearly documented is which components have which requirements and what changes as a result of libbitcoinkernel.\r\n\r\nE.g., I recently learned that script/interpreter.* is not allowed to link against threading primitives so the code can be used in ??? environments.\r\n\r\nDoes libbitcoinkernel have similar restrictions on what sorts of things are includable / not includable as a result (other than our own code, like platform stuff)?",
      "created_at" : "2022-02-09T20:54:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1034182668",
      "id" : 1034182668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849pGAM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034182668/reactions"
      },
      "updated_at" : "2022-02-09T20:54:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034182668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@JeremyRubin \r\n\r\n> One thing that I'd like to see better / more clearly documented is which components have which requirements and what changes as a result of libbitcoinkernel.\r\n\r\nHmm, I'm not sure what you mean...\r\n\r\n> E.g., I recently learned that script/interpreter.* is not allowed to link against threading primitives so the code can be used in ??? environments.\r\n\r\nWas this a public conversation? Could you link me?",
      "created_at" : "2022-02-09T21:10:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1034195359",
      "id" : 1034195359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849pJGf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034195359/reactions"
      },
      "updated_at" : "2022-02-09T21:10:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034195359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah this came up when I was implementing lazy caching for CTV using std::call_once that linking pthread from interpreter was a nono https://gnusha.org/bitcoin-core-dev/2022-01-20.log.\r\n\r\nI guess what I mean is it would be good to have a more clear cut boundary for libbitcoinkernel both up the stack on API boundaries but also \"down the stack\" in terms of what libbitcoinkernel can provide v.s. what the host environment should. Maybe this is a malformed question, feel free to chat me and we can flesh out if it's meaningful.",
      "created_at" : "2022-02-09T23:12:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1034296155",
      "id" : 1034296155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849phtb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034296155/reactions"
      },
      "updated_at" : "2022-02-09T23:12:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034296155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(ot: I couldn't find \"nono\" in the chat. Mind quoting the exact phrase? I think for your specific implementation `std::call_once` would have been more complicated than the `std::optional` approach you later took.)\r\n\r\nConcept ACK on libbitcoinkernel.",
      "created_at" : "2022-02-10T19:25:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035386411",
      "id" : 1035386411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849tr4r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035386411/reactions"
      },
      "updated_at" : "2022-02-10T19:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035386411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strongest possible Concept ACK. IMO we should've done this _years_ ago.\r\n\r\nKudos to @dongcarl for taking it on. I'll help in every way I can!",
      "created_at" : "2022-02-10T19:51:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035421140",
      "id" : 1035421140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849t0XU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035421140/reactions"
      },
      "updated_at" : "2022-02-10T19:51:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035421140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Bindings to other languages (first C, then others) should be introduced.\r\n\r\nNice! That might be handy for iOs too; so far I've no luck with this, see #12557. It seems much easier to include a C project than C++, maybe because Objective C inherits from the former. Bonus points for Swift bindings. An iOs node would need p2p stuff too.  ",
      "created_at" : "2022-02-10T19:58:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035431540",
      "id" : 1035431540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849t250",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035431540/reactions"
      },
      "updated_at" : "2022-02-10T19:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035431540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nAs [others](https://uploads.kiwiirc.com/files/f9a8a6e88e0ed1c63f927346339b640f/pasted.txt) have said even if there are occasional consensus leaks from a libbitcoinkernel keeping consensus code siloed for the most part would be great for risk mitigation and review rigor. \r\n\r\nSome initial [discussions](https://gnusha.org/bitcoin-core-dev/2022-02-10.log) in today's IRC meeting.",
      "created_at" : "2022-02-10T20:47:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035497239",
      "id" : 1035497239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849uG8X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035497239/reactions"
      },
      "updated_at" : "2022-02-10T20:47:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035497239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke the approach I ended up taking is substantially more complicated, perhaps you haven't fully reviewed it (callers must pass in a lambda that contains an interior synchonicity primitive or otherwise guarnatee single threaded executiuon), whereas the call_once approach was correct for all users).\r\n\r\nThe convo spanned a few days, that was just the start, my bad (I searched my local IRC for a date ref). On +1 day https://gnusha.org/bitcoin-core-dev/2022-01-21.log\r\n\r\n```\r\n10:23 < jeremyrubin> hey cfields can you have a look at #21702 build failure?\r\n10:23 <@gribble> https://github.com/bitcoin/bitcoin/issues/21702 | Implement BIP-119 Validation (CheckTemplateVerify) by JeremyRubin Â· Pull Request #21702 Â· bitcoin/bitcoin Â· GitHub\r\n10:23 < jeremyrubin> https://stackoverflow.com/questions/34924083/mingw32-make-error-error-once-flag-in-namespace-std-does-not-name-a-type\r\n10:23 < jeremyrubin> https://github.com/RavenProject/Ravencoin/issues/460\r\n10:24 < jeremyrubin> sort of weird b/c we use once_flag and call_once in other places in the code, so it looks like we're somehow linking with the wrong options?\r\n10:26 < jeremyrubin> looks like laanwj might know whats going on here based on https://github.com/bitcoin/bitcoin/pull/8653\r\n10:27 < sipa> @stick: https://www.96boards.org/product/developerbox/\r\n10:30 < jeremyrubin> specific errors are here https://gist.github.com/JeremyRubin/b3fc2ba910a8e5b6b807df3746e949d9\r\n10:30 < jeremyrubin> impl_pthread not getting linked\r\n11:09 < laanwj> jeremyrubin: that's a 5 year old issue, i'm sure it's no longer relevant? we've been using the posix variant since forever\r\n11:10 < laanwj> jeremyrubin: IIRC libbitcoin_consensus isn't linked against pthread intentionally, it's not supposed to be threaded\r\n11:11 < laanwj> because it could be used from non-threaded C code, or code using some completely different threading model\r\n11:25 < laanwj> i'd agree \"using C++ synchronization primitives\" isn't threading in itself, but apparently it does cause linking to one\r\n11:26 < jeremyrubin> laanwj: ok that makes sense I guess, but it's problematic slightly since the scriptchecks generated are designed to be threadsafe so i wanted to ensure that i had a low cost way to do cache on first use... but it sounds like that's troublesome no matter what I do (mutex, atomic, etc)\r\n11:28 < laanwj> right-even atomic isn't guaranteed, on some platforms it can be done with instructions, but on others it does need support from the OS through a threading library\r\n11:29 < jeremyrubin> i thought c++ requires atomics OR proof no threads are used otherwise things like static init are broken?\r\n11:29 < laanwj> any caching would have to be done at a higher level\r\n11:29 < jeremyrubin> hmm that seems like a boundary violation\r\n11:29 < jeremyrubin> this caching is required for validation to be correct\r\n11:29 < laanwj> not in the consensus code itself, i think it makes sense from the perspective that libbitcoin_consensus is supposed to be stateless too\r\n11:30 < laanwj> wait, no, consensus never should need caching between validations to be correct\r\n11:30 < jeremyrubin> PrecomputedData is required for correctness\r\n11:30 < jeremyrubin> where correctness includes runtime\r\n```\r\n\r\n\r\nBut this seems largely off topic for here other than having a clearer deliniation of what can and cannot be linked within kernel consensus code after this change, because I am unhappy with libbitcoin_consensus preventing the use of std::call_once in a straightforward manner, so thinking about similar issues or expectations would be good!",
      "created_at" : "2022-02-10T20:49:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035499343",
      "id" : 1035499343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849uHdP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035499343/reactions"
      },
      "updated_at" : "2022-02-10T20:49:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035499343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@JeremyRubin \r\n> I guess what I mean is it would be good to have a more clear cut boundary for libbitcoinkernel both up the stack on API boundaries...\r\n\r\nRight, I think we leave the API boundary up the stack until stage 2, so that we \"avoid having to prematurely optimizing for a \"perfect\" boundary or API (tends to be highly subjective, non-obvious, may lead to unproductive bike-shedding before we've even done anything meaningful)\"\r\n\r\n> but also \"down the stack\" in terms of what libbitcoinkernel can provide v.s. what the host environment should. Maybe this is a malformed question, feel free to chat me and we can flesh out if it's meaningful.\r\n\r\nAh I see, yeah I think the libbitcoinkernel case is very different from the libbitcoinconsensus case, since \"it is a stateful library that can spawn threads, do caching, do I/O, and many other things which one may not normally expect from a library\". Right now if you build #24304 with `--enable-shared --enable-experimental-util-chainstate` you will find that the library relies on only the \"expect\" set of runtime libraries:\r\n\r\n```\r\n$ ldd ./src/.libs/libbitcoinkernel.so\r\n        linux-vdso.so.1 (0x00007ffc387c6000)\r\n        libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007faaecf6c000)\r\n        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007faaecd56000)\r\n        libm.so.6 => /usr/lib/libm.so.6 (0x00007faaecc12000)\r\n        libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007faaecbf7000)\r\n        libc.so.6 => /usr/lib/libc.so.6 (0x00007faaeca2b000)\r\n        /usr/lib64/ld-linux-x86-64.so.2 (0x00007faaedc83000)\r\n```\r\n\r\nNow, a good decision to ponder upon is whether or not we should be embedding libraries such as `leveldb`, `crc32c`, and `boost` or whether we should require them as a runtime dependency. Currently, it is embedded: https://github.com/bitcoin/bitcoin/pull/24304/commits/1d9faa8fc7187c61a45764ea2e4c919f02b891d7#diff-4cb884d03ebb901069e4ee5de5d02538c40dd9b39919c615d8eaa9d364bbbd77R826",
      "created_at" : "2022-02-10T20:58:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035509970",
      "id" : 1035509970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849uKDS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035509970/reactions"
      },
      "updated_at" : "2022-02-10T20:58:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035509970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors \r\n> Nice! That might be handy for iOs too; so far I've no luck with this, see #12557. It seems much easier to include a C project than C++, maybe because Objective C inherits from the former. Bonus points for Swift bindings. An iOs node would need p2p stuff too.\r\n\r\nYup, most languages have FFI support of some kind to C, so once we have a C interface everything else will be easy!",
      "created_at" : "2022-02-10T21:01:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035512220",
      "id" : 1035512220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849uKmc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035512220/reactions"
      },
      "updated_at" : "2022-02-10T21:01:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035512220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni \r\n> Strongest possible Concept ACK. IMO we should've done this _years_ ago.\r\n> \r\n> Kudos to @dongcarl for taking it on. I'll help in every way I can!\r\n\r\nThank you for your help behind the scenes so far and thanks in advance for your help in the future! ð ",
      "created_at" : "2022-02-10T21:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1035513120",
      "id" : 1035513120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849uK0g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035513120/reactions"
      },
      "updated_at" : "2022-02-10T21:02:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035513120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand why there isn't a clearer answer about what's in the kernel and what's not in the kernel. If there isn't a clear line that can be drawn, I think it would be best to just treat libbitcoin_kernel as an evolving whitelist of API's that can be called externally, and not move a lot of code around or significantly change source code organization. Otherwise, I would like to know more know more about the statement 'Most of the changes to be made are \"move only\"' because it is not clear to me what code would be moving or where it would be moving to.",
      "created_at" : "2022-02-11T15:51:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24303#issuecomment-1036354680",
      "id" : 1036354680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
      "node_id" : "IC_kwDOABII5849xYR4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036354680/reactions"
      },
      "updated_at" : "2022-02-11T15:51:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036354680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
