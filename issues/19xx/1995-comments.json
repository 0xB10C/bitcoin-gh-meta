[
   {
      "body" : "Need to look at this in detail, but I certainly applaud the effort of improving the locking situation. I dread having to debug deadlocks in the current source.\r\n\r\nI also took a look at this in the past (see #1801),  but I didn't have the patience at that time to unentangle the complex web of locks. Also the nested mutexes are indeed a bad idea.\r\n\r\nIf you go through the difficulties of making sense of it all, it may be wise to switch from shared state completely and switch to a message-passing architecture. This will also allow running the different parts in different locked-down processs eventually, increasing robustness and security. But it's a lot of work.\r\n\r\n",
      "created_at" : "2012-11-10T11:41:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10254336",
      "id" : 10254336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
      "updated_at" : "2012-11-10T11:41:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10254336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "On 10 November 2012 08:41, Wladimir J. van der Laan <\r\nnotifications@github.com> wrote:\r\n\r\n> Need to look at this in detail, but I certainly applaud the effort of\r\n> improving the locking situation. I dread having to debug deadlocks in the\r\n> current source.\r\n>\r\n> I also took a look at this in the past (see #1801<https://github.com/bitcoin/bitcoin/issues/1801>),\r\n> but I didn't have the patience at that time to unentangle the complex web\r\n> of locks. Also the nested mutexes are indeed a bad idea.\r\n>\r\n> If you go through the difficulties of making sense of it all, it may be\r\n> wise to switch from shared state completely and switch to a message-passing\r\n> architecture. This will also allow running the different parts in different\r\n> locked-down processs eventually, increasing robustness and security. But\r\n> it's a lot of work.\r\n>\r\n>\r\nActually what I am doing is a series of transforms.\r\n\r\nFirst I annotate data and locks based on evidence in the code.  So I see\r\nthat a given lock is taken before mutation of a variable, then that locks\r\nprotects the variable.  The annotations on functions are again just deduced\r\nfrom that. Then the compiler will prove inconsistencies, and that is when\r\none either have to change the annotation, or change the locking code.  The\r\nlatter is not automatic but depends on knowing the code in question.\r\n\r\nI understand that the result of all of the above can be somewhat hard to\r\ndigest as a patch.  I can make it easier by splitting it into smaller\r\npieces, but first I'd like to get thumbs up for this kind of annotations.\r\n It really is a domain-specific type system available in clang.\r\n\r\nI've done a large backend system at Google using this strategy, and not\r\nonce did I have to debug locking issues.  And this in a very popular\r\nproduct.  Unfortunately, at this point in time I don't have much time to\r\ndedicate to this (I'm doing a startup, so I need to be selective about my\r\ntime).\r\n\r\nIf you are interested, I can also insert TODOs for other developers to look\r\nat, for dubious locking/APIs that are too entangled.  I have personally\r\nfound that having a lot of TOODs in the code makes it easier for others to\r\nunderstand suboptimal code that they can reasonably try to fix when they\r\nrefactor a piece of code, but others find that it makes the code look even\r\nmore horrible than it is. YMMV.\r\n\r\nSmaller sized changes would be something like:\r\n\r\n1. Add the annotation support\r\n2. Do the necessary changes to sync.h to support annotations\r\n3. Annotate most of the classes/interfaces and do transformations of\r\nmethods that are involved in recursive locking.\r\n4. Create a patch that does the actual locking changes, including the\r\ncompler-deduced inconsistency at each point.\r\n5. Remove the compiler comments from the code.\r\n\r\nAlexander\r\n\r\n> Ã¢ÂÂ\r\n> Reply to this email directly or view it on GitHub<https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10254336>.\r\n>\r\n>",
      "created_at" : "2012-11-10T15:21:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10256133",
      "id" : 10256133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
      "updated_at" : "2012-11-10T15:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10256133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/339369?v=3",
         "events_url" : "https://api.github.com/users/alexanderkjeldaas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alexanderkjeldaas/followers",
         "following_url" : "https://api.github.com/users/alexanderkjeldaas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alexanderkjeldaas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alexanderkjeldaas",
         "id" : 339369,
         "login" : "alexanderkjeldaas",
         "organizations_url" : "https://api.github.com/users/alexanderkjeldaas/orgs",
         "received_events_url" : "https://api.github.com/users/alexanderkjeldaas/received_events",
         "repos_url" : "https://api.github.com/users/alexanderkjeldaas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alexanderkjeldaas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alexanderkjeldaas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alexanderkjeldaas"
      }
   },
   {
      "body" : "I'm certainly in favor of improving the locking system. I didn't know about clang's -Wthread-safety, but it certainly looks like a nice way to improvements. If we go that way, I'd like to see it completed as well, so that probably means rebasing from time to time, and following up. Unfortunately, refactoring patches are often not considered high priority, and they conflict easily with other patches.\r\n\r\nAbout the locks in general, I think most of the uglyness/entanglement is the result of lack of encapsulation. Many objects expose their inner state publically, and are also accessed/modified from almost everywhere. I think we made at least some improvement since Satoshi's days (there wasn't even a CWallet or CkeyStore, and all was done from within main), but there's a long road ahead still.\r\n\r\nFor the block chain, I've been planning to add a class to separate the block tree (mapBlockChain, pblocktree & co) and the coin state (pcoinsTip, hashBestChain) entirely after ultraprune (which is now merged). Ideally, both get guarded by separate locks (so cs_main can go), and encapsulate them in well-behaved classes.\r\n\r\nRegarding callbacks, @TheBlueMatt has worked on creating a message queue for the core before, so callbacks to wallet could run in separate threads. This never got merged, unfortunately.",
      "created_at" : "2012-11-10T17:38:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10257587",
      "id" : 10257587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
      "updated_at" : "2012-11-10T17:38:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10257587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I agree that doing this in multiple phases is a good idea, and that adding the annotations would be a good first step, so that we can all get an idea of the kind of warnings that clang gives in this case.",
      "created_at" : "2012-11-10T20:58:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10259812",
      "id" : 10259812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
      "updated_at" : "2012-11-10T20:58:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10259812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thumbs up from me on improving the locking; ideas for how we can test to make sure we're not making things worse as we improve the code are welcome.\r\n",
      "created_at" : "2012-11-10T22:37:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1995#issuecomment-10260803",
      "id" : 10260803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
      "updated_at" : "2012-11-10T22:37:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10260803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   }
]
