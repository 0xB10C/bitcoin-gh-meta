[
   {
      "body" : "Wallet tests were failing on Travis because bitcoind startup was timing out. Increasing timeout from 2.5s to 10s for Travis.",
      "created_at" : "2017-06-30T16:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-312307458",
      "id" : 312307458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-06-30T16:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312307458",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Concept ACK https://github.com/bitcoin/bitcoin/pull/10711/commits/e538dbf42d20338f758f415a37c07555403ef6c0, looks good but haven't tested or gone through thoroughly",
      "created_at" : "2017-07-04T06:28:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-312791543",
      "id" : 312791543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-07-04T06:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312791543",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3211283?v=3",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "body" : "The speed-up is nice, also like the idea of launching nodes in parallel. Concept ACK.",
      "created_at" : "2017-07-10T15:44:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-314147077",
      "id" : 314147077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-07-10T15:45:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314147077",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126496275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126496275"
         }
      },
      "body" : "Remove this?",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-07-10T18:10:40Z",
      "diff_hunk" : "@@ -244,6 +244,7 @@ def get_auth_cookie(datadir, n):\n                 if line.startswith(\"rpcpassword=\"):\n                     assert password is None  # Ensure that there is only one rpcpassword line\n                     password = line.split(\"=\")[1].strip(\"\\n\")\n+    # print(os.path.join(datadir, \"regtest\", \".cookie\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126496275",
      "id" : 126496275,
      "original_commit_id" : "dcc0ed74342b32cbd9f4ab6103c62a84522f2f32",
      "original_position" : 22,
      "path" : "test/functional/test_framework/util.py",
      "position" : null,
      "pull_request_review_id" : 48985995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126496275",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126700049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126700049"
         }
      },
      "body" : "thanks. Removed",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-07-11T14:12:02Z",
      "diff_hunk" : "@@ -244,6 +244,7 @@ def get_auth_cookie(datadir, n):\n                 if line.startswith(\"rpcpassword=\"):\n                     assert password is None  # Ensure that there is only one rpcpassword line\n                     password = line.split(\"=\")[1].strip(\"\\n\")\n+    # print(os.path.join(datadir, \"regtest\", \".cookie\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126700049",
      "id" : 126700049,
      "original_commit_id" : "dcc0ed74342b32cbd9f4ab6103c62a84522f2f32",
      "original_position" : 22,
      "path" : "test/functional/test_framework/util.py",
      "position" : null,
      "pull_request_review_id" : 49207950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126700049",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "fixed @jtimon's review comment and rebased.",
      "created_at" : "2017-07-11T14:12:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-314456734",
      "id" : 314456734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-07-11T14:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314456734",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "rebased with TestNode changes for multiwallet.",
      "created_at" : "2017-07-24T15:35:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-317462059",
      "id" : 317462059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-07-24T15:35:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317462059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Needs rebase",
      "created_at" : "2017-08-08T22:04:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-321095015",
      "id" : 321095015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-08-08T22:04:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321095015",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "rebased\r\n\r\n@MarcoFalke @kallewoof @jimmysong @NicolasDorier I'd love some review of this if any of you have time.",
      "created_at" : "2017-08-09T20:49:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-321377319",
      "id" : 321377319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10711",
      "updated_at" : "2017-08-09T20:49:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321377319",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307028"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132307028"
         }
      },
      "body" : "This is a little harder to read than something like this:\r\n\r\n    for attempt in range(40):\r\n        ...\r\n        time.sleep(0.25)",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T21:06:59Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Class for bitcoind node under test\"\"\"\n+\n+import errno\n+import http.client\n+import logging\n+import os\n+import subprocess\n+import time\n+\n+from .util import (\n+    assert_equal,\n+    get_rpc_proxy,\n+    rpc_url,\n+)\n+from .authproxy import JSONRPCException\n+\n+class TestNode():\n+    \"\"\"A class for representing a bitcoind node under test.\n+\n+    This class contains:\n+\n+    - state about the node (whether it's running, etc)\n+    - a Python subprocess.Popen object representing the running process\n+    - an RPC connection to the node\n+\n+    To make things easier for the test writer, a bit of magic is happening under the covers.\n+    Any unrecognised messages will be dispatched to the RPC connection.\"\"\"\n+\n+    def __init__(self, i, dirname, extra_args, rpchost, timewait, binary, stderr, mocktime, coverage_dir):\n+        self.index = i\n+        self.datadir = os.path.join(dirname, \"node\" + str(i))\n+        self.rpchost = rpchost\n+        self.rpc_timeout = timewait\n+        if binary is None:\n+            self.binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        else:\n+            self.binary = binary\n+        self.stderr = stderr\n+        self.coverage_dir = coverage_dir\n+        # Most callers will just need to add extra args to the standard list below. For those callers that need more flexibity, they can just set the args property directly.\n+        self.extra_args = extra_args\n+        self.args = [self.binary, \"-datadir=\" + self.datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-logtimemicros\", \"-debug\", \"-debugexclude=libevent\", \"-debugexclude=leveldb\", \"-mocktime=\" + str(mocktime), \"-uacomment=testnode%d\" % i]\n+\n+        self.running = False\n+        self.process = None\n+        self.rpc_connected = False\n+        self.rpc = None\n+        self.url = None\n+        self.log = logging.getLogger('TestFramework.node%d' % i)\n+\n+    def __getattr__(self, *args, **kwargs):\n+        \"\"\"Dispatches any unrecognised messages to the RPC connection.\"\"\"\n+        assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n+        return self.rpc.__getattr__(*args, **kwargs)\n+\n+    def start(self):\n+        \"\"\"Start the node.\"\"\"\n+        # import pdb; pdb.set_trace()\n+        self.process = subprocess.Popen(self.args + self.extra_args, stderr=self.stderr)\n+        self.running = True\n+        self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n+\n+    def wait_for_rpc_connection(self):\n+        \"\"\"Sets up an RPC connection to the bitcoind process. Returns False if unable to connect.\"\"\"\n+\n+        attempts = 40\n+        while attempts > 0:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307028",
      "id" : 132307028,
      "original_commit_id" : "05259b0f2a00b08e314360acc96624cb34b32ff5",
      "original_position" : 71,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 55374281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132307028",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/524761?v=4",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132307194"
         }
      },
      "body" : "no need for `as e`",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T21:07:40Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Class for bitcoind node under test\"\"\"\n+\n+import errno\n+import http.client\n+import logging\n+import os\n+import subprocess\n+import time\n+\n+from .util import (\n+    assert_equal,\n+    get_rpc_proxy,\n+    rpc_url,\n+)\n+from .authproxy import JSONRPCException\n+\n+class TestNode():\n+    \"\"\"A class for representing a bitcoind node under test.\n+\n+    This class contains:\n+\n+    - state about the node (whether it's running, etc)\n+    - a Python subprocess.Popen object representing the running process\n+    - an RPC connection to the node\n+\n+    To make things easier for the test writer, a bit of magic is happening under the covers.\n+    Any unrecognised messages will be dispatched to the RPC connection.\"\"\"\n+\n+    def __init__(self, i, dirname, extra_args, rpchost, timewait, binary, stderr, mocktime, coverage_dir):\n+        self.index = i\n+        self.datadir = os.path.join(dirname, \"node\" + str(i))\n+        self.rpchost = rpchost\n+        self.rpc_timeout = timewait\n+        if binary is None:\n+            self.binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        else:\n+            self.binary = binary\n+        self.stderr = stderr\n+        self.coverage_dir = coverage_dir\n+        # Most callers will just need to add extra args to the standard list below. For those callers that need more flexibity, they can just set the args property directly.\n+        self.extra_args = extra_args\n+        self.args = [self.binary, \"-datadir=\" + self.datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-logtimemicros\", \"-debug\", \"-debugexclude=libevent\", \"-debugexclude=leveldb\", \"-mocktime=\" + str(mocktime), \"-uacomment=testnode%d\" % i]\n+\n+        self.running = False\n+        self.process = None\n+        self.rpc_connected = False\n+        self.rpc = None\n+        self.url = None\n+        self.log = logging.getLogger('TestFramework.node%d' % i)\n+\n+    def __getattr__(self, *args, **kwargs):\n+        \"\"\"Dispatches any unrecognised messages to the RPC connection.\"\"\"\n+        assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n+        return self.rpc.__getattr__(*args, **kwargs)\n+\n+    def start(self):\n+        \"\"\"Start the node.\"\"\"\n+        # import pdb; pdb.set_trace()\n+        self.process = subprocess.Popen(self.args + self.extra_args, stderr=self.stderr)\n+        self.running = True\n+        self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n+\n+    def wait_for_rpc_connection(self):\n+        \"\"\"Sets up an RPC connection to the bitcoind process. Returns False if unable to connect.\"\"\"\n+\n+        attempts = 40\n+        while attempts > 0:\n+            assert not self.process.poll(), \"bitcoind exited with status %i during initialization\" % self.process.returncode\n+            try:\n+                self.rpc = get_rpc_proxy(rpc_url(self.datadir, self.index, self.rpchost), self.index, coveragedir=self.coverage_dir)\n+                self.rpc.getblockcount()\n+                # If the call to getblockcount() succeeds then the RPC connection is up\n+                self.rpc_connected = True\n+                self.url = self.rpc.url\n+                self.log.debug(\"RPC successfully started\")\n+                return True\n+            except IOError as e:\n+                if e.errno != errno.ECONNREFUSED:  # Port not yet open?\n+                    raise  # unknown IO error\n+            except JSONRPCException as e:  # Initialization phase\n+                if e.error['code'] != -28:  # RPC in warmup?\n+                    raise  # unknown JSON RPC exception\n+            except ValueError as e:  # cookie file not found and no rpcuser or rpcassword. bitcoind still starting\n+                if \"No RPC credentials\" not in str(e):\n+                    raise\n+            time.sleep(0.25)\n+            attempts -= 1\n+        raise AssertionError(\"Unable to connect to bitcoind\")\n+\n+    def stop_node(self):\n+        \"\"\"Stop the node.\"\"\"\n+        if not self.running:\n+            return\n+        self.log.debug(\"Stopping node\")\n+        try:\n+            self.stop()\n+        except http.client.CannotSendRequest as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307194",
      "id" : 132307194,
      "original_commit_id" : "05259b0f2a00b08e314360acc96624cb34b32ff5",
      "original_position" : 101,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 55374281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132307194",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/524761?v=4",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132308185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132308185"
         }
      },
      "body" : "What does this do? `wallet_path` is for sure a string, but how do you divide the rpc object by a string?",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T21:12:13Z",
      "diff_hunk" : "@@ -91,6 +91,12 @@ def wait_for_rpc_connection(self):\n             attempts -= 1\n         raise AssertionError(\"Unable to connect to bitcoind\")\n \n+    def get_wallet_rpc(self, wallet_name):\n+        assert self.rpc_connected\n+        assert self.rpc\n+        wallet_path = \"wallet/%s\" % wallet_name\n+        return self.rpc / wallet_path",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132308185",
      "id" : 132308185,
      "original_commit_id" : "e25b0cf5eaa34ca2f9232d23cf1a532438e5c9dc",
      "original_position" : 8,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 97,
      "pull_request_review_id" : 55374281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132308185",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/524761?v=4",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318470"
         }
      },
      "body" : "By magic :)\r\n\r\nTake a look at https://github.com/bitcoin/bitcoin/blob/e526ca6284b9e13be1b912b80dd73a34e739b539/test/functional/test_framework/authproxy.py#L195 and https://github.com/bitcoin/bitcoin/blob/e526ca6284b9e13be1b912b80dd73a34e739b539/test/functional/test_framework/coverage.py#L59\r\n\r\nThe interface here is supposed to be similar to Python's [pathlib](https://docs.python.org/3/library/pathlib.html)\r\n\r\nThis functionality was added to support the multiwallet endpoints in https://github.com/bitcoin/bitcoin/commit/979d0b8a6533de58b6352666d90fff33841db63d . Take a look at the `multiwallet.py` test to see how it's currently used.",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T21:59:49Z",
      "diff_hunk" : "@@ -91,6 +91,12 @@ def wait_for_rpc_connection(self):\n             attempts -= 1\n         raise AssertionError(\"Unable to connect to bitcoind\")\n \n+    def get_wallet_rpc(self, wallet_name):\n+        assert self.rpc_connected\n+        assert self.rpc\n+        wallet_path = \"wallet/%s\" % wallet_name\n+        return self.rpc / wallet_path",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318470",
      "id" : 132318470,
      "original_commit_id" : "e25b0cf5eaa34ca2f9232d23cf1a532438e5c9dc",
      "original_position" : 8,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 97,
      "pull_request_review_id" : 55386741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318470",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318523"
         }
      },
      "body" : "Thanks. changed",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T22:00:00Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Class for bitcoind node under test\"\"\"\n+\n+import errno\n+import http.client\n+import logging\n+import os\n+import subprocess\n+import time\n+\n+from .util import (\n+    assert_equal,\n+    get_rpc_proxy,\n+    rpc_url,\n+)\n+from .authproxy import JSONRPCException\n+\n+class TestNode():\n+    \"\"\"A class for representing a bitcoind node under test.\n+\n+    This class contains:\n+\n+    - state about the node (whether it's running, etc)\n+    - a Python subprocess.Popen object representing the running process\n+    - an RPC connection to the node\n+\n+    To make things easier for the test writer, a bit of magic is happening under the covers.\n+    Any unrecognised messages will be dispatched to the RPC connection.\"\"\"\n+\n+    def __init__(self, i, dirname, extra_args, rpchost, timewait, binary, stderr, mocktime, coverage_dir):\n+        self.index = i\n+        self.datadir = os.path.join(dirname, \"node\" + str(i))\n+        self.rpchost = rpchost\n+        self.rpc_timeout = timewait\n+        if binary is None:\n+            self.binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        else:\n+            self.binary = binary\n+        self.stderr = stderr\n+        self.coverage_dir = coverage_dir\n+        # Most callers will just need to add extra args to the standard list below. For those callers that need more flexibity, they can just set the args property directly.\n+        self.extra_args = extra_args\n+        self.args = [self.binary, \"-datadir=\" + self.datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-logtimemicros\", \"-debug\", \"-debugexclude=libevent\", \"-debugexclude=leveldb\", \"-mocktime=\" + str(mocktime), \"-uacomment=testnode%d\" % i]\n+\n+        self.running = False\n+        self.process = None\n+        self.rpc_connected = False\n+        self.rpc = None\n+        self.url = None\n+        self.log = logging.getLogger('TestFramework.node%d' % i)\n+\n+    def __getattr__(self, *args, **kwargs):\n+        \"\"\"Dispatches any unrecognised messages to the RPC connection.\"\"\"\n+        assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n+        return self.rpc.__getattr__(*args, **kwargs)\n+\n+    def start(self):\n+        \"\"\"Start the node.\"\"\"\n+        # import pdb; pdb.set_trace()\n+        self.process = subprocess.Popen(self.args + self.extra_args, stderr=self.stderr)\n+        self.running = True\n+        self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n+\n+    def wait_for_rpc_connection(self):\n+        \"\"\"Sets up an RPC connection to the bitcoind process. Returns False if unable to connect.\"\"\"\n+\n+        attempts = 40\n+        while attempts > 0:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318523",
      "id" : 132318523,
      "original_commit_id" : "05259b0f2a00b08e314360acc96624cb34b32ff5",
      "original_position" : 71,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 55386797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318546"
         }
      },
      "body" : "Yep",
      "commit_id" : "2d189c89f6ecdb846a046bdd57883e190df7b3bf",
      "created_at" : "2017-08-09T22:00:06Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Class for bitcoind node under test\"\"\"\n+\n+import errno\n+import http.client\n+import logging\n+import os\n+import subprocess\n+import time\n+\n+from .util import (\n+    assert_equal,\n+    get_rpc_proxy,\n+    rpc_url,\n+)\n+from .authproxy import JSONRPCException\n+\n+class TestNode():\n+    \"\"\"A class for representing a bitcoind node under test.\n+\n+    This class contains:\n+\n+    - state about the node (whether it's running, etc)\n+    - a Python subprocess.Popen object representing the running process\n+    - an RPC connection to the node\n+\n+    To make things easier for the test writer, a bit of magic is happening under the covers.\n+    Any unrecognised messages will be dispatched to the RPC connection.\"\"\"\n+\n+    def __init__(self, i, dirname, extra_args, rpchost, timewait, binary, stderr, mocktime, coverage_dir):\n+        self.index = i\n+        self.datadir = os.path.join(dirname, \"node\" + str(i))\n+        self.rpchost = rpchost\n+        self.rpc_timeout = timewait\n+        if binary is None:\n+            self.binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        else:\n+            self.binary = binary\n+        self.stderr = stderr\n+        self.coverage_dir = coverage_dir\n+        # Most callers will just need to add extra args to the standard list below. For those callers that need more flexibity, they can just set the args property directly.\n+        self.extra_args = extra_args\n+        self.args = [self.binary, \"-datadir=\" + self.datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-logtimemicros\", \"-debug\", \"-debugexclude=libevent\", \"-debugexclude=leveldb\", \"-mocktime=\" + str(mocktime), \"-uacomment=testnode%d\" % i]\n+\n+        self.running = False\n+        self.process = None\n+        self.rpc_connected = False\n+        self.rpc = None\n+        self.url = None\n+        self.log = logging.getLogger('TestFramework.node%d' % i)\n+\n+    def __getattr__(self, *args, **kwargs):\n+        \"\"\"Dispatches any unrecognised messages to the RPC connection.\"\"\"\n+        assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n+        return self.rpc.__getattr__(*args, **kwargs)\n+\n+    def start(self):\n+        \"\"\"Start the node.\"\"\"\n+        # import pdb; pdb.set_trace()\n+        self.process = subprocess.Popen(self.args + self.extra_args, stderr=self.stderr)\n+        self.running = True\n+        self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n+\n+    def wait_for_rpc_connection(self):\n+        \"\"\"Sets up an RPC connection to the bitcoind process. Returns False if unable to connect.\"\"\"\n+\n+        attempts = 40\n+        while attempts > 0:\n+            assert not self.process.poll(), \"bitcoind exited with status %i during initialization\" % self.process.returncode\n+            try:\n+                self.rpc = get_rpc_proxy(rpc_url(self.datadir, self.index, self.rpchost), self.index, coveragedir=self.coverage_dir)\n+                self.rpc.getblockcount()\n+                # If the call to getblockcount() succeeds then the RPC connection is up\n+                self.rpc_connected = True\n+                self.url = self.rpc.url\n+                self.log.debug(\"RPC successfully started\")\n+                return True\n+            except IOError as e:\n+                if e.errno != errno.ECONNREFUSED:  # Port not yet open?\n+                    raise  # unknown IO error\n+            except JSONRPCException as e:  # Initialization phase\n+                if e.error['code'] != -28:  # RPC in warmup?\n+                    raise  # unknown JSON RPC exception\n+            except ValueError as e:  # cookie file not found and no rpcuser or rpcassword. bitcoind still starting\n+                if \"No RPC credentials\" not in str(e):\n+                    raise\n+            time.sleep(0.25)\n+            attempts -= 1\n+        raise AssertionError(\"Unable to connect to bitcoind\")\n+\n+    def stop_node(self):\n+        \"\"\"Stop the node.\"\"\"\n+        if not self.running:\n+            return\n+        self.log.debug(\"Stopping node\")\n+        try:\n+            self.stop()\n+        except http.client.CannotSendRequest as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318546",
      "id" : 132318546,
      "original_commit_id" : "05259b0f2a00b08e314360acc96624cb34b32ff5",
      "original_position" : 101,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 55386828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10711",
      "updated_at" : "2017-08-09T22:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132318546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
