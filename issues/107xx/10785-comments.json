[
   {
      "body" : "Should probably be tested on big endian. :)",
      "created_at" : "2017-07-10T18:32:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#issuecomment-314194922",
      "id" : 314194922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10785",
      "updated_at" : "2017-07-10T18:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314194922",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126551394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126551394"
         }
      },
      "body" : "For ease of implementation, deserialization first happens into a `std::vector<uint64_t>`, and is then converted. This means a temporary is created and allocated, which is an overhead that the old implementation didn't have.",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:18:13Z",
      "diff_hunk" : "@@ -12,58 +12,70 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n+template<typename T>\n+struct TransactionCompressWrapper {\n private:\n-    CTransactionRef& tx;\n+    T& tx;\n public:\n-    TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n-\n-    ADD_SERIALIZE_METHODS;\n+    TransactionCompressWrapper(T& txIn) : tx(txIn) {}\n+    SERIALIZE_METHODS(obj) { READWRITE(obj.tx); }\n+};\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+template<typename I>\n+struct Uint48Wrapper {\n+private:\n+    I& m_int;\n+public:\n+    Uint48Wrapper(I& i) : m_int(i) {}\n+    template <typename Stream> void Serialize(Stream& s) const\n+    {\n+        uint32_t lsb = m_int & 0xffffffff;\n+        uint16_t msb = (m_int >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n+    template <typename Stream> void Unserialize(Stream& s)\n+    {\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        m_int = (uint64_t(msb) << 32) | uint64_t(lsb);\n     }\n };\n \n+template<typename T>\n+static inline TransactionCompressWrapper<T> TransactionCompressor(T& tx) { return TransactionCompressWrapper<T>(tx); }\n+\n class BlockTransactionsRequest {\n public:\n     // A BlockTransactionsRequest message\n     uint256 blockhash;\n     std::vector<uint16_t> indexes;\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(blockhash);\n+    template <typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        s << blockhash;\n         uint64_t indexes_size = (uint64_t)indexes.size();\n-        READWRITE(COMPACTSIZE(indexes_size));\n-        if (ser_action.ForRead()) {\n-            size_t i = 0;\n-            while (indexes.size() < indexes_size) {\n-                indexes.resize(std::min((uint64_t)(1000 + indexes.size()), indexes_size));\n-                for (; i < indexes.size(); i++) {\n-                    uint64_t index = 0;\n-                    READWRITE(COMPACTSIZE(index));\n-                    if (index > std::numeric_limits<uint16_t>::max())\n-                        throw std::ios_base::failure(\"index overflowed 16 bits\");\n-                    indexes[i] = index;\n-                }\n-            }\n-\n-            uint16_t offset = 0;\n-            for (size_t j = 0; j < indexes.size(); j++) {\n-                if (uint64_t(indexes[j]) + uint64_t(offset) > std::numeric_limits<uint16_t>::max())\n-                    throw std::ios_base::failure(\"indexes overflowed 16 bits\");\n-                indexes[j] = indexes[j] + offset;\n-                offset = indexes[j] + 1;\n-            }\n-        } else {\n-            for (size_t i = 0; i < indexes.size(); i++) {\n-                uint64_t index = indexes[i] - (i == 0 ? 0 : (indexes[i - 1] + 1));\n-                READWRITE(COMPACTSIZE(index));\n-            }\n+        s << CompactSize(indexes_size);\n+        for (size_t i = 0; i < indexes.size(); i++) {\n+            const uint64_t index = indexes[i] - (i == 0 ? 0 : (indexes[i - 1] + 1));\n+            s << CompactSize(index);\n+        }\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        std::vector<uint64_t> tmp;\n+        s >> blockhash >> VectorApply<CompactSizeWrapper>(tmp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126551394",
      "id" : 126551394,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 98,
      "path" : "src/blockencodings.h",
      "position" : 98,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126551394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126551772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126551772"
         }
      },
      "body" : "This whole test is somewhat less valuable now, as both cases use `READWRITE`.",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:20:41Z",
      "diff_hunk" : "@@ -49,11 +48,10 @@ class CSerializeMethodsTestMany : public CSerializeMethodsTestSingle\n {\n public:\n     using CSerializeMethodsTestSingle::CSerializeMethodsTestSingle;\n-    ADD_SERIALIZE_METHODS;\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITEMANY(intval, boolval, stringval, FLATDATA(charstrval), txval);\n+    SERIALIZE_METHODS(obj)\n+    {\n+        READWRITE(obj.intval, obj.boolval, obj.stringval, FlatData(obj.charstrval), obj.txval);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126551772",
      "id" : 126551772,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 35,
      "path" : "src/test/serialize_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126551772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552095"
         }
      },
      "body" : "This is one of the more involved changes, as it's both splitting the serializer into two versions, and the `Serialize` code no longer modifies `mapValue` in-place (wtf?).",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:22:40Z",
      "diff_hunk" : "@@ -378,42 +376,36 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        if (ser_action.ForRead())\n-            Init(NULL);\n+    template<typename Stream>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552095",
      "id" : 126552095,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 79,
      "path" : "src/wallet/wallet.h",
      "position" : 79,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552169"
         }
      },
      "body" : "Here is another big change, that avoids modifying `mapValue` and `strAccount` and then later fixing it up before returning (wtf?).",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:23:15Z",
      "diff_hunk" : "@@ -378,42 +376,36 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        if (ser_action.ForRead())\n-            Init(NULL);\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         char fSpent = false;\n+        mapValue_t mapValueCopy = mapValue;\n \n-        if (!ser_action.ForRead())\n-        {\n-            mapValue[\"fromaccount\"] = strFromAccount;\n-\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (nTimeSmart)\n-                mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n+        mapValueCopy[\"fromaccount\"] = strFromAccount;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+        if (nTimeSmart) {\n+            mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        READWRITE(*(CMerkleTx*)this);\n+        s << AsBaseType<CMerkleTx>(*this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        READWRITE(vUnused);\n-        READWRITE(mapValue);\n-        READWRITE(vOrderForm);\n-        READWRITE(fTimeReceivedIsTxTime);\n-        READWRITE(nTimeReceived);\n-        READWRITE(fFromMe);\n-        READWRITE(fSpent);\n-\n-        if (ser_action.ForRead())\n-        {\n-            strFromAccount = mapValue[\"fromaccount\"];\n+        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+    }\n \n-            ReadOrderPos(nOrderPos, mapValue);\n+    template<typename Stream>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552169",
      "id" : 126552169,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 117,
      "path" : "src/wallet/wallet.h",
      "position" : 117,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552169",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552640"
         }
      },
      "body" : "Notice the unusual construction of a template that takes a template as parameter here. See \"Template template parameter\" here: http://en.cppreference.com/w/cpp/language/template_parameters",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:25:58Z",
      "diff_hunk" : "@@ -456,14 +458,104 @@ class LimitedString\n     template<typename Stream>\n     void Serialize(Stream& s) const\n     {\n-        WriteCompactSize(s, string.size());\n-        if (!string.empty())\n-            s.write((char*)&string[0], string.size());\n+        s << string;\n     }\n };\n+//! Add a LimitedString wrapper around a const string (identity)\n+template<size_t I> static inline const std::string& LimitedString(const std::string& str) { return str; }\n+//! Add a LimitedString wrapper around a non-const string\n+template<size_t I> static inline LimitedStringWrapper<I> LimitedString(std::string& str) { return LimitedStringWrapper<I>(str); }\n+\n+/** Serialization wrapper class for big-endian integers.\n+ *\n+ * Use this wrapper around integer types that are stored in memory in native\n+ * byte order, but serialized in big endian notation.\n+ *\n+ * Onlyy 16-bit types are supported for now.\n+ */\n+template<typename I, size_t S> class BigEndianWrapper\n+{\n+protected:\n+    I& m_val;\n+public:\n+    BigEndianWrapper(I& val) : m_val(val)\n+    {\n+        static_assert(S == 2, \"Unsupported BigEndian size\");\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        if (S == 2) ser_writedata16be(s, m_val);\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        if (S == 2) m_val = ser_readdata16be(s);\n+    }\n+};\n+//! Automatically construct a BigEndianWrapper around the argument.\n+template<typename I> static inline BigEndianWrapper<I,sizeof(I)> BigEndian(I& i) { return BigEndianWrapper<I,sizeof(I)>(i); }\n+\n+/** Serialization wrapper for custom-element vectors.\n+ *\n+ * This allows (de)serialization of vectors of type V while using a custom\n+ * serializer W for the entries inside.\n+ *\n+ * For const-correctness, the W parameter is a template itself.\n+ * It is instantiated as W<const V::value_type> when serializing, and as\n+ * W<V::value_type> when deserializing.\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(obj) { READWRITE(VectorApply<VarIntWrapper>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, iteration, and resize method that behave like vectors.\n+ */\n+template<template <typename> class W, typename V> class VectorApplyWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552640",
      "id" : 126552640,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 302,
      "path" : "src/serialize.h",
      "position" : 303,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552640",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552772"
         }
      },
      "body" : "The reason for removing the `std::forward` calls here is explained in the commit message (there is no benefit in passing down the rvalue-ness).",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-07-10T22:26:40Z",
      "diff_hunk" : "@@ -898,16 +978,16 @@ void SerializeMany(Stream& s)\n }\n \n template<typename Stream, typename Arg>\n-void SerializeMany(Stream& s, Arg&& arg)\n+void SerializeMany(Stream& s, const Arg& arg)\n {\n-    ::Serialize(s, std::forward<Arg>(arg));\n+    ::Serialize(s, arg);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r126552772",
      "id" : 126552772,
      "original_commit_id" : "21cf5887e9cc6f8b3521b4748acc167a905655da",
      "original_position" : 381,
      "path" : "src/serialize.h",
      "position" : 382,
      "pull_request_review_id" : 49047147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-07-30T00:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126552772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Concept ACK.\r\nBinaries: https://bitcoin.jonasschnelli.ch/build/210 (Currently running on a fresh node)\r\nAgree with @gmaxwell that some BE testing would be good.\r\n\r\nWill code-review soon.",
      "created_at" : "2017-07-11T13:24:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#issuecomment-314442225",
      "id" : 314442225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10785",
      "updated_at" : "2017-07-11T13:24:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314442225",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Made some changes to reduce the size of the overall diff.",
      "created_at" : "2017-07-30T00:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#issuecomment-318868567",
      "id" : 318868567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10785",
      "updated_at" : "2017-07-30T00:20:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318868567",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r131536929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/131536929"
         }
      },
      "body" : "Missing periods in comments.",
      "commit_id" : "b0652aca61ca1d3bd800a3be1b486f87f4a642a2",
      "created_at" : "2017-08-06T08:12:46Z",
      "diff_hunk" : "@@ -495,11 +494,14 @@ class LimitedString\n     template<typename Stream>\n     void Serialize(Stream& s) const\n     {\n-        WriteCompactSize(s, string.size());\n-        if (!string.empty())\n-            s.write((char*)string.data(), string.size());\n+        s << string;\n     }\n };\n+//! Add a LimitedString wrapper around a const string (identity)\n+template<size_t I> static inline const std::string& LimitedString(const std::string& str) { return str; }\n+//! Add a LimitedString wrapper around a non-const string",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#discussion_r131536929",
      "id" : 131536929,
      "original_commit_id" : "6020efb64a92ace29ad5a4a73648637799d6b44e",
      "original_position" : 38,
      "path" : "src/serialize.h",
      "position" : 247,
      "pull_request_review_id" : 54529753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10785",
      "updated_at" : "2017-08-06T08:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/131536929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-08-15T21:38:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10785#issuecomment-322597231",
      "id" : 322597231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10785",
      "updated_at" : "2017-08-15T21:38:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322597231",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
