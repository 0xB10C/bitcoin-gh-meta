[
   {
      "body" : "Note that https://github.com/bitcoin/bitcoin/pull/10697#issuecomment-311811754 applies here as well.",
      "created_at" : "2017-07-04T00:03:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-312751966",
      "id" : 312751966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10738",
      "updated_at" : "2017-07-04T00:03:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312751966",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Test failure looks unrelated and matches another one here: https://travis-ci.org/bitcoin/bitcoin/jobs/248773151. Kicking off a new build.",
      "created_at" : "2017-07-04T00:45:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-312755338",
      "id" : 312755338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10738",
      "updated_at" : "2017-07-04T00:45:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312755338",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Needs rebase.",
      "created_at" : "2017-08-23T10:22:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-324287323",
      "id" : 324287323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10738",
      "updated_at" : "2017-08-23T10:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324287323",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158109825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158109825"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand how make_strong/strong_ptr/decay_ptr provide any benefit in this example. Why wouldn't you just use regular shared pointers, and write this loop as `while (str.use_count() > 1)`?",
      "commit_id" : "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "created_at" : "2017-12-20T19:09:07Z",
      "diff_hunk" : "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158109825",
      "id" : 158109825,
      "original_commit_id" : "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_position" : 51,
      "path" : "src/strong_ptr.h",
      "position" : 51,
      "pull_request_review_id" : 84866659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738",
      "updated_at" : "2017-12-20T19:09:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158109825",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158149046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a weak_ptr can be created from a shared_ptr without bumping its refcount. That weak_ptr can ```lock()``` in a separate thread just after checking use_count() here. ```shared_ptr.unique()``` (```shared_ptr.use_count() == 1```) was deprecated in c++17 for that reason.\r\n\r\nOnce moved to a decay_ptr, ```decayed()``` is a trustworthy ```unique()```.",
      "commit_id" : "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "created_at" : "2017-12-20T22:07:55Z",
      "diff_hunk" : "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158149046",
      "id" : 158149046,
      "in_reply_to_id" : 158109825,
      "original_commit_id" : "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_position" : 51,
      "path" : "src/strong_ptr.h",
      "position" : 51,
      "pull_request_review_id" : 84912959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738",
      "updated_at" : "2017-12-20T22:07:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149046",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
