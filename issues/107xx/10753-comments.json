[
   {
      "body" : "Nice.\r\nConcept ACK.",
      "created_at" : "2017-07-06T13:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313396180",
      "id" : 313396180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-06T13:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313396180",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK. Will review later.",
      "created_at" : "2017-07-06T13:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313400354",
      "id" : 313400354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-06T13:45:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313400354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575"
         }
      },
      "body" : "Nit: Use `sys.exit(Ã¢ÂÂ¦)`",
      "commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "created_at" : "2017-07-06T14:43:12Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575",
      "id" : 125920575,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 60,
      "pull_request_review_id" : 48356732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-07-06T14:43:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464"
         }
      },
      "body" : "Why?",
      "commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "created_at" : "2017-07-06T14:46:14Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464",
      "id" : 125921464,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 60,
      "pull_request_review_id" : 48357727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-07-06T14:46:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027"
         }
      },
      "body" : "According to the Python documentation `exit(Ã¢ÂÂ¦)` should be used in the interactive interpreter shell but not in programs:\r\n> The site module (which is imported automatically during startup, except if the -S command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.\r\n\r\nLinks:\r\n* [`sys.exit(Ã¢ÂÂ¦)`](https://docs.python.org/3/library/sys.html#sys.exit): _\"Exit from Python.\"_\r\n* [`exit(Ã¢ÂÂ¦)`](https://docs.python.org/3/library/constants.html#exit): _\"raise SystemExit with the specified exit code. [Ã¢ÂÂ¦] should not be used in programs.\"_",
      "commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "created_at" : "2017-07-06T15:32:09Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027",
      "id" : 125935027,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 60,
      "pull_request_review_id" : 48373253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-07-06T15:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855"
         }
      },
      "body" : "Agree then! I never knew that. Assumed they were simply aliasses.",
      "commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "created_at" : "2017-07-06T17:54:56Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855",
      "id" : 125970855,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 60,
      "pull_request_review_id" : 48413506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-07-06T17:55:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
