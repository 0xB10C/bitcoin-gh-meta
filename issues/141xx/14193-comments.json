[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r216480494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216480494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `LOCK2(cs_main, ::mempool.cs);`",
      "commit_id" : "fa27735e0f1fd52f03a17d7e9b94a66f310ddfa1",
      "created_at" : "2018-09-10T21:34:05Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r216480494",
      "id" : 216480494,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ4MDQ5NA==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 153972481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-10-28T08:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216480494",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "AppVeyor builds fine, but no Travis checking for this PR. Travis integration broken?",
      "created_at" : "2018-09-10T21:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-420070299",
      "id" : 420070299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDA3MDI5OQ==",
      "updated_at" : "2018-09-10T21:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420070299",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#13864](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13864.html) (validation: Document where we are intentionally ignoring bool return values from validation related functions by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-09-10T23:50:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-420098592",
      "id" : 420098592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDA5ODU5Mg==",
      "updated_at" : "2018-11-09T18:55:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420098592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r217189574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217189574"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the reason for acquiring mempool lock at a broad scope instead of more narrowly where the mempool is actually accessed? Would be nice to have comments in the places where this PR adds locking to indicate purpose of locks and reasoning behind placement.",
      "commit_id" : "fa27735e0f1fd52f03a17d7e9b94a66f310ddfa1",
      "created_at" : "2018-09-12T21:07:33Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r217189574",
      "id" : 217189574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE4OTU3NA==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 154844614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-10-28T08:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217189574",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is the idea that you're trying to prevent RPC users from having an inconsistent state, like if they call getbestblockhash() and then call getrawmempool(), the latter should be consistent with the former?\r\n\r\nThat may be reasonable, but I think it'd be good to have some documentation (whether a project document or even a gist explaining our thinking) explaining the consistency guarantees for RPC calls with respect to the mempool, validation, and the wallet.  I feel like this kind of thing has come up before in a haphazard way and caused issues when we didn't think things through or missed an implication of a change.\r\n\r\n(Also, I think it would aid RPC users if they knew what our consistency guarantees were.)",
      "created_at" : "2018-09-14T14:26:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421375559",
      "id" : 421375559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTM3NTU1OQ==",
      "updated_at" : "2018-09-14T14:27:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421375559",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is the idea that you're trying to prevent RPC users from having an inconsistent state\r\n\r\nFrom the description, I assumed the intent of the PR was to prevent RPCs like `getmempoolentry`, which acquire `mempool.cs` but not `cs_main`, from returning garbage or segfaulting during reorgs because `UpdateMempoolForReorg` and `InvalidateBlock` functions were apparently not acquiring `mempool.cs` while updating the mempool.\r\n\r\nBut actually it seems like in all the places where the mempool is updated, the code already has both `cs_main` and `mempool.cs` locks. So it should be perfectly safe to read the mempool while holding either of the two locks, and trying to acquire both is wasteful.\r\n\r\nSo maybe this PR is not doing what it intended to do, and instead it would be better just to add comments and fix thread safety annotations somehow. Maybe it would be possible to annotate `cs_main` and `mempool.cs` individually as shared locks needed for reading mempool data, and `cs_main`+`mempool.cs` both together as an exclusive lock needed for updating mempool data?",
      "created_at" : "2018-09-14T17:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421429944",
      "id" : 421429944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTQyOTk0NA==",
      "updated_at" : "2018-09-14T17:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421429944",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky With inconsistent I don't mean invalid reads, but rather transactions that are invalid (and still in the process of removal) as of our current block tip.",
      "created_at" : "2018-09-14T17:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421435147",
      "id" : 421435147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTQzNTE0Nw==",
      "updated_at" : "2018-09-14T17:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421435147",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar, @ryanofsky: Added a test with comments to illustrate my motivation a bit more.",
      "created_at" : "2018-10-27T15:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-433628304",
      "id" : 433628304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMzYyODMwNA==",
      "updated_at" : "2018-10-27T15:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433628304",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233145184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233145184"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nCan you add a comment about what this is for? Do you actually need to hold the lock at the broad scope, or could it be acquired just before calling UpdateMempoolForReorg? Maybe:\r\n\r\n```c++\r\n// Mempool lock for UpdateMempool calls below. (Could be released between calls.)\r\nLOCK(::mempool.cs);\r\n```",
      "commit_id" : "fa27735e0f1fd52f03a17d7e9b94a66f310ddfa1",
      "created_at" : "2018-11-13T17:27:15Z",
      "diff_hunk" : "@@ -2794,6 +2795,7 @@ bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIn\n bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n     AssertLockHeld(cs_main);\n+    LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233145184",
      "id" : 233145184,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzE0NTE4NA==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 39,
      "path" : "src/validation.cpp",
      "position" : 39,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-13T21:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233145184",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233150812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233150812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nIt's not clear why the lock is being acquired here instead of before calling ActivateBestChainStep. It's fine to acquire locks at a broad scope, but it's scary to work with code that acquires locks in unexpected places and gives you no clue where or whether the locks are safe to move. Would suggest either moving the lock to where it is more obviously needed or commenting:\r\n\r\n```c++\r\n// Mempool lock for ActivateBestChainStep calls below. (Could be released between calls.)\r\nLOCK(::mempool.cs);\r\n```\r\n\r\nOr else explaining why it's held more broadly.",
      "commit_id" : "fa27735e0f1fd52f03a17d7e9b94a66f310ddfa1",
      "created_at" : "2018-11-13T17:40:11Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233150812",
      "id" : 233150812,
      "in_reply_to_id" : 217189574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzE1MDgxMg==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-13T21:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233150812",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233224490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233224490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nThis is hard to follow. Can you mention this change the commit description? It seems like there is no difference in behavior here except to avoid holding `g_best_block_mutex` while calling `mempool.GetTransactionsUpdated()`? Or am I misinterpreting the diff? If that is the change, it seems good to release the lock, but why is it important do to that now when it wasn't needed before?",
      "commit_id" : "fa27735e0f1fd52f03a17d7e9b94a66f310ddfa1",
      "created_at" : "2018-11-13T21:16:33Z",
      "diff_hunk" : "@@ -468,21 +468,29 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n-        // Release the wallet and main lock while waiting\n+        // Release lock while waiting",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233224490",
      "id" : 233224490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzIyNDQ5MA==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 5,
      "path" : "src/rpc/mining.cpp",
      "position" : 5,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-13T21:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233224490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
