[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r216480494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216480494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `LOCK2(cs_main, ::mempool.cs);`",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-09-10T21:34:05Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r216480494",
      "id" : 216480494,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ4MDQ5NA==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 153972481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216480494",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "AppVeyor builds fine, but no Travis checking for this PR. Travis integration broken?",
      "created_at" : "2018-09-10T21:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-420070299",
      "id" : 420070299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDA3MDI5OQ==",
      "updated_at" : "2018-09-10T21:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420070299",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#13864](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13864.html) (validation: Document where we are intentionally ignoring bool return values from validation related functions by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-09-10T23:50:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-420098592",
      "id" : 420098592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDA5ODU5Mg==",
      "updated_at" : "2018-11-09T18:55:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420098592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r217189574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217189574"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the reason for acquiring mempool lock at a broad scope instead of more narrowly where the mempool is actually accessed? Would be nice to have comments in the places where this PR adds locking to indicate purpose of locks and reasoning behind placement.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-09-12T21:07:33Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r217189574",
      "id" : 217189574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE4OTU3NA==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 154844614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217189574",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is the idea that you're trying to prevent RPC users from having an inconsistent state, like if they call getbestblockhash() and then call getrawmempool(), the latter should be consistent with the former?\r\n\r\nThat may be reasonable, but I think it'd be good to have some documentation (whether a project document or even a gist explaining our thinking) explaining the consistency guarantees for RPC calls with respect to the mempool, validation, and the wallet.  I feel like this kind of thing has come up before in a haphazard way and caused issues when we didn't think things through or missed an implication of a change.\r\n\r\n(Also, I think it would aid RPC users if they knew what our consistency guarantees were.)",
      "created_at" : "2018-09-14T14:26:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421375559",
      "id" : 421375559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTM3NTU1OQ==",
      "updated_at" : "2018-09-14T14:27:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421375559",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is the idea that you're trying to prevent RPC users from having an inconsistent state\r\n\r\nFrom the description, I assumed the intent of the PR was to prevent RPCs like `getmempoolentry`, which acquire `mempool.cs` but not `cs_main`, from returning garbage or segfaulting during reorgs because `UpdateMempoolForReorg` and `InvalidateBlock` functions were apparently not acquiring `mempool.cs` while updating the mempool.\r\n\r\nBut actually it seems like in all the places where the mempool is updated, the code already has both `cs_main` and `mempool.cs` locks. So it should be perfectly safe to read the mempool while holding either of the two locks, and trying to acquire both is wasteful.\r\n\r\nSo maybe this PR is not doing what it intended to do, and instead it would be better just to add comments and fix thread safety annotations somehow. Maybe it would be possible to annotate `cs_main` and `mempool.cs` individually as shared locks needed for reading mempool data, and `cs_main`+`mempool.cs` both together as an exclusive lock needed for updating mempool data?",
      "created_at" : "2018-09-14T17:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421429944",
      "id" : 421429944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTQyOTk0NA==",
      "updated_at" : "2018-09-14T17:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421429944",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky With inconsistent I don't mean invalid reads, but rather transactions that are invalid (and still in the process of removal) as of our current block tip.",
      "created_at" : "2018-09-14T17:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-421435147",
      "id" : 421435147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTQzNTE0Nw==",
      "updated_at" : "2018-09-14T17:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421435147",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar, @ryanofsky: Added a test with comments to illustrate my motivation a bit more.",
      "created_at" : "2018-10-27T15:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-433628304",
      "id" : 433628304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMzYyODMwNA==",
      "updated_at" : "2018-10-27T15:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433628304",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233145184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233145184"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nCan you add a comment about what this is for? Do you actually need to hold the lock at the broad scope, or could it be acquired just before calling UpdateMempoolForReorg? Maybe:\r\n\r\n```c++\r\n// Mempool lock for UpdateMempool calls below. (Could be released between calls.)\r\nLOCK(::mempool.cs);\r\n```",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-13T17:27:15Z",
      "diff_hunk" : "@@ -2794,6 +2795,7 @@ bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIn\n bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n     AssertLockHeld(cs_main);\n+    LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233145184",
      "id" : 233145184,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzE0NTE4NA==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 39,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233145184",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233150812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233150812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nIt's not clear why the lock is being acquired here instead of before calling ActivateBestChainStep. It's fine to acquire locks at a broad scope, but it's scary to work with code that acquires locks in unexpected places and gives you no clue where or whether the locks are safe to move. Would suggest either moving the lock to where it is more obviously needed or commenting:\r\n\r\n```c++\r\n// Mempool lock for ActivateBestChainStep calls below. (Could be released between calls.)\r\nLOCK(::mempool.cs);\r\n```\r\n\r\nOr else explaining why it's held more broadly.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-13T17:40:11Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233150812",
      "id" : 233150812,
      "in_reply_to_id" : 217189574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzE1MDgxMg==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233150812",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233224490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233224490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Add missing mempool locks\" (dea5dbf2d5ca0177d3a4be665790288bef40e27e)\r\n\r\nThis is hard to follow. Can you mention this change the commit description? It seems like there is no difference in behavior here except to avoid holding `g_best_block_mutex` while calling `mempool.GetTransactionsUpdated()`? Or am I misinterpreting the diff? If that is the change, it seems good to release the lock, but why is it important do to that now when it wasn't needed before?",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-13T21:16:33Z",
      "diff_hunk" : "@@ -468,21 +468,29 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n-        // Release the wallet and main lock while waiting\n+        // Release lock while waiting",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r233224490",
      "id" : 233224490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzIyNDQ5MA==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 5,
      "path" : "src/rpc/mining.cpp",
      "position" : 5,
      "pull_request_review_id" : 174491669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233224490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235229141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235229141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> It seems like there is no difference in behavior here except to avoid holding g_best_block_mutex while calling mempool.GetTransactionsUpdated()?\r\n\r\nThat is indeed the motivation and required to avoid a deadlock. (You should be able to see the deadlock stack by reverting this hunk and running the functional test suite)",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-21T01:41:04Z",
      "diff_hunk" : "@@ -468,21 +468,29 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n-        // Release the wallet and main lock while waiting\n+        // Release lock while waiting",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235229141",
      "id" : 235229141,
      "in_reply_to_id" : 233224490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTIyOTE0MQ==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 5,
      "path" : "src/rpc/mining.cpp",
      "position" : 5,
      "pull_request_review_id" : 177047493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235229141",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235230718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235230718"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is held just as long as cs_main, because anything shorter would allow other threads (potentially rpc threads) to read from the mempool and get a result that is most likely useless in case we are in the middle of a larger reorg.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-21T01:53:19Z",
      "diff_hunk" : "@@ -2686,6 +2686,7 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n         {\n             LOCK(cs_main);\n+            LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235230718",
      "id" : 235230718,
      "in_reply_to_id" : 217189574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTIzMDcxOA==",
      "original_commit_id" : "fa3e0471a81252e333886b97d8d33bb275061d42",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 177049504,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235230718",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235230815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235230815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, and the wallet lock was removed a long time ago, but the comment was never updated.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-21T01:53:57Z",
      "diff_hunk" : "@@ -468,21 +468,29 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n-        // Release the wallet and main lock while waiting\n+        // Release lock while waiting",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235230815",
      "id" : 235230815,
      "in_reply_to_id" : 233224490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTIzMDgxNQ==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 5,
      "path" : "src/rpc/mining.cpp",
      "position" : 5,
      "pull_request_review_id" : 177049619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235230815",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235233233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235233233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Calling it right before UpdateMempoolForReorg is too fragile and exactly the issue I want to avoid. (E.g. we `DisconnetTip` and then fail to call `UpdateMempoolForReorg`, because another thread acquired the lock)\r\n\r\nAt the very least the mempool lock should be held as long as disconnectpool sits on the stack.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-21T02:11:20Z",
      "diff_hunk" : "@@ -2794,6 +2795,7 @@ bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIn\n bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n     AssertLockHeld(cs_main);\n+    LOCK(::mempool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r235233233",
      "id" : 235233233,
      "in_reply_to_id" : 233145184,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTIzMzIzMw==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 39,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 177052609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235233233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The test is trivial, but looks scary because of the boilerplate overhead of the cpp unit tests. Pretty much the only thing it is doing is to check that during a reorg a (simulated) rpc thread (e.g. getrawmempool) would either return a consistent mempool as of before the reorg or a consistent mempool as of after the reorg and never something inconsistent in the middle of a reorg.",
      "created_at" : "2018-11-21T02:19:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-440504118",
      "id" : 440504118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDUwNDExOA==",
      "updated_at" : "2018-11-21T02:19:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440504118",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit with further comments and documentation.",
      "created_at" : "2018-11-28T19:15:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-442569470",
      "id" : 442569470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MjU2OTQ3MA==",
      "updated_at" : "2018-11-28T19:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442569470",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237252285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237252285"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This hunk as-is seems a little overcomplicated to me too if all we want to do is release `g_best_block_mutex` for the mempool operation. This patch (atop `master`) should do:\r\n```patch\r\ndiff --git a/src/rpc/mining.cpp b/src/rpc/mining.cpp\r\nindex c0287ec17..b7f324a97 100644\r\n--- a/src/rpc/mining.cpp\r\n+++ b/src/rpc/mining.cpp\r\n@@ -514,9 +514,14 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\r\n             {\r\n                 if (g_best_block_cv.wait_until(lock, checktxtime) == std::cv_status::timeout)\r\n                 {\r\n-                    // Timeout: Check transactions for update\r\n+                    // Drop the best block mutex while accessing the mempool to avoid deadlock with\r\n+                    // ::mempool.cs.\r\n+                    LEAVE_CRITICAL_SECTION(lock);\r\n+                    // Break if we've seen new transactions after the timeout has elapsed.\r\n                     if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLastLP)\r\n                         break;\r\n+                    ENTER_CRITICAL_SECTION(lock);\r\n+\r\n                     checktxtime += std::chrono::seconds(10);\r\n                 }\r\n             }\r\n```\r\n\r\nEdit: ah wait, this isn't exactly the same behavior since it'd be `LOCK`ish and not `WAIT_LOCK`ish... back to the drawing board.\r\nEdit 2: on second inspection, this *should* work since `ENTER_CRITICAL_SECTION` blocks in the same way `WAIT_LOCK` does.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-28T20:41:44Z",
      "diff_hunk" : "@@ -468,21 +468,29 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n-        // Release the wallet and main lock while waiting\n+        // Release lock while waiting",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237252285",
      "id" : 237252285,
      "in_reply_to_id" : 233224490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzI1MjI4NQ==",
      "original_commit_id" : "dea5dbf2d5ca0177d3a4be665790288bef40e27e",
      "original_position" : 5,
      "path" : "src/rpc/mining.cpp",
      "position" : 5,
      "pull_request_review_id" : 179506604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237252285",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237546802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237546802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here's a diff with some added doc and cosmetics:\r\n```patch\r\ndiff --git a/src/test/validation_block_tests.cpp b/src/test/validation_block_tests.cpp\r\nindex 8c285c7e5..f23e299b1 100644\r\n--- a/src/test/validation_block_tests.cpp\r\n+++ b/src/test/validation_block_tests.cpp\r\n@@ -197,14 +197,29 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\r\n     BOOST_CHECK_EQUAL(sub.m_expected_tip, chainActive.Tip()->GetBlockHash());\r\n }\r\n \r\n+/**\r\n+ * Test that mempool updates happen atomically with reorgs.\r\n+ *\r\n+ * This prevents RPC clients, among others, from retrieving immediately-out-of-date mempool data\r\n+ * during large reorgs.\r\n+ *\r\n+ * The test verifies this by creating a chain of `num_txs` blocks, matures their coinbases, and then\r\n+ * submits txns spending from their coinbase to the mempool. A fork chain is then processed,\r\n+ * invalidating the txns and evicting them from the mempool.\r\n+ *\r\n+ * We verify that the mempool updates atomically by polling it continuously from another thread\r\n+ * during the reorg and checking that its size only changes once.\r\n+ */\r\n BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\r\n {\r\n     auto last_mined = GoodBlock(Params().GenesisBlock().GetHash());\r\n-\r\n     bool ignored;\r\n+    auto ProcessBlock = [&ignored](std::shared_ptr<const CBlock> block) -> bool  {\r\n+        return ProcessNewBlock(Params(), block, /* fForceProcessing */ true, /* fNewBlock */ &ignored);\r\n+    };\r\n     // Process all mined blocks\r\n-    BOOST_REQUIRE(ProcessNewBlock(Params(), std::make_shared<CBlock>(Params().GenesisBlock()), /* fForceProcessing */ true, /* fNewBlock */ &ignored));\r\n-    BOOST_REQUIRE(ProcessNewBlock(Params(), last_mined, /* fForceProcessing */ true, /* fNewBlock */ &ignored));\r\n+    BOOST_REQUIRE(ProcessBlock(std::make_shared<CBlock>(Params().GenesisBlock())));\r\n+    BOOST_REQUIRE(ProcessBlock(last_mined));\r\n \r\n     // Run the test multiple times\r\n     for (int test_runs = 3; !!test_runs; --test_runs) {\r\n@@ -225,13 +240,13 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\r\n             txs.push_back(MakeTransactionRef(mtx));\r\n \r\n             last_mined = GoodBlock(last_mined->GetHash());\r\n-            BOOST_REQUIRE(ProcessNewBlock(Params(), last_mined, /* fForceProcessing */ true, /* fNewBlock */ &ignored));\r\n+            BOOST_REQUIRE(ProcessBlock(last_mined));\r\n         }\r\n \r\n         // Mature the inputs of the txs\r\n         for (int j = COINBASE_MATURITY; !!j; --j) {\r\n             last_mined = GoodBlock(last_mined->GetHash());\r\n-            BOOST_REQUIRE(ProcessNewBlock(Params(), last_mined, /* fForceProcessing */ true, /* fNewBlock */ &ignored));\r\n+            BOOST_REQUIRE(ProcessBlock(last_mined));\r\n         }\r\n \r\n         // Add the txs to the tx pool\r\n@@ -282,10 +297,10 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\r\n \r\n         // Mine a reorg in this thread to invalidate and remove the txs from the tx pool\r\n         last_mined = GoodBlock(split_hash);\r\n-        ProcessNewBlock(Params(), last_mined, /* fForceProcessing */ true, /* fNewBlock */ &ignored);\r\n+        ProcessBlock(last_mined);\r\n         for (size_t j = COINBASE_MATURITY + txs.size() + 1; j; --j) {\r\n             last_mined = GoodBlock(last_mined->GetHash());\r\n-            ProcessNewBlock(Params(), last_mined, /* fForceProcessing */ true, /* fNewBlock */ &ignored);\r\n+            ProcessBlock(last_mined);\r\n         }\r\n         // Check that the reorg was eventually successful\r\n         BOOST_CHECK_EQUAL(last_mined->GetHash(), ::chainActive.Tip()->GetBlockHash());\r\n```",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-29T15:58:25Z",
      "diff_hunk" : "@@ -181,4 +197,101 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n     BOOST_CHECK_EQUAL(sub.m_expected_tip, chainActive.Tip()->GetBlockHash());\n }\n \n+BOOST_AUTO_TEST_CASE(mempool_locks_reorg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237546802",
      "id" : 237546802,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzU0NjgwMg==",
      "original_commit_id" : "fad0712c6e12ccf2a823602c953ccd1af635edbc",
      "original_position" : 61,
      "path" : "src/test/validation_block_tests.cpp",
      "position" : 74,
      "pull_request_review_id" : 179871886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T18:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237546802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> add comments for new lock acquisitions explaining why we're grabbing a seemingly unrelated lock at a coarse grain (in line with what @ryanofsky is saying).\r\n\r\nI think I already did that. Let me know if any of them are still unclear.",
      "created_at" : "2018-11-29T20:17:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#issuecomment-442978333",
      "id" : 442978333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14193",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mjk3ODMzMw==",
      "updated_at" : "2018-11-29T20:17:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442978333",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237989280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237989280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be clearer to just add `LOCK(cs);` to the top of [the function definition](https://github.com/jamesob/bitcoin/blob/81bd349c9c8dd247d32ece1adcc6db1254ef8971/src/txmempool.cpp#L885-L886) instead of this annotation since there's a recursive lock acquisition in `CTxMempool::exists` anyway?",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-30T20:14:01Z",
      "diff_hunk" : "@@ -559,7 +559,7 @@ class CTxMemPool\n      * Check that none of this transactions inputs are in the mempool, and thus\n      * the tx is not dependent on other mempool transactions to be included in a block.\n      */\n-    bool HasNoInputsOf(const CTransaction& tx) const;\n+    bool HasNoInputsOf(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237989280",
      "id" : 237989280,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzk4OTI4MA==",
      "original_commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 180431962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T20:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237989280",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237990805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237990805"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We require the `pool.cs` lock for the duration of this function (instead of just relying on the lock in `pool.Expire`) because we want to keep the mempool from changing while `pcoinsTip` modifications happen, correct?",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-30T20:19:28Z",
      "diff_hunk" : "@@ -436,7 +436,7 @@ bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flag\n // Returns the script flags which should be checked for a given block\n static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& chainparams);\n \n-static void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) {\n+static void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) EXCLUSIVE_LOCKS_REQUIRED(pool.cs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r237990805",
      "id" : 237990805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzk5MDgwNQ==",
      "original_commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : 14,
      "pull_request_review_id" : 180431962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T20:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237990805",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r238000878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238000878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Imo it is clearer to let the caller figure out how long the lock is required to be held. Imagine this is called in a loop, the you, most likely, wouldn't want to release the lock in between each iteration? Also, it happens that all callers already have the lock taken, since this annotation can be added without any other changes.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-30T21:01:02Z",
      "diff_hunk" : "@@ -559,7 +559,7 @@ class CTxMemPool\n      * Check that none of this transactions inputs are in the mempool, and thus\n      * the tx is not dependent on other mempool transactions to be included in a block.\n      */\n-    bool HasNoInputsOf(const CTransaction& tx) const;\n+    bool HasNoInputsOf(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r238000878",
      "id" : 238000878,
      "in_reply_to_id" : 237989280,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAwMDg3OA==",
      "original_commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 180447452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T21:01:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238000878",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r238001324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238001324"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, calling `LimitMempoolSize` only makes sense after you have written to the mempool, in which case you already have acquired the lock and can keep it for `LimitMempoolSize`.",
      "commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "created_at" : "2018-11-30T21:02:57Z",
      "diff_hunk" : "@@ -436,7 +436,7 @@ bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flag\n // Returns the script flags which should be checked for a given block\n static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& chainparams);\n \n-static void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) {\n+static void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) EXCLUSIVE_LOCKS_REQUIRED(pool.cs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14193#discussion_r238001324",
      "id" : 238001324,
      "in_reply_to_id" : 237990805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAwMTMyNA==",
      "original_commit_id" : "fae71ffc99b04bbcb96f4e2b6fa25ed2fe258912",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : 14,
      "pull_request_review_id" : 180448049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14193",
      "updated_at" : "2018-11-30T21:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238001324",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
