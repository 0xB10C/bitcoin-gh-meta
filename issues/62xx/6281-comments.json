[
   {
      "body" : "Iterating though the entire mempool whenever the limit size is exceeded seems inefficient, especially with larger mempools. I would either keep an index ordered by priority/whatever, or use random deletes instead.\r\n\r\nAlso, needs a hook for the wallet to mark its own transactions as \"precious\", or the conflict detection mechanism will break.",
      "created_at" : "2015-06-14T13:11:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111825309",
      "id" : 111825309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T13:11:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111825309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Also, priority seems to be the wrong metric, as most of the mempool sorting is done by fee/byte rather than by priority.",
      "created_at" : "2015-06-14T13:13:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111825386",
      "id" : 111825386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T13:13:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111825386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "You should not remove any transactions that have dependencies before first removing their dependent transactions.\r\n\r\nAlso how about preserving nBlockPrioritySize worth of the highest priority transactions, and then pruning the rest based on fees.",
      "created_at" : "2015-06-14T14:06:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111828867",
      "id" : 111828867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T14:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111828867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "Actually, ignore what I said about dependents because I see that the remove() call will remove all of the dependent transactions, which seems like the right thing to do.",
      "created_at" : "2015-06-14T14:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111831328",
      "id" : 111831328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T14:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111831328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "I was playing with recursively splitting utxos recently, and managed to fill my two testnet nodes mempools to 300mb (>110k tx's) over half an hour. One node was used for broadcasting, the other for informational purposes. Both gave similar results throughout, so I suspect many nodes accumulated the same. https://www.blocktrail.com/tBTC/address/mvoh3Jwirz6YLdSdpp1558uHWdJ9Qpijjg \r\n\r\nSince all of these transactions were dependent on a single UTXO, perhaps nodes could limit the number of dependant transactions in the memory pool. As @ashleyholman noted, tracking hierarchy is probably a good idea, since after pruning an unconfirmed transaction with 100k unconfirmed child transactions, further spammy spends would no longer be added to the mempool as the inputs would be missing. \r\n\r\nI'm less clear on how this would affect the relay policy however - not relaying child-of-pruned transactions means the spammer (or legitimate user) would need to find other peers. \r\n\r\nEDIT: Also, if the presence of a transaction in the mempool *is* a requirement to relay other, dependent unconfirmed transactions, you could exhaust the networks mempool as a whole by giving it a fixed size. \r\n\r\nI managed to produce 1/4 of your proposed limit in an hour or two. I had a 4000 tBTC output to play with, which should have given me millions of transactions, but I cut it off. I can probably determine the minimum sized output needed to produce your limit.. will try this now. ",
      "created_at" : "2015-06-14T18:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111863662",
      "id" : 111863662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T19:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111863662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5617245?v=3",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "body" : "@sipa The entire priority calculation setup seems like it could use being cleaned up.\r\n\r\nIt would be a shame to write a bunch of complicated specific code here instead of figuring out someway to incorporate existing priority calculation code.",
      "created_at" : "2015-06-14T19:45:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111869955",
      "id" : 111869955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-14T19:45:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111869955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@pstratem I just had some further thoughts about this.. hope you don't mind my 2c\r\n\r\nIn general I think it would make sense to align the policy of choosing transactions to pack into a block (in CreateNewBlock) and the policy for mempool retention.  The only difference would be nBlockMaxSize vs nMaxMempoolSize.\r\n\r\nSo how about splitting out the transaction selection code from CreateNewBlock into a policy class, and then re-using this for mempool pruning?  It would be like constructing an nMaxMempoolSize block, and throwing out any transactions that weren't included.",
      "created_at" : "2015-06-15T02:41:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111905384",
      "id" : 111905384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T02:41:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111905384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "@ashleyholman I'm going to take a look at the various places that policy is applied and figure out how to work from there.\r\n\r\nSo far I see\r\n\r\nTransaction select for CreateNewblock\r\nRelay policy\r\n\r\nAm I missing anything?",
      "created_at" : "2015-06-15T03:41:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111911448",
      "id" : 111911448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T03:41:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111911448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Sounds good!  Let me know if you want any assistance with writing code or testing, because I'm quite interested in this patch so am happy to get involved :)\r\n\r\nIf you're implementing this as a full sweep of the mempool (like the CreateNewBlock code does), maybe it should run less often than every time a tx comes in.  You could have two limits, 1 for the threshold (size at which to trigger the cleanup) and another for the size to prune down to.",
      "created_at" : "2015-06-15T05:31:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-111929903",
      "id" : 111929903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T05:31:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111929903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "@pstratem Thanks for getting started on this.  I'd been putting off working on it because it wasn't clear to me that there was agreement on how to boot things from the mempool.  In my mind though, you would keep all the transactions in a sorted list (or up to 3 lists, one by priority, one by fee, one for wallet transactions) and that same sorting would be used in 3 places.  For booting things at the end to limit mempool size, for creating new blocks, and for improvements to fee estimation.   The sorted list is a requirement to really improve the fee estimation over where it is now with just some historical analysis.\r\n\r\nAs for the priority calculation code, it does appear in a couple of places, but I fixed the one instance where it was calculating it differently.  They all result in the same calculation now.",
      "created_at" : "2015-06-15T14:09:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112082440",
      "id" : 112082440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T14:09:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112082440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "Started working on a rebases version of #3753  https://github.com/jonasschnelli/bitcoin/commits/2015/06/mempool-janitor with focus on protecting wallet relevant transaction.\r\nRemoved the thread and try to check during `CTxMemPool::addUnchecked()` but only if a certain amount of time has passed (24h by default).\r\nWill focus now on a hierarchical check for wtx (don't remove wtx dependent tx).",
      "created_at" : "2015-06-15T14:21:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112087492",
      "id" : 112087492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T14:21:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112087492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli It seems like it would be more efficient to simply add a whitelisting flag to CTxMemPoolEntry which is passed as part of addUnchecked",
      "created_at" : "2015-06-15T19:34:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112182405",
      "id" : 112182405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T19:34:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112182405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@morcos Unfortunately that was the same conclusion that I came to.\r\n\r\nIf I can get everybody to agree on some algorithm for calculating a single priority number which takes into account dPriority, nFee, and IsMine/IsFromMe then the code here (and potentially in CreateNewBlock) becomes much simpler.",
      "created_at" : "2015-06-15T19:49:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112186793",
      "id" : 112186793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T19:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112186793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "actually it's probably a lot easier to keep dPriority in its own queue, because that queue is a pain to maintain as all the transactions in it are updating their priority every block.\r\n\r\nalso having CPFP implemented will make this work a lot better if we can make it efficient\r\n\r\n",
      "created_at" : "2015-06-15T19:56:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112188766",
      "id" : 112188766,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T19:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112188766",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "When I've contemplated updating this code in the past I've thought that storing mempool entries using a Boost multi-index container (with indexes on fee-per-kb, priority, and time inserted) would be the right thing to do. See http://www.boost.org/doc/libs/1_58_0/libs/multi_index/doc/index.html\r\n\r\nThe goal would be to do all the sorting as transactions enter the mempool, so CreateNewBlock doesn't have to do any sorting and is very fast. As morcos says, though, handling priority is tricky because priority changes over time, although I bet some clever thinking could come up with a way to represent priorities that takes advantage of the fact that priorities only get better over time, they never get worse.\r\n",
      "created_at" : "2015-06-15T20:07:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112191902",
      "id" : 112191902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T20:07:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112191902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "@gavinandresen The goal is simplicity...",
      "created_at" : "2015-06-15T20:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112196023",
      "id" : 112196023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T20:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112196023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "I must agree actually that boost::multiindex is pretty elegant and efficient, for this purpose.",
      "created_at" : "2015-06-15T20:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112198793",
      "id" : 112198793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T20:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112198793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@jonasschnelli  @morcos \r\n\r\nOn further consideration... protecting wallet transactions from eviction is an information leak.",
      "created_at" : "2015-06-15T20:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112199200",
      "id" : 112199200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T20:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112199200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@pstratem That's indeed a consideration. The alternative is to do all tracking inside the wallet for conflicts, but that is less strong (it cannot detect conflicts that are caused by an indirect out-of-wallet dependency that conflicts). In the long term, I think there is no way around that though - the dependency of the wallet is ugly, inefficient, and incompatible with SPV (and my idea, IIRC...).",
      "created_at" : "2015-06-15T20:33:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6281#issuecomment-112200214",
      "id" : 112200214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6281",
      "updated_at" : "2015-06-15T20:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112200214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
