[
   {
      "body" : "Created https://github.com/NicolasDorier/bitcoin/commit/b13f47535cc24304176dfb9cd3f12511cf095055 to demonstrate a way to CNB perf issue without changing consensus code of CSV. It does not compile yet, but explain the idea.\r\n\r\nHowever, I'm surprised that there is a way where finality is violated, because reorg actually check the locktime already : https://github.com/NicolasDorier/bitcoin/commit/b13f47535cc24304176dfb9cd3f12511cf095055#diff-ca74c4b28865382863b8fe7633a85cd6L507",
      "created_at" : "2015-12-06T06:03:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162275985",
      "id" : 162275985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-06T06:03:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162275985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "I've coded up an alternate idea (as @morcos mentioned in #6312) for making `removeForReorg` fast, which in turn also makes `CreateNewBlock` fast, even right after a reorg.  This approach is to cache the prevHeights for all inputs that are using a sequence lock, and whenever we have a reorg that disconnects a block that is older than the maximum height of a previous height, we redo the prevHeights calculation.  Otherwise we call `CheckLockTime` and instruct it to use the cached values of prevHeights.\r\n\r\nTo optimize this so that we don't needlessly recalculate prevHeights, I modified `LockTime` so that it will indicate to the caller which inputs are sequence-locked.  Only when a sequence-locked input height is above the height of a block disconnected in a reorg do we recalculate all the prevHeights.\r\n\r\nCode is here:\r\nhttps://github.com/maaku/bitcoin/compare/sequencenumbers...sdaftuar:6312-modifications\r\n\r\nI haven't tested it yet, I plan to do so as part of my testing of #6312.\r\n\r\n",
      "created_at" : "2015-12-07T20:37:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162653692",
      "id" : 162653692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-07T20:37:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162653692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "OK I have two approaches now\r\n\r\nThe first approach mentioned in #6312 is to make the minimal changes to the existing code that has some review necessary to extract information necessary to efficiently maintain mempool consistency during a reorg.\r\nhttps://github.com/maaku/bitcoin/compare/sequencenumbers...morcos:refactorb\r\n\r\nThe second approach is change the implementation BIP 68 to instead add another function `SequenceLocks` and use that in addition to `IsFinalTx` rather than attempting to combine them both into one function.  That approach is seen in #7184.  \r\nCreateNewBlock is untouched and remains fast in #7184, but reorgs require recalculating all sequence locks.  This can easily be changed by applying the additional commits from the refactorb branch above.\r\n\r\n",
      "created_at" : "2015-12-07T21:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162662123",
      "id" : 162662123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-07T21:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162662123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "Can someone explain me why the mempool finality can become inconsistent since CheckLockTime is called in removeForReorg ? Also, what is the downside of my approach ? it seems way easier to just check locktime invalidation in CNB.",
      "created_at" : "2015-12-08T03:10:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162746161",
      "id" : 162746161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-08T03:10:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162746161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier After MTP locks in, it won't be possible for the mempool to contain inconsistent txs.  None of my branches do anything in CNB.  But calling CheckLockTime (or CheckSequenceLocks) on the whole mempool during a reorg without caching either the vector like @sdaftuar does or the lock heights like I do is incredibly expensive and blows out your cache.\r\n\r\nChecking locktime in CNB is a pretty good approach, but we'll have forever limited ourselves from optimizing it if we don't get the information we'd need from the calculation of the sequence locks initially.  In the worse case you might have to recalculate every single sequence lock in CNB after a reorg.  The way its constructed in your branch you only need to do it for the first block worth of txs, but that puts a constraint on the types of block assembly algorithms you might use in CNB.\r\n\r\n",
      "created_at" : "2015-12-08T03:31:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162748750",
      "id" : 162748750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-08T03:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162748750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "Understood, I'm not convinced that the complexity added is worth the performance hit. A reorg is a rare occurence.\r\n\r\n@sdaftuar,  your condition for reusing cached height is wrong. There is possibility that this returns false, but still need a refresh.\r\nI think there is a simpler thing to do : Storing only the block hash of the youngest input in the mempool. If this block hash is still in the main chain during reorg, then no need to CheckSequenceLock for the entry. I'll try to do something along these lines by following your example.",
      "created_at" : "2015-12-08T04:16:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7176#issuecomment-162755784",
      "id" : 162755784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7176",
      "updated_at" : "2015-12-08T04:17:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162755784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   }
]
