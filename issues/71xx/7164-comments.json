[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46555484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46555484"
         }
      },
      "body" : "No need to check IsInitialBlockDownload() every iteration of the while loop.\r\n",
      "commit_id" : "3fb49df4da545354ccb2fd2b0fa88f8e5b3b23d7",
      "created_at" : "2015-12-03T14:18:43Z",
      "diff_hunk" : "@@ -5653,7 +5653,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow && !IsInitialBlockDownload())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46555484",
      "id" : 46555484,
      "original_commit_id" : "bdfdce1f2a92e4018d13a9646d0b672a860e6591",
      "original_position" : 14,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164",
      "updated_at" : "2015-12-04T01:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46555484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Despite not liking how more and more depends on IsInitialBlockDownload(), I think this makes sense. Downloading transactions during initial sync just gets a long list of \"Rejected: Non-final\" and wastes bandwidth and verification overhead.\r\n",
      "created_at" : "2015-12-03T14:50:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161661818",
      "id" : 161661818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T15:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161661818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46559844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46559844"
         }
      },
      "body" : "made the change and pushed.\n\nOn 03/12/2015 6:19 AM, Wladimir J. van der Laan wrote:\n>\n> In src/main.cpp\n> <https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46555484>:\n>\n> > @@ -5653,7 +5653,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n> >          //\n> >          // Message: getdata (non-blocks)\n> >          //\n> > -        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n> > +        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow && !IsInitialBlockDownload())\n>\n> No need to check IsInitialBlockDownload() every iteration of the while\n> loop.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164/files#r46555484>.\n>\n\n",
      "commit_id" : "3fb49df4da545354ccb2fd2b0fa88f8e5b3b23d7",
      "created_at" : "2015-12-03T14:51:49Z",
      "diff_hunk" : "@@ -5653,7 +5653,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        while (!pto->fDisconnect && !pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow && !IsInitialBlockDownload())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46559844",
      "id" : 46559844,
      "original_commit_id" : "bdfdce1f2a92e4018d13a9646d0b672a860e6591",
      "original_position" : 14,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164",
      "updated_at" : "2015-12-04T01:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46559844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-12-03T15:10:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161669800",
      "id" : 161669800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T15:10:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161669800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2015-12-03T17:10:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161718924",
      "id" : 161718924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T17:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161718924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "conceptACK/utACK",
      "created_at" : "2015-12-03T20:13:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161769866",
      "id" : 161769866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T20:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161769866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "acutally please don't merge this yet, there is a problem with the\nregression tests, i think something to do with mocktime...it appears\nthat the tests always think that we are syncing the blockchain...i'm\ninvestigating\n\nOn 03/12/2015 12:14 PM, Daniel Cousens wrote:\n>\n> ACK\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161769866>.\n>\n\n",
      "created_at" : "2015-12-03T20:33:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161774440",
      "id" : 161774440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T20:33:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161774440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Travis is happy now...during running the regression tests, the block\ntimestamps in the cache were too old and so the memory pools would not\nsync thinking that an initial block download was happening.  The last\nblock needs to be within the last 24 hours.   But, I think I need to add\none more thing, if the cache folder is more than 1 day old it needs to\nautomatically be rebuilt otherwise the regression tests will fail again.\n\nin util.py:\n\n       -block_time = 1388534400\n       +block_time = int(round(time.time() - (200 * 10 * 60) ))\n\n\n\nOn 03/12/2015 12:14 PM, Daniel Cousens wrote:\n>\n> ACK\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161769866>.\n>\n\n",
      "created_at" : "2015-12-03T23:10:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161818468",
      "id" : 161818468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-03T23:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161818468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46629519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46629519"
         }
      },
      "body" : "Nit: \", starting 2000 minutes in the past\"?",
      "commit_id" : "3fb49df4da545354ccb2fd2b0fa88f8e5b3b23d7",
      "created_at" : "2015-12-03T23:34:13Z",
      "diff_hunk" : "@@ -154,9 +154,9 @@ def initialize_chain(test_dir):\n \n         # Create a 200-block-long chain; each of the 4 nodes\n         # gets 25 mature blocks and 25 immature.\n-        # blocks are created with timestamps 10 minutes apart, starting\n-        # at 1 Jan 2014\n-        block_time = 1388534400\n+        # blocks are created with timestamps 10 minutes apart\n+        # going backwards in time from now",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46629519",
      "id" : 46629519,
      "original_commit_id" : "3c1546242b4ad7086ecc583ee5fef8cbfbde4c98",
      "original_position" : 8,
      "path" : "qa/rpc-tests/test_framework/util.py",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164",
      "updated_at" : "2015-12-04T01:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46629519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46636417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46636417"
         }
      },
      "body" : "sure, that sounds better\n\n(and it's 2000 minutes in the past).\n\nI'll push it up with the changes for updating the cache every 24hours.\n\n\nOn 03/12/2015 3:34 PM, MarcoFalke wrote:\n>\n> In qa/rpc-tests/test_framework/util.py\n> <https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46629519>:\n>\n> > @@ -154,9 +154,9 @@ def initialize_chain(test_dir):\n> >  \n> >          # Create a 200-block-long chain; each of the 4 nodes\n> >          # gets 25 mature blocks and 25 immature.\n> > -        # blocks are created with timestamps 10 minutes apart, starting\n> > -        # at 1 Jan 2014\n> > -        block_time = 1388534400\n> > +        # blocks are created with timestamps 10 minutes apart\n> > +        # going backwards in time from now\n>\n> Nit: \", starting 200 minutes in the past\"?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164/files#r46629519>.\n>\n\n",
      "commit_id" : "3fb49df4da545354ccb2fd2b0fa88f8e5b3b23d7",
      "created_at" : "2015-12-04T00:57:35Z",
      "diff_hunk" : "@@ -154,9 +154,9 @@ def initialize_chain(test_dir):\n \n         # Create a 200-block-long chain; each of the 4 nodes\n         # gets 25 mature blocks and 25 immature.\n-        # blocks are created with timestamps 10 minutes apart, starting\n-        # at 1 Jan 2014\n-        block_time = 1388534400\n+        # blocks are created with timestamps 10 minutes apart\n+        # going backwards in time from now",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46636417",
      "id" : 46636417,
      "original_commit_id" : "3c1546242b4ad7086ecc583ee5fef8cbfbde4c98",
      "original_position" : 8,
      "path" : "qa/rpc-tests/test_framework/util.py",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164",
      "updated_at" : "2015-12-04T01:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46636417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46640247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46640247"
         }
      },
      "body" : "Ok that should do it,\n\npushed and travis is good\n\nhave a look when you can.\n\n On 03/12/2015 3:34 PM, MarcoFalke wrote:\n>\n> In qa/rpc-tests/test_framework/util.py\n> <https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46629519>:\n>\n> > @@ -154,9 +154,9 @@ def initialize_chain(test_dir):\n> >  \n> >          # Create a 200-block-long chain; each of the 4 nodes\n> >          # gets 25 mature blocks and 25 immature.\n> > -        # blocks are created with timestamps 10 minutes apart, starting\n> > -        # at 1 Jan 2014\n> > -        block_time = 1388534400\n> > +        # blocks are created with timestamps 10 minutes apart\n> > +        # going backwards in time from now\n>\n> Nit: \", starting 200 minutes in the past\"?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164/files#r46629519>.\n>\n\n",
      "commit_id" : "3fb49df4da545354ccb2fd2b0fa88f8e5b3b23d7",
      "created_at" : "2015-12-04T01:52:10Z",
      "diff_hunk" : "@@ -154,9 +154,9 @@ def initialize_chain(test_dir):\n \n         # Create a 200-block-long chain; each of the 4 nodes\n         # gets 25 mature blocks and 25 immature.\n-        # blocks are created with timestamps 10 minutes apart, starting\n-        # at 1 Jan 2014\n-        block_time = 1388534400\n+        # blocks are created with timestamps 10 minutes apart\n+        # going backwards in time from now",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#discussion_r46640247",
      "id" : 46640247,
      "original_commit_id" : "3c1546242b4ad7086ecc583ee5fef8cbfbde4c98",
      "original_position" : 8,
      "path" : "qa/rpc-tests/test_framework/util.py",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7164",
      "updated_at" : "2015-12-04T01:52:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46640247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@MarcoFalke Fixed that nit.  Also added refreshing the cache every twelve hours which will prevent any very very long running regression tests from going over the 24hr limit for the age of the cache and subsequently preventing the mempools from syncing.",
      "created_at" : "2015-12-04T06:13:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161886690",
      "id" : 161886690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-04T06:13:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161886690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Ugh that \"maximum 24 hours\" check has tripped us up multiple times. \r\n\r\nAnother option to avoid the cache invalid issue would be to change `nMaxTipAge` to `0x7fffffff`, as it is also for regtest, as it is for testnet (see  #5987)\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp#L172\r\n\r\nI'd prefer that myself to having to expire the cache every 12 hours just to avoid this check. Although there's something to be said for testing `IsInitialBlockDownload` itself as well... so not sure\r\n\r\nYet another option would be to set a mock time, but this isn't easy to do consistently.\r\n",
      "created_at" : "2015-12-04T08:02:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-161903846",
      "id" : 161903846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-04T08:35:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161903846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Changing nmaxtipage certainly is an easy fix but I never like the idea of changing the behaviour of an app before regression testing, it sometimes bites down the road. I used mocktime instead but then had issues with nodehandling because GetTime() doesn't increment properly once you set mocktime.  Made some edits there to make GetTime() increment correctly if mocktime is set. \r\n\r\nAlso needed a small edit to p2pfullblocktest to set the time base to MOCKTIME.\r\n\r\nPushed and travis is happy...\r\n\r\n\r\n",
      "created_at" : "2015-12-04T20:48:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162078187",
      "id" : 162078187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-04T20:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162078187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "re-utACK",
      "created_at" : "2015-12-04T22:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162098963",
      "id" : 162098963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-04T22:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162098963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Oops there is one last thing, there are a few of extended tests that might need the mocktime.  I can't execute them because of ndbm which doesn't run on windows so I'll have to try things out on Travis.  I think about 4 scripts that might need fixing up.  Shouldn't take too long...I'll let you know when it's done.",
      "created_at" : "2015-12-05T01:25:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162123697",
      "id" : 162123697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T01:25:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162123697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Rebase needed.",
      "created_at" : "2015-12-05T09:49:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162167905",
      "id" : 162167905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T09:49:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162167905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "I like the overall goal here, but I'm not sure I follow the reasoning for changing the behavior of `SetMockTime`.  One advantage of the way mocktime works now is that for the places in the code that call `GetTime()`, the behavior is deterministic -- the time will always be whatever the last mocktime call set it to.  I think this determinism can be a useful feature for testing, and making it an offset of the current system time will eliminate the determinism.\r\n\r\nCan we work around this problem differently in the tests?  I don't actually understand why the time would need to advance but I haven't yet poked into the problems you ran into.  But for instance, one workaround I've used in tests I've previously written is to just mine a single block at the beginning of the test to ensure that the nodes are out of IBD (I recognize this workaround may not easily apply to all testing scenarios though).\r\n",
      "created_at" : "2015-12-05T14:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162197858",
      "id" : 162197858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T14:39:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162197858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Mocktime needs to advance otherwise banning and unbanning doesn't work\nso scripts such as nodehandling end up failing.  I think having mocktime\nadvance, gives us a more realisitic functionality for testing as it\nbehaves in the same way as the application does in the real world.\n\n\nOn 05/12/2015 6:40 AM, Suhas Daftuar wrote:\n>\n> I like the overall goal here, but I'm not sure I follow the reasoning\n> for changing the behavior of |SetMockTime|. One advantage of the way\n> mocktime works now is that for the places in the code that call\n> |GetTime()|, the behavior is deterministic -- the time will always be\n> whatever the last mocktime call set it to. I think this determinism\n> can be a useful feature for testing, and making it an offset of the\n> current system time will eliminate the determinism.\n>\n> Can we work around this problem differently in the tests? I don't\n> actually understand why the time would need to advance but I haven't\n> yet poked into the problems you ran into. But for instance, one\n> workaround I've used in tests I've previously written is to just mine\n> a single block at the beginning of the test to ensure that the nodes\n> are out of IBD (I recognize this workaround may not easily apply to\n> all testing scenarios though).\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162197858>.\n>\n\n",
      "created_at" : "2015-12-05T16:07:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162216533",
      "id" : 162216533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T16:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162216533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@sdaftuar   Thinking about this some more perhaps you are right, but maybe we can have both.  We can have the mocktime we have now and also have a mocktime that will advance for those that need it.    It would certainly be easier than having to fix up these python scripts. ",
      "created_at" : "2015-12-05T18:06:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162231634",
      "id" : 162231634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T18:06:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162231634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@sdaftuar  And then if we go with a more complex mocktime it probably needs to be in a separate PR.  I think I'm going to go back to the way the original mocktime was and see if I can get that nodehandling script to work.  That would be much simpler and more within the scope of this PR.",
      "created_at" : "2015-12-05T18:31:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162232916",
      "id" : 162232916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-05T18:31:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162232916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@laanwj @sdaftuar  I reverted back to the original mocktime which doesn't increment GetTime().  Instead, I made edits to a few of the python scripts to get them to work with mocktime and checked both the regular and extended scripts to make sure they all work.  Pushed and Travis is happy.\r\n\r\nPerhaps in the future we should have a mocktime that is both deterministic as well as one that allows GetTime() to increment.  I think having a more realistic test scenario is always best but I agree with @sdaftuar that we need to keep the current deterministic behavior of mocktime as well.",
      "created_at" : "2015-12-06T01:40:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162262403",
      "id" : 162262403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T01:40:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162262403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "It seems reasonable to have 2 different setmocktime functions if they're both useful for testing.",
      "created_at" : "2015-12-06T02:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162264397",
      "id" : 162264397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T02:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162264397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK 233fe56",
      "created_at" : "2015-12-06T09:52:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162292704",
      "id" : 162292704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T09:52:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162292704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@ptschip I agree that an advancing mocktime can be useful too, and yeah probably makes sense to add that support in a separate PR.\r\n\r\nI'm not sure it's a good idea for the default test behavior to be to enable mocktime for all tests (which changes the behavior of the code being tested).  I guess the issue is that if you're using `initialize_chain` which can give you an old cached datadir, then you probably want a mocktime that goes with it?  Many of the tests now use `initialize_chain_clean` to avoid the issue of an old blockchain, and I think for tests that don't need to use a mocktime (because of the way they are written) it'd be best to not change the behavior they're testing by introducing use of mocktime.\r\n\r\nIt looks like running bitcoind with a mocktime of 0 is a no-op, so could we do something where the default mocktime used by `start_node` is only set to a non-zero value if the code that tries to generate a cached datadir is invoked?",
      "created_at" : "2015-12-06T10:54:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162303010",
      "id" : 162303010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T10:54:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162303010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I think another option would be to just have the tests that don't need to use mocktime change their invocations of start_node to include `-mocktime=0` as one of the arguments to bitcoind.  That should override the argument that's being added to `util.py`, and the test writer is likely aware if they're not using the cached directory.\r\n\r\nIf others are fine with an extra argument being needed to avoid invoking mocktime that is fine with me, but I do think we should go back and make sure that we're only using non-zero mocktimes on the tests that need them.",
      "created_at" : "2015-12-06T11:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162303568",
      "id" : 162303568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T11:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162303568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "As said, having 2 mocktime functions may be useful, but I completely agree with not using it in the tests that don't need it. I think being explicit in the tests you need it may be more verbose than having it set implicitly for all tests, but is also clearer and more easily modifiable (if \"explicit is better than implicit\" is not enough).",
      "created_at" : "2015-12-06T17:18:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162330096",
      "id" : 162330096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T17:18:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162330096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "On 06/12/2015 3:02 AM, Suhas Daftuar wrote:\n>\n> I think another option would be to just have the tests that don't need\n> to use mocktime change their invocations of start_node to include\n> |-mocktime=0| as one of the arguments to bitcoind. That should\n> override the argument that's being added to |util.py|,\n>\nYes, you can override mocktime in that way.  In fact I had to do that in\nthe maxuploadtarget.py to get it to work, although in that case I had to\nstart_node with mocktime set to the current time, but it does work if\none wants to use it that way.  So for now I would think that would be\nsufficient for those that don't want to use mocktime in their scripting?\n\n",
      "created_at" : "2015-12-06T18:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162333241",
      "id" : 162333241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T18:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162333241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Another simple solution for those that don't want to use or need to use\nmocktime in their scripts is simply to set  MOCKTIME=0 at the very\nbeginning.\n\nOn 06/12/2015 3:02 AM, Suhas Daftuar wrote:\n>\n> I think another option would be to just have the tests that don't need\n> to use mocktime change their invocations of start_node to include\n> |-mocktime=0| as one of the arguments to bitcoind. That should\n> override the argument that's being added to |util.py|, and the test\n> writer is likely aware if they're not using the cached directory.\n>\n> If others are fine with an extra argument being needed to avoid\n> invoking mocktime that is fine with me, but I do think we should go\n> back and make sure that we're only using non-zero mocktimes on the\n> tests that need them.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162303568>.\n>\n\n",
      "created_at" : "2015-12-06T18:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7164#issuecomment-162334899",
      "id" : 162334899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7164",
      "updated_at" : "2015-12-06T18:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162334899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   }
]
