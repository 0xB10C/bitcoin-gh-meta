[
   {
      "body" : "wow I like that, the changes are very small to review. I'll add the tests later tonight or tomorrow..",
      "created_at" : "2015-12-08T03:16:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162746828",
      "id" : 162746828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T03:45:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162746828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier oh good, i was mostly holding off on the tests because i wanted to see if people liked this approach.\r\n\r\nWhat do you mean about IsFinalTx?  I think the changes to make that aware of MTP are already merged, so it wasn't necessary for me to change it further.\r\n\r\n\r\n",
      "created_at" : "2015-12-08T03:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162747941",
      "id" : 162747941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T03:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162747941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r46963687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46963687"
         }
      },
      "body" : "Like the symmetry, but the name here is now a bit out-dated and possibly misleading since we have two types of finality.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-08T15:07:32Z",
      "diff_hunk" : "@@ -341,7 +341,22 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  */\n bool CheckFinalTx(const CTransaction &tx, int flags = -1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r46963687",
      "id" : 46963687,
      "original_commit_id" : "d08dfced592661359e5261f28a58f7178e8b55c7",
      "original_position" : 2,
      "path" : "src/main.h",
      "position" : 2,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46963687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r46966223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46966223"
         }
      },
      "body" : "Agreed.  I was going for minimal changes to existing consensus code, but if people like I'd be happy to rename that.  Perhaps `LocktimeLock()` and `CheckLocktimeLock()`\r\n\r\nI'd also like to take out the way CheckFinalTx is called with default -1 in the wallet code, but I could save that for another pull.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-08T15:25:26Z",
      "diff_hunk" : "@@ -341,7 +341,22 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  */\n bool CheckFinalTx(const CTransaction &tx, int flags = -1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r46966223",
      "id" : 46966223,
      "original_commit_id" : "d08dfced592661359e5261f28a58f7178e8b55c7",
      "original_position" : 2,
      "path" : "src/main.h",
      "position" : 2,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46966223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "I am trying another approach before building on yours, which would solve the removeForReorg and CNB problem without changing any code in #6312. (https://github.com/NicolasDorier/bitcoin/compare/b13f47535cc2...0fb1092ed53f now building)\r\n\r\nI removed my comment about IsFinalTx, I was surprised not seeing the flag passed to it. But it seems client are held responsible for calculating the right blocktime. This led to code duplication, #6312 fixed that.\r\n\r\nI like the idea of having 2 methods : CheckLockTime and CheckSequenceLockTime though, but I wonder if it will really be useful since there will be no case where we want to call one and not the other.",
      "created_at" : "2015-12-08T15:56:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162925968",
      "id" : 162925968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T15:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162925968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "added unit tests",
      "created_at" : "2015-12-08T16:01:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162927637",
      "id" : 162927637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T16:01:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162927637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@NicolasDorier One reason I like the approach in this PR is that the sequence-lock check is done separately from the nLockTime check -- locktime can be evaluated for all transactions in a block at the time a block is received (eg in `ContextualCheckBlock`), whereas sequence locks can only be evaluated when all inputs heights' are available (eg during `ConnectBlock`).\r\n\r\nFrom a design perspective, it seems to me that having the consensus checks operate in the smallest logical units ought to limit the need for future refactorings (which I think is a good design goal for consensus code).",
      "created_at" : "2015-12-08T16:05:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162929355",
      "id" : 162929355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T16:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162929355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Ok, it makes sense. I'm kind of worried though about having the block of CheckLockTime responsible for calculating the blocktime each time, this is code duplication easy to get wrong. (I think that when I fixed it in #6312, there was indeed some parts which could break if the block evaluated was the genesis with MTP enabled)\r\n\r\nWhat about having a CCBlockIndex::GetCutoffTime(flag) method ?",
      "created_at" : "2015-12-08T16:07:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162930532",
      "id" : 162930532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T16:08:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162930532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "It does not solve the perf problem though, CheckSequenceLock need to be called during reorg. (Did https://github.com/NicolasDorier/bitcoin/compare/9e8c7be9bc94...8670ce84fd01 it takes time for me to compile, I don't have a linux at hand, doing it by pushing/waiting travis) ",
      "created_at" : "2015-12-08T16:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-162934900",
      "id" : 162934900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T16:50:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162934900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "Here is another version of this that assumes BIP68 includes MTP already: https://github.com/morcos/bitcoin/commit/ba957d5407ecc3d1f320893f47cfc7181a0a0878",
      "created_at" : "2015-12-08T20:40:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-163011742",
      "id" : 163011742,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T20:40:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163011742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos Since we plan to roll out BIP113 and BIP68 together it really makes sense that BIP68 assumes MTP. I think that is a must and it simplifies things.",
      "created_at" : "2015-12-08T21:17:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-163020637",
      "id" : 163020637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T21:17:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163020637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "NACK This wastes a lot of previous review effort by not building on top of #6312.",
      "created_at" : "2015-12-08T21:51:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-163029513",
      "id" : 163029513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-08T21:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163029513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "OK I fixed my comment about -1 and switched to the version where BIP 68 is defined to use MTP.\r\n\r\nIf it is helpful for anyone to see what this PR looks like as a change from #6312, you can see that here:\r\nhttps://github.com/maaku/bitcoin/compare/sequencenumbers...morcos:7184onorig6312\r\n",
      "created_at" : "2015-12-09T02:51:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-163089533",
      "id" : 163089533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-09T02:51:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163089533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "> If it is helpful for anyone to see what this PR looks like as a change from #6312, you can see that here: maaku@sequencenumbers...morcos:7184onorig6312\r\n\r\nThank you, it is certainly useful, at least for me.\r\nWhy not use that branch here directly (like @sdaftuar and @NicolasDorier are doing with their solutions) instead? Later maybe you can squash some of the commits if this replaces #6312 .\r\nI don't understand why you insist in doing it in a new single commit with your name in it instead.\r\n",
      "created_at" : "2015-12-09T06:19:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#issuecomment-163122207",
      "id" : 163122207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7184",
      "updated_at" : "2015-12-09T06:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163122207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47233948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47233948"
         }
      },
      "body" : "The comments here are slightly confusing to me because of missing context.  The above is a consensus rule for all transactions, while the ones below only apply as policy (for now) for `tx.nVersion >= 2` transactions.  I think we should expand on the comments to make this clearer, perhaps with a reference to BIP68?\r\n\r\n(Edit: I think this also applies to #6312.)",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T14:47:00Z",
      "diff_hunk" : "@@ -61,13 +61,39 @@ class CTxIn\n     CScript scriptSig;\n     uint32_t nSequence;\n \n+    /* Setting nSequence to this value for every input in a transaction\n+     * disables nLockTime. */\n+    static const uint32_t SEQUENCE_FINAL = 0xffffffff;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47233948",
      "id" : 47233948,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 6,
      "path" : "src/primitives/transaction.h",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47233948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47248162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47248162"
         }
      },
      "body" : "I think using `block.nHeight-1` here forces an unnecessary restriction on the caller (ie that `block.nHeight` is being set to 1 more than the current tip height) -- if we change this to be \r\n```\r\nint64_t nBlockTime = block.pprev ? block.pprev->GetMedianTimePast() : 0;\r\n```\r\nThen we would be able to change the `CheckSequenceLocks` code in the future to allow us to test whether a transaction is able to be confirmed in the next N blocks for N > 1 (right now we can only do N=1).  \r\n\r\nThis would allow for mempool policy code that could permit transactions that may not be mineable now, but will be mineable in the near future.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T16:25:46Z",
      "diff_hunk" : "@@ -705,6 +706,116 @@ bool CheckFinalTx(const CTransaction &tx, int flags)\n     return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n+static std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\n+{\n+    assert(prevHeights->size() == tx.vin.size());\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    // The semantics of nLockTime are the last invalid height/time, so\n+    // use -1 to have the effect of any height or time being valid.\n+    int nMinHeight = -1;\n+    int64_t nMinTime = -1;\n+\n+    // tx.nVersion is signed integer so requires cast to unsigned otherwise\n+    // we would be doing a signed comparison and half the range of nVersion\n+    // wouldn't support BIP 68.\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Do not enforce sequence numbers as a relative lock time\n+    // unless we have been instructed to\n+    if (!fEnforceBIP68) {\n+        return std::make_pair(nMinHeight, nMinTime);\n+    }\n+\n+    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n+        const CTxIn& txin = tx.vin[txinIndex];\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n+            // The height of this input is not relevant for sequence locks\n+            (*prevHeights)[txinIndex] = 0;\n+            continue;\n+        }\n+\n+        int nCoinHeight = (*prevHeights)[txinIndex];\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG) {\n+            int64_t nCoinTime = block.GetAncestor(std::max(nCoinHeight-1, 0))->GetMedianTimePast();\n+\n+            // Time-based relative lock-times are measured from the\n+            // smallest allowed timestamp of the block containing the\n+            // txout being spent, which is the median time past of the\n+            // block prior.\n+            nMinTime = std::max(nMinTime, nCoinTime + (int64_t)((txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) << CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) - 1);\n+        } else {\n+            // We subtract 1 from relative lock-times because a lock-\n+            // time of 0 has the semantics of \"same block,\" so a lock-\n+            // time of 1 should mean \"next block,\" but nLockTime has\n+            // the semantics of \"last invalid block height.\"\n+            nMinHeight = std::max(nMinHeight, nCoinHeight + (int)(txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) - 1);\n+        }\n+    }\n+\n+    return std::make_pair(nMinHeight, nMinTime);\n+}\n+\n+static bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair)\n+{\n+    int64_t nBlockTime =  block.GetAncestor(std::max(block.nHeight-1, 0))->GetMedianTimePast();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47248162",
      "id" : 47248162,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : 77,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47248162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47249538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47249538"
         }
      },
      "body" : "Agreed. I think it's pretty sure this code or #7187 is going supersede #6312 so I'm fine with the comment being updated here. \r\n\r\nmaybe\r\n\r\n    /* Setting nSequence to this value for every input in a transaction\r\n     * disables nLockTime when transaction nVersion is >=2 . */",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T16:35:12Z",
      "diff_hunk" : "@@ -61,13 +61,39 @@ class CTxIn\n     CScript scriptSig;\n     uint32_t nSequence;\n \n+    /* Setting nSequence to this value for every input in a transaction\n+     * disables nLockTime. */\n+    static const uint32_t SEQUENCE_FINAL = 0xffffffff;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47249538",
      "id" : 47249538,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 6,
      "path" : "src/primitives/transaction.h",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47249538",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47253815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47253815"
         }
      },
      "body" : "The semantic used by caller is the following : \r\n*Check SequenceLock assuming the transaction is included in \"block\"*\r\n\r\nThis is needed. Because *block* might be an existing old block but also a block on top of tip. (for mempool transactions)\r\nChanging the semantic of this method would make things less clear.\r\n\r\nI introduced this change on https://github.com/maaku/bitcoin/commit/aa83819cac79edc3ab9c140cbbd2cd1417e04a8a . Previously, the LockTime method needed both : the tip and the block where it was tested against. I simplified by making it requires only the block it is tested against.\r\n\r\nThere is no concept of \"tip\" to have in the definition of sequence lock.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T17:05:59Z",
      "diff_hunk" : "@@ -705,6 +706,116 @@ bool CheckFinalTx(const CTransaction &tx, int flags)\n     return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n+static std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\n+{\n+    assert(prevHeights->size() == tx.vin.size());\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    // The semantics of nLockTime are the last invalid height/time, so\n+    // use -1 to have the effect of any height or time being valid.\n+    int nMinHeight = -1;\n+    int64_t nMinTime = -1;\n+\n+    // tx.nVersion is signed integer so requires cast to unsigned otherwise\n+    // we would be doing a signed comparison and half the range of nVersion\n+    // wouldn't support BIP 68.\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Do not enforce sequence numbers as a relative lock time\n+    // unless we have been instructed to\n+    if (!fEnforceBIP68) {\n+        return std::make_pair(nMinHeight, nMinTime);\n+    }\n+\n+    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n+        const CTxIn& txin = tx.vin[txinIndex];\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n+            // The height of this input is not relevant for sequence locks\n+            (*prevHeights)[txinIndex] = 0;\n+            continue;\n+        }\n+\n+        int nCoinHeight = (*prevHeights)[txinIndex];\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG) {\n+            int64_t nCoinTime = block.GetAncestor(std::max(nCoinHeight-1, 0))->GetMedianTimePast();\n+\n+            // Time-based relative lock-times are measured from the\n+            // smallest allowed timestamp of the block containing the\n+            // txout being spent, which is the median time past of the\n+            // block prior.\n+            nMinTime = std::max(nMinTime, nCoinTime + (int64_t)((txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) << CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) - 1);\n+        } else {\n+            // We subtract 1 from relative lock-times because a lock-\n+            // time of 0 has the semantics of \"same block,\" so a lock-\n+            // time of 1 should mean \"next block,\" but nLockTime has\n+            // the semantics of \"last invalid block height.\"\n+            nMinHeight = std::max(nMinHeight, nCoinHeight + (int)(txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) - 1);\n+        }\n+    }\n+\n+    return std::make_pair(nMinHeight, nMinTime);\n+}\n+\n+static bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair)\n+{\n+    int64_t nBlockTime =  block.GetAncestor(std::max(block.nHeight-1, 0))->GetMedianTimePast();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47253815",
      "id" : 47253815,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : 77,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47253815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47256905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47256905"
         }
      },
      "body" : "@NicolasDorier My point is that we're requiring `nHeight-1` to be a valid blockindex entry, when really all we need to do is rely on `pprev` being a valid block index (modulo checks for the genesis block).\r\n\r\nIf we use `pprev` for the time calculation rather than `nHeight`, that would give us the freedom to tweak the value of `nHeight` that we pass in, so that we could test for transactions with height-based-relative-locks being confirmable in N blocks rather than just in the next block.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T17:31:49Z",
      "diff_hunk" : "@@ -705,6 +706,116 @@ bool CheckFinalTx(const CTransaction &tx, int flags)\n     return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n+static std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\n+{\n+    assert(prevHeights->size() == tx.vin.size());\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    // The semantics of nLockTime are the last invalid height/time, so\n+    // use -1 to have the effect of any height or time being valid.\n+    int nMinHeight = -1;\n+    int64_t nMinTime = -1;\n+\n+    // tx.nVersion is signed integer so requires cast to unsigned otherwise\n+    // we would be doing a signed comparison and half the range of nVersion\n+    // wouldn't support BIP 68.\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Do not enforce sequence numbers as a relative lock time\n+    // unless we have been instructed to\n+    if (!fEnforceBIP68) {\n+        return std::make_pair(nMinHeight, nMinTime);\n+    }\n+\n+    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n+        const CTxIn& txin = tx.vin[txinIndex];\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n+            // The height of this input is not relevant for sequence locks\n+            (*prevHeights)[txinIndex] = 0;\n+            continue;\n+        }\n+\n+        int nCoinHeight = (*prevHeights)[txinIndex];\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG) {\n+            int64_t nCoinTime = block.GetAncestor(std::max(nCoinHeight-1, 0))->GetMedianTimePast();\n+\n+            // Time-based relative lock-times are measured from the\n+            // smallest allowed timestamp of the block containing the\n+            // txout being spent, which is the median time past of the\n+            // block prior.\n+            nMinTime = std::max(nMinTime, nCoinTime + (int64_t)((txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) << CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) - 1);\n+        } else {\n+            // We subtract 1 from relative lock-times because a lock-\n+            // time of 0 has the semantics of \"same block,\" so a lock-\n+            // time of 1 should mean \"next block,\" but nLockTime has\n+            // the semantics of \"last invalid block height.\"\n+            nMinHeight = std::max(nMinHeight, nCoinHeight + (int)(txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) - 1);\n+        }\n+    }\n+\n+    return std::make_pair(nMinHeight, nMinTime);\n+}\n+\n+static bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair)\n+{\n+    int64_t nBlockTime =  block.GetAncestor(std::max(block.nHeight-1, 0))->GetMedianTimePast();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47256905",
      "id" : 47256905,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : 77,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T18:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47256905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47274196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47274196"
         }
      },
      "body" : "It's not clear to me that this is is going to supersede #6312 . It seems there's at least 2 more people with alternatives. Can we maintain #6312 updated as a common base for the 3 different options?\r\nAs said, squashes can happe right before merging (you can also reset HEAD^ the squashed commit and redo it with your name if that's the reason why this currently doesn't use the common base [no other reason comes to mind]).",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T19:41:45Z",
      "diff_hunk" : "@@ -61,13 +61,39 @@ class CTxIn\n     CScript scriptSig;\n     uint32_t nSequence;\n \n+    /* Setting nSequence to this value for every input in a transaction\n+     * disables nLockTime. */\n+    static const uint32_t SEQUENCE_FINAL = 0xffffffff;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47274196",
      "id" : 47274196,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 6,
      "path" : "src/primitives/transaction.h",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T19:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47274196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47284310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47284310"
         }
      },
      "body" : "This comment has nothing to do with BIP 68. Setting all nSequence to max into disables nLockTime for all tx versions, today.",
      "commit_id" : "1f1df010d0aca0577d008c853c9c0fec6c2e8559",
      "created_at" : "2015-12-10T20:57:26Z",
      "diff_hunk" : "@@ -61,13 +61,39 @@ class CTxIn\n     CScript scriptSig;\n     uint32_t nSequence;\n \n+    /* Setting nSequence to this value for every input in a transaction\n+     * disables nLockTime. */\n+    static const uint32_t SEQUENCE_FINAL = 0xffffffff;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7184#discussion_r47284310",
      "id" : 47284310,
      "original_commit_id" : "50ce92f9858d4442fd0765c62584fc43c540fdbd",
      "original_position" : 6,
      "path" : "src/primitives/transaction.h",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7184",
      "updated_at" : "2015-12-10T20:57:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47284310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   }
]
