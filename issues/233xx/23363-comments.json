[
   {
      "author_association" : "MEMBER",
      "body" : "Given the new build process, it is fairly easy to use a newer compiler, while still targetting older systems, right?\r\n\r\nIf so, I think it makes sense to fairly early on have an optional C++20 mode, and have it enabled in one of the CI targets. This makes sure the source code is C++20 compatible, and perhaps use some C++20 features where possible. It could also be enabled for releases, *if* there is a significant benefit.\r\n\r\nI don't think we want to migrate to have the code _depend_ on C++20 features very soon, as self-compilation on non-cutting-edge systems should remain supported.",
      "created_at" : "2021-10-26T15:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23363#issuecomment-952067574",
      "id" : 952067574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23363",
      "node_id" : "IC_kwDOABII5844v2X2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952067574/reactions"
      },
      "updated_at" : "2021-10-26T15:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952067574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It looks like  designated initializers were [partially implemented](https://en.cppreference.com/w/cpp/compiler_support#cpp20) in gcc 4.7 and clang 3.0, meaning we can enable C++20 compilation with our current dependencies of gcc-8 and clang-7, without raising them and without affecting any users?",
      "created_at" : "2021-10-26T15:53:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23363#issuecomment-952078123",
      "id" : 952078123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23363",
      "node_id" : "IC_kwDOABII5844v48r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952078123/reactions"
      },
      "updated_at" : "2021-10-26T15:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952078123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[C++20 ranges](https://en.cppreference.com/w/cpp/ranges) are pretty cool too. Like @sipa says, I figured we could do compatibility tests anytime, but wouldn't be able to rely on the new features until 2023 or 2024 or so.",
      "created_at" : "2021-10-26T21:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23363#issuecomment-952355438",
      "id" : 952355438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23363",
      "node_id" : "IC_kwDOABII5844w8pu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952355438/reactions"
      },
      "updated_at" : "2021-10-26T21:51:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952355438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not really a fan of very granularly whitelisting features; it sounds like it'd just be confusing. Even if we only want designated initializers, we can't restrict gcc/clang to _only_ permit those, so you could end up in a situation where inadvertently someone introduces a dependency on a C++20 feature that happens to be supported in all compilers used in CI, but not in all compilers we want to support.\r\n\r\nRegarding ranges... yes, but that kind of feature doesn't give us much. Having conditional code that either uses ranges or a fallback, sounds like it'd generally be more complex and error-prone than just not using the ranges interface at all.",
      "created_at" : "2021-10-26T21:56:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23363#issuecomment-952357847",
      "id" : 952357847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23363",
      "node_id" : "IC_kwDOABII5844w9PX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952357847/reactions"
      },
      "updated_at" : "2021-10-26T21:56:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952357847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
