[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 15646](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/15646/total.coverage/index.html), 9e11c99e56402afa5e9a323307491132bbf87dde) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), 68520597ccf8ff3f6e8a7ad6869b06bf2012ae8a)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0063 %            | 87.4567 %        |\n| Functions | -0.0145 %            | 84.7870 %        |\n| Branches  | +0.0052 %            | 51.5361 %        |\n\n<sup>Updated at: 2019-03-22T20:15:25.016978.</sup>\n",
      "created_at" : "2019-03-22T20:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-475765956",
      "id" : 475765956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTc2NTk1Ng==",
      "updated_at" : "2019-03-22T20:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475765956",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm seeing this locally on x86_64 Linux Debian 4.19.16-1 (2019-01-17):\r\n\r\n```\r\n$ test/functional/test_runner.py wallet_resendwallettransactions.py\r\nTemporary test directory at /tmp/test_runner_Ã¢ÂÂ¿_Ã°ÂÂÂ_20190323_124023\r\nRemaining jobs: [wallet_resendwallettransactions.py]\r\n..........................................................................................................                                                                                                          \r\n1/1 - wallet_resendwallettransactions.py failed, Duration: 69 s\r\n\r\nstdout:\r\n2019-03-23T11:40:23.995000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_Ã¢ÂÂ¿_Ã°ÂÂÂ_20190323_124023/wallet_resendwallettransactions_0\r\n2019-03-23T11:41:32.807000Z TestFramework.utils (ERROR): wait_until() failed.\r\n  Predicate: (['wait_until(lambda: self.nodes[0].p2ps[1].tx_invs_received[txid] >= 1)\\n'], 67)\r\n2019-03-23T11:41:32.808000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 175, in main\r\n    self.run_test()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/wallet_resendwallettransactions.py\", line 67, in run_test\r\n    wait_until(lambda: self.nodes[0].p2ps[1].tx_invs_received[txid] >= 1)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 224, in wait_until\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate (['wait_until(lambda: self.nodes[0].p2ps[1].tx_invs_received[txid] >= 1)\\n'], 67) not true after 60 seconds\r\n```",
      "created_at" : "2019-03-23T11:45:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-475862992",
      "id" : 475862992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTg2Mjk5Mg==",
      "updated_at" : "2019-03-23T11:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475862992",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r268393179"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/268393179"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Suggestion: `self.nodes[0]` could be assigned at the start of the test to a local variable like `node` for readability, since it is called 14 times in `run_test`.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-23T12:35:25Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        self.nodes[0].add_p2p_connection(P2PStoreTxInvs())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r268393179",
      "id" : 268393179,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODM5MzE3OQ==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 39,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : null,
      "pull_request_review_id" : 218037717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/268393179",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If helpful, this version of the test passes for me locally: https://github.com/jonatack/bitcoin/commit/0608a16. Main change is the last `setmocktime` value. I'm unsure if more time invalidates the test but it appears to become unreliable with lower values:\r\n\r\n```python\r\n    # Transaction should be broadcast after 30 minutes. Give it ~60 (31 + 29) to be sure.\r\n    node.setmocktime(time_now + 60 * 29)\r\n```",
      "created_at" : "2019-03-23T13:53:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-475871535",
      "id" : 475871535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTg3MTUzNQ==",
      "updated_at" : "2019-03-23T18:52:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475871535",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r268416581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/268416581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "FWIW I prefer `self.nodes[0]` 14 times or move the new test to a function with the `node` arg.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-24T02:56:36Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        self.nodes[0].add_p2p_connection(P2PStoreTxInvs())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r268416581",
      "id" : 268416581,
      "in_reply_to_id" : 268393179,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODQxNjU4MQ==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 39,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : null,
      "pull_request_review_id" : 218063853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/268416581",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269159137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269159137"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems reasonable. Using `node` as a local alias for `self.nodes[0]` in tests where there's only one node is a common technique in our tests. I'll add this.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T15:18:00Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        self.nodes[0].add_p2p_connection(P2PStoreTxInvs())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269159137",
      "id" : 269159137,
      "in_reply_to_id" : 268393179,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTE1OTEzNw==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 39,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : null,
      "pull_request_review_id" : 218964298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269159137",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @jonatack and @promag . I've pushed a fixup commit that:\r\n\r\n- fixes a bug in the way we were storing txids in `P2PStoreTxInvs` (it was previously storing as hex and would drop leading zeros, which meant it wouldn't match with the txid in the case where the txid had a leading zero.\r\n- changes the mocktimes slightly\r\n- adds logging\r\n- a few other small changes.\r\n\r\nIt should pass reliably now. Are you able to rereview/retest?",
      "created_at" : "2019-03-26T15:20:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-476698728",
      "id" : 476698728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NjY5ODcyOA==",
      "updated_at" : "2019-03-26T15:20:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476698728",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-03-26T15:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-476718009",
      "id" : 476718009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NjcxODAwOQ==",
      "updated_at" : "2019-03-26T15:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476718009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift No need to \"Concept ACK\" someone adding tests. This is already encouraged by the contribution guidelines and adding a comment adds no value. It would help if you ran the test or gave feedback about the code, however.",
      "created_at" : "2019-03-26T18:05:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-476777342",
      "id" : 476777342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3Njc3NzM0Mg==",
      "updated_at" : "2019-03-26T18:05:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476777342",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Should be squashed to make ready for review. Also, would be good to explain why `resendwalletransactions` is no longer (smoke) tested. E.g: \"It is called in other tests already\"",
      "created_at" : "2019-03-26T18:12:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-476780410",
      "id" : 476780410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3Njc4MDQxMA==",
      "updated_at" : "2019-03-26T18:12:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476780410",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269257327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269257327"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[tests] Add test for wallet rebroadcasts\" (f2faae27895927bb8fefca3d066bf8972e3bdaa7)\r\n\r\nIt would be nice to move some of the comments from your commit message into the test itself to convey what the test currently covers and how it can be improved in the future (\"It does not test whether transactions are actually rebroadcast, or whether the rebroadcast logic is called on a timer\").",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T18:33:34Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269257327",
      "id" : 269257327,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTI1NzMyNw==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 28,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 28,
      "pull_request_review_id" : 219087100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269257327",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269261687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269261687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you've misunderstood the commit message. I'm saying the test _before_ this commit doesn't test whether txs are actually rebroadcast or whether rebroadcast logic is called on a timer. The commit in this PR fixes that.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T18:44:33Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269261687",
      "id" : 269261687,
      "in_reply_to_id" : 269257327,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTI2MTY4Nw==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 28,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 28,
      "pull_request_review_id" : 219092688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269261687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269270202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269270202"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think you've misunderstood the commit message\r\n\r\nOh, yes I did misunderstand. I thought it was saying the test didn't check whether transactions were rebroadcast on an ongoing basis. Anyway, no need to change anything.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T19:06:29Z",
      "diff_hunk" : "@@ -2,31 +2,69 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save as hex\n+                self.tx_invs_received[format(i.hash, 'x')] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269270202",
      "id" : 269270202,
      "in_reply_to_id" : 269257327,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTI3MDIwMg==",
      "original_commit_id" : "f2faae27895927bb8fefca3d066bf8972e3bdaa7",
      "original_position" : 28,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 28,
      "pull_request_review_id" : 219103526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T19:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269270202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Commits squashed. I've also made a small update to the commit log to make it clearer that this commit fixes the deficiencies with the previous test. \r\n\r\n> would be good to explain why resendwalletransactions is no longer (smoke) tested\r\n\r\nI intend to remove the `resendwallettransactions` RPC method in a follow-up PR. It was added as a hidden, test-only RPC to test wallet transaction rebroadcast (https://github.com/bitcoin/bitcoin/pull/5940), which it doesn't do effectively. Removing it would allow further simplification of the rebroadcast code.",
      "created_at" : "2019-03-26T19:31:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#issuecomment-476812835",
      "id" : 476812835,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15646",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NjgxMjgzNQ==",
      "updated_at" : "2019-03-26T19:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476812835",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269315872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269315872"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Was using the same value for `node.setmocktime` and the block time in `create_block` a key fix? Good catch.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T21:07:28Z",
      "diff_hunk" : "@@ -2,31 +2,70 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface, mininode_lock\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save txid\n+                self.tx_invs_received[i.hash] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        node = self.nodes[0]  # alias\n+\n+        node.add_p2p_connection(P2PStoreTxInvs())\n+\n+        self.log.info(\"Create a new transaction and wait until it's broadcast.\")\n+        txid = int(node.sendtoaddress(node.getnewaddress(), 1), 16)\n+\n+        # Can take a few seconds due to transaction trickling\n+        wait_until(lambda: node.p2p.tx_invs_received[txid] >= 1, lock=mininode_lock)\n+\n+        # Add a second peer since txs aren't rebroadcast to the same peer (see filterInventoryKnown)\n+        node.add_p2p_connection(P2PStoreTxInvs())\n+\n+        self.log.info(\"Create a block.\")\n+        # Create and submit a block without the transaction.\n+        # Transactions are only rebroadcast if there has been a block at least five minutes\n+        # after the last time we tried to broadcast. Use mocktime and give an extra minute to be sure.\n+        block_time = int(time.time()) + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockchaininfo()['blocks']), block_time)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269315872",
      "id" : 269315872,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTMxNTg3Mg==",
      "original_commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "original_position" : 58,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 58,
      "pull_request_review_id" : 219161155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T21:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269315872",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269319333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269319333"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just an idea: It might be nice to hoist all the local variables for the test setup together at the top, or in a setup function, to see the setup as a whole. Doing this also made it more apparent that we can potentially reduce the number of system time calls.\r\n```python\r\n        node = self.nodes[0]  # alias\r\n        block_time = int(time.time()) + 6 * 60\r\n        rebroadcast_time = block_time + 31 * 60\r\n```",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T21:17:09Z",
      "diff_hunk" : "@@ -2,31 +2,70 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface, mininode_lock\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save txid\n+                self.tx_invs_received[i.hash] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        node = self.nodes[0]  # alias",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269319333",
      "id" : 269319333,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTMxOTMzMw==",
      "original_commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "original_position" : 39,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 39,
      "pull_request_review_id" : 219161155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T23:55:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269319333",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269320447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269320447"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The logs are a great enhancement:\r\n```\r\n$ test/functional/wallet_resendwallettransactions.py \r\n2019-03-26T21:05:37.079000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_eb5_rvg_\r\n2019-03-26T21:05:37.874000Z TestFramework (INFO): Create a new transaction and wait until it's broadcast.\r\n2019-03-26T21:05:38.807000Z TestFramework (INFO): Create a block.\r\n2019-03-26T21:05:38.864000Z TestFramework (INFO): Transaction should be rebroadcast after 30 minutes.\r\n2019-03-26T21:05:40.021000Z TestFramework (INFO): Stopping nodes\r\n2019-03-26T21:05:40.329000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_eb5_rvg_ on exit\r\n2019-03-26T21:05:40.329000Z TestFramework (INFO): Tests successful\r\n```\r\nNote that the auto logging does not appear to terminate with periods, if you wish to do the same.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T21:20:19Z",
      "diff_hunk" : "@@ -2,31 +2,70 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface, mininode_lock\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save txid\n+                self.tx_invs_received[i.hash] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        node = self.nodes[0]  # alias\n+\n+        node.add_p2p_connection(P2PStoreTxInvs())\n+\n+        self.log.info(\"Create a new transaction and wait until it's broadcast.\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269320447",
      "id" : 269320447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTMyMDQ0Nw==",
      "original_commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "original_position" : 43,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 43,
      "pull_request_review_id" : 219161155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T21:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269320447",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269323539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269323539"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "FWIW I tried this locally as above, simplified to one single call to `int(time.time())` and 31 minutes for rebroadcast instead of 35, and the test appears equally robust this way.",
      "commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "created_at" : "2019-03-26T21:29:17Z",
      "diff_hunk" : "@@ -2,31 +2,70 @@\n # Copyright (c) 2017-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test resendwallettransactions RPC.\"\"\"\n+\"\"\"Test that the wallet resends transactions periodically.\"\"\"\n+from collections import defaultdict\n+import time\n \n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex\n+from test_framework.mininode import P2PInterface, mininode_lock\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import assert_equal, wait_until\n+\n+class P2PStoreTxInvs(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.tx_invs_received = defaultdict(int)\n+\n+    def on_inv(self, message):\n+        # Store how many times invs have been received for each tx.\n+        for i in message.inv:\n+            if i.type == 1:\n+                # save txid\n+                self.tx_invs_received[i.hash] += 1\n \n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled.\n-        assert_raises_rpc_error(-4, \"Error: Wallet transaction broadcasting is disabled with -walletbroadcast\", self.nodes[0].resendwallettransactions)\n+        node = self.nodes[0]  # alias",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15646#discussion_r269323539",
      "id" : 269323539,
      "in_reply_to_id" : 269319333,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTMyMzUzOQ==",
      "original_commit_id" : "c1a96f0f339987d48cdaba75e628030cbf6391b8",
      "original_position" : 39,
      "path" : "test/functional/wallet_resendwallettransactions.py",
      "position" : 39,
      "pull_request_review_id" : 219170703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15646",
      "updated_at" : "2019-03-26T22:00:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269323539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
