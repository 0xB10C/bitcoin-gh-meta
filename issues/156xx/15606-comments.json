[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19779 (Remove gArgs global from init by MarcoFalke)\n* #19724 ([net] Cleanup connection types- followups by amitiuttarwar)\n* #19704 (Net processing: move ProcessMessage() to PeerLogicValidation by jnewbery)\n* #19677 (Switch BlockMap to use an unordered_set under the hood by JeremyRubin)\n* #19629 (refactor: Keep mempool interface in validation by MarcoFalke)\n* #19607 ([p2p] Add Peer struct for per-peer data in net processing by jnewbery)\n* #19594 (refactor: Make mapBlocksUnknownParent local, and rename it by hebasto)\n* #19521 (Coinstats Index (without UTXO set hash) by fjahr)\n* #19463 (Prune locks by luke-jr)\n* #19438 (Introduce deploymentstatus by ajtowns)\n* #19145 (Add hash_type MUHASH for gettxoutsetinfo by fjahr)\n* #19009 (Print \"verifychain\" progress every 1 step if user verifies whole blockchain. by yakitorifoodie)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18689 (rpc: allow dumptxoutset to dump human-readable data by pierreN)\n* #18685 ([validation] Simplify ConnectTrace by jnewbery)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n* #15719 (Wallet passive startup by ryanofsky)\n* #9384 (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-03-15T15:07:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-473322663",
      "id" : 473322663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzMyMjY2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-22T18:16:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473322663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Presumably the snapshot would be taken relatively close to the current tip but far enough away to avoid meaningful reorgs, say 10,000 blocks deep.\r\n\r\nTo be clear, the snapshot can't be terribly recent for the user of it or it breaks the security model. Assume valid only has any security at all if there is time for the review and communication about review to happen, which means a human timescale of at least weeks.\r\n\r\nProbably the assumption should be that snapshots are created pretty close to tip, just far enough to avoid wasting time in reorgs (even 6 blocks would be fine) but the users aren't using them until they are quite a bit older, likely using the second to most recent available one.\r\n\r\n> We don't serve blocks or transactions to the network while we're operating with an unvalidated snapshot-based chain.\r\n\r\nWe shouldn't do that.  The worst that getting it wrong does is getting us disconnected from peers, which isn't particularly cosmic (and at least we might notice that something is going wrong).  The downside of it is that not forwarding transactions shoots our privacy in the head, since any transaction we're emitting would be one we created.\r\n\r\n> When we attempt to load a wallet with a BestBlock locator lower than the base of a snapshot and the snapshot has not yet been validated, we refuse to load the wallet.\r\n\r\nSounds good.\r\n\r\n>  compare it with the claimed hash in the snapshot metadata.\r\n\r\nThis is a zero security approach.  You can't just ask the user for a value and then accept that. The attack is to reorg the chain and then announce to everyone that there is a node bug and you need to run this command to continue, we specifically engineered out that possibility in assumevalid.  This isn't hypothetical, this is exactly what we've seen happen in ethereum w/ fastsync.\r\n\r\nThis is a fine setup for testing your PR however!    Ultimately we should get it to a state where a (FEC-split) copy of the state is loaded from the network and where it can be tested against a publicly reviewed constants configured in the software and/or blockchain.",
      "created_at" : "2019-03-15T19:39:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-473416823",
      "id" : 473416823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzQxNjgyMw==",
      "updated_at" : "2019-03-15T19:39:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473416823",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Probably the assumption should be that snapshots are created pretty close to tip, just far enough to avoid wasting time in reorgs (even 6 blocks would be fine) but the users aren't using them until they are quite a bit older, likely using the second to most recent available one.\r\n\r\nYep - I figured that we'd update the assumeutxo hash in lockstep with assumevalid's.\r\n\r\n> We shouldn't do that. The worst that getting it wrong does is getting us disconnected from peers, which isn't particularly cosmic (and at least we might notice that something is going wrong). The downside of it is that not forwarding transactions shoots our privacy in the head [...]\r\n\r\nGood points, will fix that.\r\n\r\n> This is a zero security approach. You can't just ask the user for a value and then accept that.\r\n\r\nAgreed - the check I do there is just for sanity. Deciding on an initial hardcoded `assumeutxo` hash seems corequisite to allowing snapshots to be loadable through RPC (or any other means).\r\n",
      "created_at" : "2019-03-19T14:11:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-474387827",
      "id" : 474387827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NDM4NzgyNw==",
      "updated_at" : "2019-03-19T14:11:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/474387827",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-03-21T08:25:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-475144784",
      "id" : 475144784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTE0NDc4NA==",
      "updated_at" : "2019-03-21T08:25:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475144784",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There are so many code changes here, and it seems like 80% of them are just renames. I know you are putting off really breaking this up and restructuring it, but maybe you could start by just splitting b2a735d00d3c297cdfdd93609c12537497025ca1 in two commits: one that adds the new classes and function arguments and brute force renames without changing behavior, and a smaller one with the new functionality. That way reviewers could see the more interesting changes without having to go through all the mind-numbing renames.",
      "created_at" : "2019-03-26T19:39:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-476815777",
      "id" : 476815777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NjgxNTc3Nw==",
      "updated_at" : "2019-03-26T19:39:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476815777",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the suggestion, @ryanofsky. I spent the last few days reconstructing the changeset into sensible commits - hopefully it's easier to understand this way.\r\n\r\nMost of the early commits are just shuffling stuff around (though all of it strictly necessary AFAICT). I've phrased the changes as much as possible as scripted-diffs and move-onlys. In replaying the changes, I found a few unnecessary diffs to omit.\r\n\r\nIf anyone has additional suggestions for how this could be made easier to review, I'm all ears, though I'm not holding my breath waiting until some Concept (N)ACKs roll in on #15605. ",
      "created_at" : "2019-03-30T01:41:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-478194695",
      "id" : 478194695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODE5NDY5NQ==",
      "updated_at" : "2019-03-30T01:41:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478194695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r270963373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270963373"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"move-only: make the CChainState interface public\" (77e5c902168ca2191448c5f8924b6831dc2717b9)\r\n\r\nBetter to drop anonymous namespace. It doesn't actually hide any functionality and causes warnings:\r\n\r\n```\r\n./validation.h:487:7: warning: âCChainStateâ has a field âCChainState::setBlockIndexCandidatesâ whose type uses the anonymous namespace [-Wsubobject-linkage]\r\n```\r\n",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-01T17:03:11Z",
      "diff_hunk" : "@@ -437,6 +438,161 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+namespace {\n+    struct CBlockIndexWorkComparator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r270963373",
      "id" : 270963373,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDk2MzM3Mw==",
      "original_commit_id" : "77e5c902168ca2191448c5f8924b6831dc2717b9",
      "original_position" : 22,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221234122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270963373",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271006988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271006988"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: introduce unused ChainActive()\" (b5627060df9c7876d91391e34c84a7e4fb1ff378)\r\n\r\nLine seems unrelated to this commit. Maybe move to commit that first uses this.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-01T18:59:57Z",
      "diff_hunk" : "@@ -614,6 +614,11 @@ void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n /** The currently-connected chain of blocks (protected by cs_main). */\n extern CChain& chainActive;\n \n+extern CChainState g_chainstate;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271006988",
      "id" : 271006988,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTAwNjk4OA==",
      "original_commit_id" : "b5627060df9c7876d91391e34c84a7e4fb1ff378",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221234122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271006988",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271010773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271010773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: introduce ChainstateActive()\" (612d1b5df556eb70eb5fb670d166a1d7927e6efc)\r\n\r\nThis is returning a pointer, but none of the places calling it are checking null, so it seems like it'd be better to return a reference instead. Also would make `ChainstateActive()` more consistent with `ChainActive()`",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-01T19:10:52Z",
      "diff_hunk" : "@@ -60,6 +60,8 @@\n \n CChainState g_chainstate;\n \n+CChainState* ChainstateActive() { return &g_chainstate; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271010773",
      "id" : 271010773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTAxMDc3Mw==",
      "original_commit_id" : "612d1b5df556eb70eb5fb670d166a1d7927e6efc",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 221234122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271010773",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271014661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271014661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does `CBlockIndexWorkComparator` have to be in the header or would it be sufficient to forward declare and put the implementation in the cpp file only?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-01T19:22:48Z",
      "diff_hunk" : "@@ -437,6 +438,161 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+namespace {\n+    struct CBlockIndexWorkComparator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271014661",
      "id" : 271014661,
      "in_reply_to_id" : 270963373,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTAxNDY2MQ==",
      "original_commit_id" : "77e5c902168ca2191448c5f8924b6831dc2717b9",
      "original_position" : 22,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221299363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271014661",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271018669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271018669"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It has to be in the header because it affects the layout of the CChainState object.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-01T19:34:55Z",
      "diff_hunk" : "@@ -437,6 +438,161 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+namespace {\n+    struct CBlockIndexWorkComparator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271018669",
      "id" : 271018669,
      "in_reply_to_id" : 270963373,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTAxODY2OQ==",
      "original_commit_id" : "77e5c902168ca2191448c5f8924b6831dc2717b9",
      "original_position" : 22,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221304557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271018669",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271434904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271434904"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: FlushStateToDisk -> CChainState\" (c9d13d26314e2368562a1612bc0c89f3099c4154)\r\n\r\nCould keep this comment, I think it applies to the whole block of function declarations.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T18:16:44Z",
      "diff_hunk" : "@@ -158,15 +158,6 @@ std::unique_ptr<CCoinsViewDB> pcoinsdbview;\n std::unique_ptr<CCoinsViewCache> pcoinsTip;\n std::unique_ptr<CBlockTreeDB> pblocktree;\n \n-enum class FlushStateMode {\n-    NONE,\n-    IF_NEEDED,\n-    PERIODIC,\n-    ALWAYS\n-};\n-\n-// See definition for documentation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271434904",
      "id" : 271434904,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQzNDkwNA==",
      "original_commit_id" : "c9d13d26314e2368562a1612bc0c89f3099c4154",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271434904",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271440899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271440899"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: FlushStateToDisk -> CChainState\" (c9d13d26314e2368562a1612bc0c89f3099c4154)\r\n\r\nI think it'd be better not to have these default parameters and chain guessing code:\r\n\r\n```c++\r\nif (!chainstate) {\r\n    chainstate = ::ChainstateActive();\r\n}\r\n```\r\n\r\nIt seems like choosing a chain implicitly makes the call sites less straightforward, and increases the risk of a bug due to using the wrong chain.\r\n\r\nAlso, I don't think having these defaults arguments would be a good idea even if they made the diff smaller, but I think they might actually make it bigger, since these functions aren't called very many places.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T18:31:26Z",
      "diff_hunk" : "@@ -290,9 +291,9 @@ void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Flush all state, indexes and buffers to disk. */\n-void FlushStateToDisk();\n+void FlushStateToDisk(CChainState* chainstate = nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271440899",
      "id" : 271440899,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQ0MDg5OQ==",
      "original_commit_id" : "c9d13d26314e2368562a1612bc0c89f3099c4154",
      "original_position" : 13,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271440899",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271504421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271504421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: IsInitialBlockDownload -> CChainState\" (e9fab103e6f81cf32b09618ea9a70540616f7da8)\r\n\r\nWould call this `m_cached_in_ibd` or something to indicate the value may not be up to date. I could imagine incorrect code that checks `m_in_ibd` when it should be calling `IsInitialBlockDownload` instead. Calling this \"cached\" would make the bug more obvious. \r\n\r\nCould also update the comment above to suggest calling IsInitialBlockDownload instead of accessing this variable.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T21:33:04Z",
      "diff_hunk" : "@@ -540,6 +538,14 @@ class CChainState {\n      */\n     CCriticalSection m_cs_chainstate;\n \n+    /**\n+     * Is this chainstate undergoing initial block download?\n+     *\n+     * Mutable because we need to be able to mark IsInitialBlockDownload()\n+     * const, which toggles this for caching purposes.\n+     */\n+    mutable std::atomic<bool> m_is_ibd;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271504421",
      "id" : 271504421,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUwNDQyMQ==",
      "original_commit_id" : "e9fab103e6f81cf32b09618ea9a70540616f7da8",
      "original_position" : 19,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271504421",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271506825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271506825"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"move-onlyish: move CCoinsViewErrorCatcher out of init.cpp\" (e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3)\r\n\r\nI think this comment makes more sense in the place where it was written previously (in class definition rather than in GetCoin method implementation).",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T21:40:59Z",
      "diff_hunk" : "@@ -258,3 +258,21 @@ const Coin& AccessByTxid(const CCoinsViewCache& view, const uint256& txid)\n     }\n     return coinEmpty;\n }\n+\n+bool CCoinsViewErrorCatcher::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n+    try {\n+        return CCoinsViewBacked::GetCoin(outpoint, coin);\n+    } catch(const std::runtime_error& e) {\n+        for (auto f : m_err_callbacks) {\n+            f();\n+        }\n+        LogPrintf(\"Error reading from database: %s\\n\", e.what());\n+        // Starting the shutdown sequence and returning false to the caller would be\n+        // interpreted as 'entry not found' (as opposed to unable to read data), and\n+        // could lead to invalid interpretation. Just exit immediately, as we can't\n+        // continue anyway, and all writes should be atomic.\n+        std::abort();\n+    }\n+\n+    // Writes do not need similar protection, as failure to write is handled by the caller.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271506825",
      "id" : 271506825,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUwNjgyNQ==",
      "original_commit_id" : "e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3",
      "original_position" : 20,
      "path" : "src/coins.cpp",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271506825",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271507466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271507466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"move-onlyish: move CCoinsViewErrorCatcher out of init.cpp\" (e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3)\r\n\r\nSpacing seems off, maybe use clang-format for the new code.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T21:43:04Z",
      "diff_hunk" : "@@ -311,4 +313,28 @@ void AddCoins(CCoinsViewCache& cache, const CTransaction& tx, int nHeight, bool\n //! lookups to database, so it should be used with care.\n const Coin& AccessByTxid(const CCoinsViewCache& cache, const uint256& txid);\n \n+/**\n+ * This is a minimally invasive approach to shutdown on LevelDB read errors from the\n+ * chainstate, while keeping user interface out of the common library, which is shared\n+ * between bitcoind, and bitcoin-qt and non-server tools.\n+*/\n+class CCoinsViewErrorCatcher final : public CCoinsViewBacked\n+{\n+public:\n+    typedef std::function<void()> Function;\n+\n+    explicit CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n+\n+    void AddReadErrCallback(const Function f) {\n+      m_err_callbacks.push_back(f);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271507466",
      "id" : 271507466,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUwNzQ2Ng==",
      "original_commit_id" : "e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3",
      "original_position" : 33,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271507466",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271508985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271508985"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"move-onlyish: move CCoinsViewErrorCatcher out of init.cpp\" (e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3)\r\n\r\nNot a big deal, but it would be nice to avoid copies:\r\n\r\n```\r\nvoid AddReadErrCallback(Function f) {\r\n    m_err_callbacks.emplace_back(std::move(f));\r\n}\r\n```",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T21:48:04Z",
      "diff_hunk" : "@@ -311,4 +313,28 @@ void AddCoins(CCoinsViewCache& cache, const CTransaction& tx, int nHeight, bool\n //! lookups to database, so it should be used with care.\n const Coin& AccessByTxid(const CCoinsViewCache& cache, const uint256& txid);\n \n+/**\n+ * This is a minimally invasive approach to shutdown on LevelDB read errors from the\n+ * chainstate, while keeping user interface out of the common library, which is shared\n+ * between bitcoind, and bitcoin-qt and non-server tools.\n+*/\n+class CCoinsViewErrorCatcher final : public CCoinsViewBacked\n+{\n+public:\n+    typedef std::function<void()> Function;\n+\n+    explicit CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n+\n+    void AddReadErrCallback(const Function f) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271508985",
      "id" : 271508985,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUwODk4NQ==",
      "original_commit_id" : "e8e09fcb16b7e358a88b4f38d0d8af49a3eafac3",
      "original_position" : 32,
      "path" : "src/coins.h",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271508985",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271513853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271513853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: move block metadata into BlockMetadataManager\" (155ee896520e51b8a13d6904e3a14b5fa50295c0)\r\n\r\nIt seems like a step backwards to be replacing a local reference with a global reference. I get that BlockMetadataManager is a singleton shared between multiple chainstates, but I think it's a mistake to add global references to it all over the code. If you could add a `BlockMetadataManager& m_blockmetaman` member to CChainState (also needs forward declaration and initialization in constructor), and replace \r\n`g_blockmetaman` with `m_blockmetaman` where possible, I think it would help make relationship between the classes clearer, and also be a step in the direction of making validation code more testable and possible to break apart.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-02T22:04:54Z",
      "diff_hunk" : "@@ -1148,7 +1209,7 @@ void static InvalidChainFound(CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(c\n void CChainState::InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state) {\n     if (!state.CorruptionPossible()) {\n         pindex->nStatus |= BLOCK_FAILED_VALID;\n-        m_failed_blocks.insert(pindex);\n+        g_blockmetaman.m_failed_blocks.insert(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271513853",
      "id" : 271513853,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUxMzg1Mw==",
      "original_commit_id" : "155ee896520e51b8a13d6904e3a14b5fa50295c0",
      "original_position" : 101,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 221823542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271513853",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-03T17:19:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-479580954",
      "id" : 479580954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTU4MDk1NA==",
      "updated_at" : "2019-04-03T17:19:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479580954",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271901526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271901526"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: have CCoins* data managed under CChainState\" (525df322de8e6803f41a56aff16bfc1ebe95f845)\r\n\r\nI don't see any problems with this change, but it seems strange that previous code called pcoinsdbview.reset() and pcoinscatcher.reset() above, and then reset them again here, when it could have just set them once above like this commit is doing now.\r\n\r\nJust asking for reassurance that previous code didn't intentionally reset these twice, since now they're only set once.\r\n\r\nI guess this is ok assuming `fReset || fReindexChainState` has the same value above?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T19:41:02Z",
      "diff_hunk" : "@@ -1501,33 +1505,23 @@ bool AppInitMain(InitInterfaces& interfaces)\n                 // At this point we're either in reindex or we've loaded a useful\n                 // block tree into mapBlockIndex!\n \n-                pcoinsdbview.reset(new CCoinsViewDB(nCoinDBCache, false, fReset || fReindexChainState));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271901526",
      "id" : 271901526,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkwMTUyNg==",
      "original_commit_id" : "525df322de8e6803f41a56aff16bfc1ebe95f845",
      "original_position" : 65,
      "path" : "src/init.cpp",
      "position" : 175,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271901526",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271905870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271905870"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: have CCoins* data managed under CChainState\" (525df322de8e6803f41a56aff16bfc1ebe95f845)\r\n\r\nNote: I was confused why `init.cpp` seemed to sometimes use `::ChainstateActive()->` and other places use `g_chainstate.` for apparently no reason. I think I would have preferred using `g_chainstate.` in the init.cpp file consistently and reserving `ChainstateActive` for network and validation code. But I think it doesn't matter ultimately because `g_chainstate` is replaced in a later commit by `g_chainman`.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T19:52:59Z",
      "diff_hunk" : "@@ -228,7 +226,7 @@ void Shutdown(InitInterfaces& interfaces)\n     }\n \n     // FlushStateToDisk generates a ChainStateFlushed callback, which we should avoid missing\n-    if (pcoinsTip != nullptr) {\n+    if (::ChainstateActive()->CoinsCache() != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271905870",
      "id" : 271905870,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkwNTg3MA==",
      "original_commit_id" : "525df322de8e6803f41a56aff16bfc1ebe95f845",
      "original_position" : 21,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271905870",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271910014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271910014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: have CCoins* data managed under CChainState\" (525df322de8e6803f41a56aff16bfc1ebe95f845)\r\n\r\nMinor point, but I like the old name `CoinsTip` better than the new name `CoinsCache`. Just imagining seeing this code for the first time, I would expect the \"db\" object to be the object I should be reading and writing state to, and the \"cache\" object to be something used for optimization that I shouldn't mess around with.\r\n\r\nIn reality though, almost all code should be using the \"cache\" object and ignoring the \"db\" object, so I think \"cache\" is not a great name and \"tip\" would be better shorthand because this is the view you should be using if you care about data at the state of the tip.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:04:51Z",
      "diff_hunk" : "@@ -520,21 +545,40 @@ class CChainState {\n      */\n     mutable std::atomic<bool> m_is_ibd;\n \n+    //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n+    std::unique_ptr<CoinsViews> m_coins_views;\n+\n public:\n+    CChainState(\n+        /* parameters forwarded to CoinsViews */\n+        size_t cache_size_bytes,\n+        bool in_memory,\n+        bool should_wipe,\n+        std::string leveldb_name = \"chainstate\"\n+        ) : m_is_ibd(false)\n+    {\n+        m_coins_views.reset(new CoinsViews(\n+            leveldb_name, cache_size_bytes, in_memory, should_wipe));\n+    }\n+\n     /**\n      * The current chain of blockheaders we consult and build on.\n      *\n      * @see CChain, CBlockIndex.\n      */\n     CChain m_chain;\n+\n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n      * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n      * missing the data for the block.\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n \n-    CBlockIndex *pindexBestInvalid = nullptr;\n+    CCoinsViewCache* CoinsCache() { return m_coins_views->m_cacheview.get(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271910014",
      "id" : 271910014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxMDAxNA==",
      "original_commit_id" : "525df322de8e6803f41a56aff16bfc1ebe95f845",
      "original_position" : 83,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271910014",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271911197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271911197"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: have CCoins* data managed under CChainState\" (525df322de8e6803f41a56aff16bfc1ebe95f845)\r\n\r\nI think these three functions should be returning references instead of pointers, and maybe asserting the underlying unique_ptrs are set, since no callers are ever checking to see if the pointers are null.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:08:19Z",
      "diff_hunk" : "@@ -520,21 +545,40 @@ class CChainState {\n      */\n     mutable std::atomic<bool> m_is_ibd;\n \n+    //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n+    std::unique_ptr<CoinsViews> m_coins_views;\n+\n public:\n+    CChainState(\n+        /* parameters forwarded to CoinsViews */\n+        size_t cache_size_bytes,\n+        bool in_memory,\n+        bool should_wipe,\n+        std::string leveldb_name = \"chainstate\"\n+        ) : m_is_ibd(false)\n+    {\n+        m_coins_views.reset(new CoinsViews(\n+            leveldb_name, cache_size_bytes, in_memory, should_wipe));\n+    }\n+\n     /**\n      * The current chain of blockheaders we consult and build on.\n      *\n      * @see CChain, CBlockIndex.\n      */\n     CChain m_chain;\n+\n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n      * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n      * missing the data for the block.\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n \n-    CBlockIndex *pindexBestInvalid = nullptr;\n+    CCoinsViewCache* CoinsCache() { return m_coins_views->m_cacheview.get(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271911197",
      "id" : 271911197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxMTE5Nw==",
      "original_commit_id" : "525df322de8e6803f41a56aff16bfc1ebe95f845",
      "original_position" : 83,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271911197",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271912920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271912920"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"move-only: move coins statistics utils out of RPC\" (56ad8d226539a44daef02f479fab1820c536731f)\r\n\r\nMaybe preserve the original copyright right years if you are moving existing code to a new file.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:13:14Z",
      "diff_hunk" : "@@ -0,0 +1,73 @@\n+// Copyright (c) 2019 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271912920",
      "id" : 271912920,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxMjkyMA==",
      "original_commit_id" : "56ad8d226539a44daef02f479fab1820c536731f",
      "original_position" : 1,
      "path" : "src/coinstats.cpp",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271912920",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271915175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271915175"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validationinterface: add unused CChainState parameter\" (0b33ff5bcba7f2aa357a1a12fe1e1452c23defb7)\r\n\r\nWill these new chainstate parameters ever be null? Is any implementation ever going to check that they are not null before using them? Would suggest changing to `const CChainState& chainstate` to avoid mishaps otherwise.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:19:35Z",
      "diff_hunk" : "@@ -86,7 +87,11 @@ class CValidationInterface {\n      *\n      * Called on a background thread.\n      */\n-    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n+    virtual void UpdatedBlockTip(\n+        const CChainState* chainstate,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271915175",
      "id" : 271915175,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxNTE3NQ==",
      "original_commit_id" : "0b33ff5bcba7f2aa357a1a12fe1e1452c23defb7",
      "original_position" : 14,
      "path" : "src/validationinterface.h",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271915175",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271916764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271916764"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"chain: add unused CChain::FakeNTx\" (ebc844e8a1bacfe603db85ef4deae6e1f109cd57)\r\n\r\nNote: I don't know if this comment is true, but it _feels_ true.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:24:01Z",
      "diff_hunk" : "@@ -459,6 +459,9 @@ class CChain {\n     /** Set/initialize a chain with a given tip. */\n     void SetTip(CBlockIndex *pindex);\n \n+    /** Ensure all members of this chain have a truthy nTx/nChainTx value. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271916764",
      "id" : 271916764,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxNjc2NA==",
      "original_commit_id" : "ebc844e8a1bacfe603db85ef4deae6e1f109cd57",
      "original_position" : 4,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271916764",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271917898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271917898"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"chain: add unused CChain::FakeNTx\" (ebc844e8a1bacfe603db85ef4deae6e1f109cd57)\r\n\r\nIt seems really unfortunate that this is necessary just to report progress. Are there alternative ways to change the progress function so this would not be required?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:27:24Z",
      "diff_hunk" : "@@ -20,6 +20,20 @@ void CChain::SetTip(CBlockIndex *pindex) {\n     }\n }\n \n+void CChain::FakeNTx(unsigned int nChainTx) {\n+    for (CBlockIndex* index : vChain) {\n+        if (!index->nTx) {\n+            index->nTx = 1;\n+        }\n+        index->nChainTx = index->pprev ? index->pprev->nChainTx + index->nTx : 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271917898",
      "id" : 271917898,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxNzg5OA==",
      "original_commit_id" : "ebc844e8a1bacfe603db85ef4deae6e1f109cd57",
      "original_position" : 9,
      "path" : "src/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271917898",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271919012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271919012"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add unused SnapshotMetadata class\" (50d8e7c910edec10dcf08beec577c3efd67f2276)\r\n\r\nWould add comments to describe these other fields.\r\n\r\nIn particular, I'm curious why `m_validation_complete` would be a field that gets serialized as opposed to a memory-only state.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-03T20:30:25Z",
      "diff_hunk" : "@@ -657,6 +658,46 @@ bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, C\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Serialized version of a UTXO set from which an assumed-valid CChainState\n+ * can be constructed.\n+ */\n+class SnapshotMetadata\n+{\n+public:\n+    CDiskBlockIndex m_base_blockheader;\n+    uint256 m_utxo_contents_hash = {};\n+    uint64_t m_coins_count = 0;\n+    /**\n+     * Necessary to \"fake\" the base nChainTx so that we can estimate progress during\n+     * snapshot IBD.\n+     */\n+    unsigned int m_nchaintx = 0;\n+    bool m_validation_complete = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271919012",
      "id" : 271919012,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTkxOTAxMg==",
      "original_commit_id" : "50d8e7c910edec10dcf08beec577c3efd67f2276",
      "original_position" : 27,
      "path" : "src/validation.h",
      "position" : 334,
      "pull_request_review_id" : 222413883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271919012",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272220495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272220495"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add dumptxoutset\" (71a65a08213b0159d4e4df2199d9993547f163e4)\r\n\r\nDo you want to allow overwriting existing files? If so, should include a comment saying it's intentional, since this could be potentially dangerous (overwriting wallet files, etc). If not, should check `fs::exists(path)`.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T14:54:30Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272220495",
      "id" : 272220495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjIyMDQ5NQ==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 199,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272220495",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272223330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272223330"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add dumptxoutset\" (71a65a08213b0159d4e4df2199d9993547f163e4)\r\n\r\nDo you want to allow path to be relative? If not, should error when `fs::path(path).is_relative()`. If so, should probably interpret path relative to a known location like the datadir (`fs::path path = fs::absolute(request.params[0].get_str(), GetDataDir())`), instead of relative to whatever the current directory was when starting bitcoind or bitcoin-qt.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T15:00:03Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272223330",
      "id" : 272223330,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjIyMzMzMA==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 24,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272223330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272224035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272224035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add dumptxoutset\" (71a65a08213b0159d4e4df2199d9993547f163e4)\r\n\r\nNot sure, but it might be useful to mention if this flushes the cache.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T15:01:34Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272224035",
      "id" : 272224035,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjIyNDAzNQ==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 15,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272224035",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272226729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272226729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add dumptxoutset\" (71a65a08213b0159d4e4df2199d9993547f163e4)\r\n\r\nCan you add a comment about synchronization and atomicity here. It's unclear why it's safe to do all this without locking cs_main. Or is this assuming that another flush won't happen in the background?\r\n\r\nAlso, is it ok for this and `GetUTXOStats` to be using different cursor objects?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T15:07:17Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272226729",
      "id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjIyNjcyOQ==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272226729",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272308326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272308326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add dumptxoutset\" (71a65a08213b0159d4e4df2199d9993547f163e4)\r\n\r\nIt is strange to return a formatted string from an RPC. Would seem better to return something structured like `{\"coins_written\": stats.coins_count}`",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T18:24:07Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;\n+            afile << coin;\n+        }\n+\n+        pcursor->Next();\n+    }\n+\n+    afile.fclose();\n+    return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272308326",
      "id" : 272308326,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMwODMyNg==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 65,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272308326",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272311275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272311275"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: add CChainState::ActivateBestChain\" (deca3be21d35ca661e047512f74c805ee24ecb16)\r\n\r\nCommit description is misleading. This commit is only documenting the method, not adding it. And I guess it is making the last block argument optional.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T18:32:07Z",
      "diff_hunk" : "@@ -596,7 +596,16 @@ class CChainState {\n         FlushStateMode mode,\n         int nManualPruneHeight = 0);\n \n-    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock);\n+     /**\n+      * Find the best known block, and make it the tip of the block chain\n+      *\n+      * May not be called with cs_main held. May not be called in a\n+      * validationinterface callback.\n+      */\n+    bool ActivateBestChain(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272311275",
      "id" : 272311275,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxMTI3NQ==",
      "original_commit_id" : "deca3be21d35ca661e047512f74c805ee24ecb16",
      "original_position" : 11,
      "path" : "src/validation.h",
      "position" : 235,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272311275",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272311784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272311784"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: add CChainState::ActivateBestChain\" (deca3be21d35ca661e047512f74c805ee24ecb16)\r\n\r\nIt's not clear from this description what the block argument does.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T18:33:29Z",
      "diff_hunk" : "@@ -596,7 +596,16 @@ class CChainState {\n         FlushStateMode mode,\n         int nManualPruneHeight = 0);\n \n-    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock);\n+     /**\n+      * Find the best known block, and make it the tip of the block chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272311784",
      "id" : 272311784,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxMTc4NA==",
      "original_commit_id" : "deca3be21d35ca661e047512f74c805ee24ecb16",
      "original_position" : 6,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272311784",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272314847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272314847"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"trivial: add CChainState::ToString()\" (10973e8e1dfd1951a98bf0de4c98b8cee385d70d)\r\n\r\n`m_from_snapshot_blockhash` variable isn't introduced yet, so this doesn't compile",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T18:41:32Z",
      "diff_hunk" : "@@ -4593,6 +4593,14 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n+std::string CChainState::ToString()\n+{\n+    CBlockIndex* tip = m_chain.Tip();\n+    return tfm::format(\"Chainstate [%s] @ height %d (%s)\",\n+        m_from_snapshot_blockhash.IsNull() ? \"ibd\" : \"snapshot\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272314847",
      "id" : 272314847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxNDg0Nw==",
      "original_commit_id" : "10973e8e1dfd1951a98bf0de4c98b8cee385d70d",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : 1122,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272314847",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272317689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272317689"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: move block metadata into BlockMetadataManager\" (155ee896520e51b8a13d6904e3a14b5fa50295c0)\r\n\r\nThis commit causes some lock annotation errors:\r\n\r\n```\r\n  CXX      libbitcoin_server_a-validation.o\r\nvalidation.cpp:114:48: error: reading variable 'm_block_index' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n        for (const BlockMap::value_type& entry : m_block_index) {\r\n                                               ^\r\nvalidation.cpp:114:48: error: reading variable 'm_block_index' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\nvalidation.cpp:118:9: error: reading variable 'm_block_index' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n        m_block_index.clear();\r\n        ^\r\nvalidation.cpp:3725:29: error: reading variable 'mapBlockIndex' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n    vSortedByHeight.reserve(mapBlockIndex.size());\r\n                            ^\r\nvalidation.cpp:3726:61: error: reading variable 'mapBlockIndex' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n    for (const std::pair<const uint256, CBlockIndex*>& item : mapBlockIndex)\r\n                                                            ^\r\nvalidation.cpp:3726:61: error: reading variable 'mapBlockIndex' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n6 errors generated.\r\nMakefile:7627: recipe for target 'libbitcoin_server_a-validation.o' failed\r\n```",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T18:48:55Z",
      "diff_hunk" : "@@ -64,6 +64,72 @@ CChainState* ChainstateActive() { return &g_chainstate; }\n \n CChain& ChainActive() { return g_chainstate.m_chain; }\n \n+/**\n+ * Maintains a tree of blocks (stored in `m_block_index`) which is consulted\n+ * to determine where the most-work tip is.\n+ *\n+ * This data is used mostly in `CChainState` - information about, e.g.,\n+ * candidate tips is not maintained here.\n+ */\n+class BlockMetadataManager {\n+public:\n+    BlockMap m_block_index GUARDED_BY(cs_main);\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk m_block_index when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of m_block_index to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk m_block_index in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+public:\n+    /*\n+     * All pairs A->B, where A (or one of its ancestors) misses transactions, but B has transactions.\n+     * Pruned nodes may have entries where B is missing data.\n+     */\n+    std::multimap<CBlockIndex*, CBlockIndex*> m_blocks_unlinked;\n+\n+    CBlockIndex *m_pindex_best_invalid = nullptr;\n+\n+    bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree);\n+\n+    void Unload() {\n+        m_failed_blocks.clear();\n+        m_blocks_unlinked.clear();\n+        m_pindex_best_invalid = nullptr;\n+\n+        for (const BlockMap::value_type& entry : m_block_index) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272317689",
      "id" : 272317689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxNzY4OQ==",
      "original_commit_id" : "155ee896520e51b8a13d6904e3a14b5fa50295c0",
      "original_position" : 51,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272317689",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272322784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272322784"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15606#discussion_r271916764\r\n\r\nNow I'm confused about this comment. I thought it meant truthy in the Colbert sense (https://en.wikipedia.org/wiki/Truthiness). But that doesn't work where truthy is used later in https://github.com/bitcoin/bitcoin/commit/8d9b707f609b647fb28ae182a097adc03e718725#diff-349fbb003d5ae550a2e8fa658e475880R777. Since this is C++, it would probably be clearer to say \"non-zero\" here and \"non-null\" there, if that's what is meant.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T19:02:43Z",
      "diff_hunk" : "@@ -459,6 +459,9 @@ class CChain {\n     /** Set/initialize a chain with a given tip. */\n     void SetTip(CBlockIndex *pindex);\n \n+    /** Ensure all members of this chain have a truthy nTx/nChainTx value. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272322784",
      "id" : 272322784,
      "in_reply_to_id" : 271916764,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMyMjc4NA==",
      "original_commit_id" : "ebc844e8a1bacfe603db85ef4deae6e1f109cd57",
      "original_position" : 4,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272322784",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272323444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272323444"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: introduce ChainstateManager, use in init\" (8d9b707f609b647fb28ae182a097adc03e718725)\r\n\r\nProbably clearer to say \"set\" or \"non-null\" here instead of \"truthy\".",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T19:04:42Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * This class was created to displace the use of global variables (e.g.\n+ * chainActive) which were historically used to reference a single active\n+ * chainstate throughout the codebase.\n+ *\n+ * TODO jamesob: basically everything in this class is implicitly covered\n+ *   by `cs_main`. Should probably put some more formalization around\n+ *   locking and maybe add a class-local `cs` CCriticalSection.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    /**\n+     * Temporary holding place for a snapshot chainstate which is in the process of\n+     * being constructed. When ready, we swap with `m_snapshot_chainstate`.\n+     */\n+    std::unique_ptr<CChainState> m_unready_snapshot_chainstate;\n+\n+    /**\n+     * If not empty, this points to metadata corresponding to the UTXO snapshot\n+     * currently in use.\n+     */\n+    std::unique_ptr<SnapshotMetadata> m_snapshot_metadata;\n+\n+    /**\n+     * The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+     * if a snapshot is in use, for background validation. Its contents will\n+     * be freed when background validation of the snapshot has completed.\n+     */\n+    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(cs_main);\n+\n+    /**\n+     * A chainstate initialized on the basis of a UTXO snapshot. If this is\n+     * truthy, it is always our active chainstate unless proven invalid.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272323444",
      "id" : 272323444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMyMzQ0NA==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 107,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272323444",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272325190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272325190"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: introduce ChainstateManager, use in init\" (8d9b707f609b647fb28ae182a097adc03e718725)\r\n\r\nWould drop this. Referencing historical variables in commit and review comments is helpful, but confusing in code comments. If this is supposed to suggest that there are still weird things about the code that could be cleaned up in the future, it would probably be better to say directly what the current problems are and how they might be addressed.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T19:08:55Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * This class was created to displace the use of global variables (e.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272325190",
      "id" : 272325190,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMyNTE5MA==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 75,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272325190",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272326477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272326477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: introduce ChainstateManager, use in init\" (8d9b707f609b647fb28ae182a097adc03e718725)\r\n\r\nIs this supposed to be public? Maybe mention why in comment if so.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T19:12:06Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * This class was created to displace the use of global variables (e.g.\n+ * chainActive) which were historically used to reference a single active\n+ * chainstate throughout the codebase.\n+ *\n+ * TODO jamesob: basically everything in this class is implicitly covered\n+ *   by `cs_main`. Should probably put some more formalization around\n+ *   locking and maybe add a class-local `cs` CCriticalSection.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    /**\n+     * Temporary holding place for a snapshot chainstate which is in the process of\n+     * being constructed. When ready, we swap with `m_snapshot_chainstate`.\n+     */\n+    std::unique_ptr<CChainState> m_unready_snapshot_chainstate;\n+\n+    /**\n+     * If not empty, this points to metadata corresponding to the UTXO snapshot\n+     * currently in use.\n+     */\n+    std::unique_ptr<SnapshotMetadata> m_snapshot_metadata;\n+\n+    /**\n+     * The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+     * if a snapshot is in use, for background validation. Its contents will\n+     * be freed when background validation of the snapshot has completed.\n+     */\n+    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(cs_main);\n+\n+    /**\n+     * A chainstate initialized on the basis of a UTXO snapshot. If this is\n+     * truthy, it is always our active chainstate unless proven invalid.\n+     */\n+    std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(cs_main);\n+\n+public:\n+    /**\n+     * Points to either the ibd or snapshot chainstate; indicates our\n+     * most-work chain.\n+     */\n+    CChainState* m_active_chainstate GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272326477",
      "id" : 272326477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMyNjQ3Nw==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 116,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272326477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272327897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272327897"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: introduce ChainstateManager, use in init\" (8d9b707f609b647fb28ae182a097adc03e718725)\r\n\r\nCan you give a little overview of what is meant by the:\r\n\r\n- unready snapshot chainstate\r\n- ibd chainstate\r\n- snapshot chainstate\r\n- active chainstate\r\n- background validation chainstate\r\n- validated chainstate\r\n\r\nI am getting more than a little lost in the terminology, and it would nice to have it defined briefly in one place.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-04T19:15:55Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272327897",
      "id" : 272327897,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMyNzg5Nw==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 66,
      "path" : "src/validation.h",
      "position" : 362,
      "pull_request_review_id" : 222816088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272327897",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272728241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272728241"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactoring: IsInitialBlockDownload -> CChainState\" (e9fab103e6f81cf32b09618ea9a70540616f7da8):\r\n\r\nStyle guide prefers (and it's a little clearer) to initialize variables like this where they're declared, instead of separately in constructors. Could write `m_is_ibd = false` or `m_is_ibd{false}`",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:09:24Z",
      "diff_hunk" : "@@ -540,6 +538,14 @@ class CChainState {\n      */\n     CCriticalSection m_cs_chainstate;\n \n+    /**\n+     * Is this chainstate undergoing initial block download?\n+     *\n+     * Mutable because we need to be able to mark IsInitialBlockDownload()\n+     * const, which toggles this for caching purposes.\n+     */\n+    mutable std::atomic<bool> m_is_ibd;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272728241",
      "id" : 272728241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjcyODI0MQ==",
      "original_commit_id" : "e9fab103e6f81cf32b09618ea9a70540616f7da8",
      "original_position" : 19,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272728241",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272731017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272731017"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add ChainstateManager::ActivateSnapshot\" (9b6907e080fe4da105a332c76ddb5110310e8840)\r\n\r\nIt would seem better to drop the comment and just assert, or return an error if this is not the case.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:19:48Z",
      "diff_hunk" : "@@ -4872,6 +4872,136 @@ CChainState* ChainstateManager::InitializeChainstate(\n     return to_modify.get();\n }\n \n+bool ChainstateManager::ActivateSnapshot(\n+        CAutoFile* coins_file,\n+        SnapshotMetadata metadata,\n+        size_t cache_size_bytes,\n+        bool in_memory)\n+{\n+    uint256 base_blockhash = metadata.m_base_blockheader.GetBlockHash();\n+\n+    // Important that we haven't set `m_snapshot_metadata` yet before this point.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272731017",
      "id" : 272731017,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczMTAxNw==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272731017",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272732427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272732427"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add ChainstateManager::ActivateSnapshot\" (9b6907e080fe4da105a332c76ddb5110310e8840)\r\n\r\nNot sure, but probably should use interruption_point.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:24:55Z",
      "diff_hunk" : "@@ -4872,6 +4872,136 @@ CChainState* ChainstateManager::InitializeChainstate(\n     return to_modify.get();\n }\n \n+bool ChainstateManager::ActivateSnapshot(\n+        CAutoFile* coins_file,\n+        SnapshotMetadata metadata,\n+        size_t cache_size_bytes,\n+        bool in_memory)\n+{\n+    uint256 base_blockhash = metadata.m_base_blockheader.GetBlockHash();\n+\n+    // Important that we haven't set `m_snapshot_metadata` yet before this point.\n+    CChainState* snapshot_chainstate = InitializeChainstate(\n+        cache_size_bytes, in_memory,\n+        /* should_wipe */ false, /* activate */ false,\n+        /* snapshot_blockhash */ base_blockhash, /* snapshot_needs_initialization */ true);\n+\n+    CCoinsViewCache* coins_cache = snapshot_chainstate->CoinsCache();\n+\n+    CCoinsMap coins_map;\n+    COutPoint outpoint;\n+    Coin coin;\n+    uint64_t coins_count = metadata.m_coins_count;\n+    uint64_t coins_left = metadata.m_coins_count;\n+\n+    LogPrintf(\"[snapshot] loading coins from snapshot %s\\n\", base_blockhash.ToString());\n+\n+    while (coins_left > 0) {\n+        *coins_file >> outpoint;\n+        *coins_file >> coin;\n+        coins_map[outpoint] = CCoinsCacheEntry(std::move(coin), CCoinsCacheEntry::DIRTY);\n+        coins_left -= 1;\n+\n+        if ((coins_count - coins_left) % 1000000 == 0) {\n+            boost::this_thread::interruption_point();\n+            LogPrintf(\"[snapshot] progress=%d\\n\", coins_count - coins_left);\n+        }\n+    }\n+\n+    bool out_of_coins{false};\n+    try {\n+        *coins_file >> outpoint;\n+    } catch (const std::ios_base::failure&) {\n+        // We expect an exception since we should be out of coins.\n+        out_of_coins = true;\n+    }\n+    if (!out_of_coins) {\n+        LogPrintf(\n+            \"[snapshot] Bad snapshot - coins left over after deserializing %d coins\\n\",\n+            coins_count - coins_left);\n+        return false;\n+    }\n+\n+    LogPrintf(\n+        \"[snapshot] loaded %d coins from snapshot %s\\n\",\n+        coins_count - coins_left, base_blockhash.ToString());\n+\n+    // No need to acquire cs_main since this chainstate isn't being used yet.\n+    coins_cache->BatchWrite(coins_map, base_blockhash);\n+    coins_cache->Flush();\n+    assert(coins_cache->GetBestBlock() == base_blockhash);\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(snapshot_chainstate->m_coins_views->m_dbview.get(), stats)) {\n+        LogPrintf(\"[snapshot] failed to generate coins stats\\n\");\n+        return false;\n+    }\n+\n+    if (stats.hashSerialized != metadata.m_utxo_contents_hash) {\n+        LogPrintf(\n+            \"[snapshot] bad snapshot content hash: expected %s, got %s\\n\",\n+            metadata.m_utxo_contents_hash.ToString(), stats.hashSerialized.ToString());\n+        return false;\n+    }\n+    if (stats.coins_count != coins_count) {\n+        LogPrintf(\n+            \"[snapshot] bad snapshot coins count: expected %d, got %d\\n\",\n+            coins_count, stats.coins_count);\n+        return false;\n+    }\n+\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272732427",
      "id" : 272732427,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczMjQyNw==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 85,
      "path" : "src/validation.cpp",
      "position" : 1395,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272732427",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272734025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272734025"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add ChainstateManager::ActivateSnapshot\" (9b6907e080fe4da105a332c76ddb5110310e8840)\r\n\r\nCan the comment say more about this? Will there even be anything in the mempool? Would it make sense to only drop incompatible transactions?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:30:15Z",
      "diff_hunk" : "@@ -814,6 +814,33 @@ class ChainstateManager\n     /** Run some function on all chainstates in use.  */\n     void RunOnAll(const std::function<void(CChainState*)> fn);\n \n+    /**\n+     * Construct and activate a Chainstate on the basis of UTXO snapshot data.\n+     *\n+     * Steps:\n+     *\n+     *   - Initialize an unused CChainState and stash it in\n+     *     `m_unready_snapshot_chainstate`.\n+     *\n+     *   - Load its `CoinsViews` contents from `coins_file`.\n+     *\n+     *   - Verify that the hash of the resulting coinsdb matches the expected hash\n+     *     contained in the snapshot metadata.\n+     *\n+     *   - Wait up to 10 minutes for our headers chain to include the \"base\"\n+     *     block of the snapshot.\n+     *\n+     *   - \"Fast forward\" the tip of the new chainstate to the base of the snapshot,\n+     *     faking nTx* block index data along the way.\n+     *\n+     *   - Move the new chainstate to `m_snapshot_chainstate` and make it our\n+     *     ChainstateActive().\n+     *\n+     *   - Clear the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272734025",
      "id" : 272734025,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczNDAyNQ==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 26,
      "path" : "src/validation.h",
      "position" : 491,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272734025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272736054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272736054"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add ChainstateManager::ActivateSnapshot\" (9b6907e080fe4da105a332c76ddb5110310e8840):\r\n\r\nI don't understand why `m_unready_snapshot_chainstate` is a class member. It seems like it should just be a local variable `auto snapshot = MakeUnique<CChainState>(...)` in this function that gets swapped in with `m_snapshot_chainstate` when it is ready below. This would simplify the class and InitializeChainstate.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:37:28Z",
      "diff_hunk" : "@@ -4872,6 +4872,136 @@ CChainState* ChainstateManager::InitializeChainstate(\n     return to_modify.get();\n }\n \n+bool ChainstateManager::ActivateSnapshot(\n+        CAutoFile* coins_file,\n+        SnapshotMetadata metadata,\n+        size_t cache_size_bytes,\n+        bool in_memory)\n+{\n+    uint256 base_blockhash = metadata.m_base_blockheader.GetBlockHash();\n+\n+    // Important that we haven't set `m_snapshot_metadata` yet before this point.\n+    CChainState* snapshot_chainstate = InitializeChainstate(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272736054",
      "id" : 272736054,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczNjA1NA==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 13,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272736054",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272736888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272736888"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add ChainstateManager::ActivateSnapshot\" (9b6907e080fe4da105a332c76ddb5110310e8840):\r\n\r\nMaybe add NODISCARD since this returns error on failure.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:40:27Z",
      "diff_hunk" : "@@ -814,6 +814,33 @@ class ChainstateManager\n     /** Run some function on all chainstates in use.  */\n     void RunOnAll(const std::function<void(CChainState*)> fn);\n \n+    /**\n+     * Construct and activate a Chainstate on the basis of UTXO snapshot data.\n+     *\n+     * Steps:\n+     *\n+     *   - Initialize an unused CChainState and stash it in\n+     *     `m_unready_snapshot_chainstate`.\n+     *\n+     *   - Load its `CoinsViews` contents from `coins_file`.\n+     *\n+     *   - Verify that the hash of the resulting coinsdb matches the expected hash\n+     *     contained in the snapshot metadata.\n+     *\n+     *   - Wait up to 10 minutes for our headers chain to include the \"base\"\n+     *     block of the snapshot.\n+     *\n+     *   - \"Fast forward\" the tip of the new chainstate to the base of the snapshot,\n+     *     faking nTx* block index data along the way.\n+     *\n+     *   - Move the new chainstate to `m_snapshot_chainstate` and make it our\n+     *     ChainstateActive().\n+     *\n+     *   - Clear the mempool.\n+     */\n+    bool ActivateSnapshot(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272736888",
      "id" : 272736888,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczNjg4OA==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 28,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272736888",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272737578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272737578"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add loadtxoutset\" (f9571218d41304040778655e2f3941042b358dd5)\r\n\r\nShould throw an exception on failure.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:42:50Z",
      "diff_hunk" : "@@ -2294,6 +2295,32 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n     return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());\n }\n \n+UniValue loadtxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"dumptxoutset\",\n+                \"\\nLoad the serialized UTXO set from disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path{request.params[0].get_str()};\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    g_chainman.ActivateSnapshot(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272737578",
      "id" : 272737578,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczNzU3OA==",
      "original_commit_id" : "f9571218d41304040778655e2f3941042b358dd5",
      "original_position" : 32,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272737578",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272737759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272737759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add loadtxoutset\" (f9571218d41304040778655e2f3941042b358dd5)\r\n\r\nShould say loadtxoutset",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:43:21Z",
      "diff_hunk" : "@@ -2294,6 +2295,32 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n     return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());\n }\n \n+UniValue loadtxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"dumptxoutset\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272737759",
      "id" : 272737759,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczNzc1OQ==",
      "original_commit_id" : "f9571218d41304040778655e2f3941042b358dd5",
      "original_position" : 16,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272737759",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272738317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272738317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add loadtxoutset\" (f9571218d41304040778655e2f3941042b358dd5)\r\n\r\nLike https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272223330, should probably intepret path relative to datadir",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:45:18Z",
      "diff_hunk" : "@@ -2294,6 +2295,32 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n     return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());\n }\n \n+UniValue loadtxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"dumptxoutset\",\n+                \"\\nLoad the serialized UTXO set from disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path{request.params[0].get_str()};\n+    FILE* file{fsbridge::fopen(path, \"rb\")};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272738317",
      "id" : 272738317,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczODMxNw==",
      "original_commit_id" : "f9571218d41304040778655e2f3941042b358dd5",
      "original_position" : 27,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 286,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272738317",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272738640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272738640"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: add loadtxoutset\" (f9571218d41304040778655e2f3941042b358dd5)\r\n\r\nLike https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272308326, should probably return json information instead of human readable string.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T20:46:41Z",
      "diff_hunk" : "@@ -2294,6 +2295,32 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n     return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());\n }\n \n+UniValue loadtxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"dumptxoutset\",\n+                \"\\nLoad the serialized UTXO set from disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path{request.params[0].get_str()};\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    g_chainman.ActivateSnapshot(\n+        &afile, metadata, ::ChainstateActive()->m_coins_cache_size_bytes, false);\n+\n+    return tfm::format(\"Loaded snapshot %s\", metadata.m_base_blockheader.GetBlockHash().ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272738640",
      "id" : 272738640,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjczODY0MA==",
      "original_commit_id" : "f9571218d41304040778655e2f3941042b358dd5",
      "original_position" : 35,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272738640",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272742396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272742396"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272327897\r\n\r\n> Can you give a little overview of what is meant by the:\r\n>\r\n> - unready snapshot chainstate\r\n> - ibd chainstate\r\n> - snapshot chainstate\r\n> - active chainstate\r\n> - background validation chainstate\r\n> - validated chainstate\r\n\r\nMore chainstates from commit \"validation: introduce ChainstateManager::GetChainstateForNewBlock\" (6d85241c236f563715d4a982651fd1815d76dbd2):\r\n\r\n- most-work chainstate\r\n- validation chainstate (different from validated chainstate?)\r\n",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T21:00:39Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272742396",
      "id" : 272742396,
      "in_reply_to_id" : 272327897,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Mjc0MjM5Ng==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 66,
      "path" : "src/validation.h",
      "position" : 362,
      "pull_request_review_id" : 223458511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272742396",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272743599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272743599"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: introduce ChainstateManager::GetChainstateForNewBlock\" (6d85241c236f563715d4a982651fd1815d76dbd2)\r\n\r\nLike other places, callers never seem to be checking for null. This should just use references and return `*m_snapshot_chainstate` instead of `m_snapshot_chainstate.get()`.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-05T21:05:06Z",
      "diff_hunk" : "@@ -5002,6 +5010,16 @@ bool ChainstateManager::ActivateSnapshot(\n     return true;\n }\n \n+CChainState* ChainstateManager::GetChainstateForNewBlock(const uint256& blockhash)\n+{\n+    if (m_snapshot_chainstate &&\n+            !m_snapshot_chainstate->m_chain.Contains(LookupBlockIndex(blockhash))) {\n+        return m_snapshot_chainstate.get();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r272743599",
      "id" : 272743599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Mjc0MzU5OQ==",
      "original_commit_id" : "6d85241c236f563715d4a982651fd1815d76dbd2",
      "original_position" : 46,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 223478991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272743599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273085866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273085866"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry, I guess \"truthy\" is colloquial to Python: https://stackoverflow.com/questions/39983695/what-is-truthy-and-falsy-in-python-how-is-it-different-from-true-and-false",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-08T14:46:47Z",
      "diff_hunk" : "@@ -459,6 +459,9 @@ class CChain {\n     /** Set/initialize a chain with a given tip. */\n     void SetTip(CBlockIndex *pindex);\n \n+    /** Ensure all members of this chain have a truthy nTx/nChainTx value. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273085866",
      "id" : 273085866,
      "in_reply_to_id" : 271916764,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzA4NTg2Ng==",
      "original_commit_id" : "ebc844e8a1bacfe603db85ef4deae6e1f109cd57",
      "original_position" : 4,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 223892740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273085866",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273571494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273571494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note: this needs to be rewritten to avoid assuming that the user has enough free memory to fit the entire snapshot. Right now it'll OOM on machines with less than 3.2GB mem available.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-09T16:13:22Z",
      "diff_hunk" : "@@ -4872,3 +4906,329 @@ class CMainCleanup\n         mapBlockIndex.clear();\n     }\n } instance_of_cmaincleanup;\n+\n+//\n+// ChainstateManager\n+//\n+\n+void ChainstateManager::SaveSnapshotMetadataToDisk() const\n+{\n+    fs::path path = GetDataDir() / \"chainstate_snapshot.dat\";\n+    FILE* out = fsbridge::fopen(path, \"wb\");\n+    CAutoFile file(out, SER_DISK, CLIENT_VERSION);\n+    file << *m_snapshot_metadata;\n+    LogPrintf(\"[snapshot] wrote snapshot metadata to %s\\n\", path);\n+}\n+\n+bool ChainstateManager::DeleteSnapshotMetadataFromDisk() const\n+{\n+    LogPrintf(\"[snapshot] %s: deleting chainstate_snapshot.dat\\n\", __func__);\n+    return fs::remove(GetDataDir() / \"chainstate_snapshot.dat\");\n+}\n+\n+bool ChainstateManager::LoadSnapshotMetadata()\n+{\n+    fs::path path = GetDataDir() / \"chainstate_snapshot.dat\";\n+    CAutoFile in{fsbridge::fopen(path, \"rb\"), SER_DISK, CLIENT_VERSION};\n+    if (in.IsNull()) {\n+        LogPrintf(\"[snapshot] no snapshot metadata found at %s\\n\", path);\n+        return false;\n+    }\n+    SnapshotMetadata metadata;\n+    in >> metadata;\n+    m_snapshot_metadata = MakeUnique<SnapshotMetadata>(metadata);\n+    return true;\n+}\n+\n+std::vector<CChainState*> ChainstateManager::GetAll()\n+{\n+    std::vector<CChainState*> out;\n+\n+    if (!IsSnapshotValidated() && m_ibd_chainstate) {\n+        out.push_back(m_ibd_chainstate.get());\n+    }\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+\n+    return out;\n+}\n+\n+void ChainstateManager::RunOnAll(\n+    const std::function<void(CChainState*)> fn)\n+{\n+    for (CChainState* chainstate : GetAll()) {\n+        fn(chainstate);\n+    }\n+}\n+\n+std::vector<CChainState*> ChainstateManager::GetAllForBlockDownload()\n+{\n+    std::vector<CChainState*> out;\n+\n+    if (m_snapshot_chainstate) out.push_back(m_snapshot_chainstate.get());\n+    if (!IsSnapshotValidated() && m_ibd_chainstate) out.push_back(m_ibd_chainstate.get());\n+\n+    return out;\n+}\n+\n+CChainState* ChainstateManager::InitializeChainstate(\n+    size_t cache_size_bytes,\n+    bool in_memory,\n+    bool should_wipe,\n+    bool activate,\n+    const uint256& snapshot_blockhash,\n+    bool snapshot_needs_initialization)\n+{\n+    // If we don't yet have metadata for the snapshot, we need to do some extra processing\n+    // before it's ready for use, so stash it in `m_unready_snapshot_chainstate` to be\n+    // processed in ActivateSnapshot().\n+    std::unique_ptr<CChainState>& to_modify = (\n+        snapshot_blockhash.IsNull() ? m_ibd_chainstate :\n+            snapshot_needs_initialization ? m_unready_snapshot_chainstate : m_snapshot_chainstate);\n+\n+    to_modify.reset(new CChainState(\n+        cache_size_bytes, in_memory, should_wipe, \"chainstate\", snapshot_blockhash));\n+\n+    if (activate) {\n+        LogPrintf(\"Switching active chainstate to %s\\n\", snapshot_blockhash.ToString());\n+        m_active_chainstate = to_modify.get();\n+    }\n+\n+    return to_modify.get();\n+}\n+\n+bool ChainstateManager::ActivateSnapshot(\n+        CAutoFile* coins_file,\n+        SnapshotMetadata metadata,\n+        size_t cache_size_bytes,\n+        bool in_memory)\n+{\n+    uint256 base_blockhash = metadata.m_base_blockheader.GetBlockHash();\n+\n+    // Important that we haven't set `m_snapshot_metadata` yet before this point.\n+    CChainState* snapshot_chainstate = InitializeChainstate(\n+        cache_size_bytes, in_memory,\n+        /* should_wipe */ false, /* activate */ false,\n+        /* snapshot_blockhash */ base_blockhash, /* snapshot_needs_initialization */ true);\n+\n+    CCoinsViewCache* coins_cache = snapshot_chainstate->CoinsCache();\n+\n+    CCoinsMap coins_map;\n+    COutPoint outpoint;\n+    Coin coin;\n+    uint64_t coins_count = metadata.m_coins_count;\n+    uint64_t coins_left = metadata.m_coins_count;\n+\n+    LogPrintf(\"[snapshot] loading coins from snapshot %s\\n\", base_blockhash.ToString());\n+\n+    while (coins_left > 0) {\n+        *coins_file >> outpoint;\n+        *coins_file >> coin;\n+        coins_map[outpoint] = CCoinsCacheEntry(std::move(coin), CCoinsCacheEntry::DIRTY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273571494",
      "id" : 273571494,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzU3MTQ5NA==",
      "original_commit_id" : "1bb64fcf1cb94e28c4090909e229f546757d25de",
      "original_position" : 2169,
      "path" : "src/validation.cpp",
      "position" : 1319,
      "pull_request_review_id" : 224508553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273571494",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273572305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273572305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "TODO: should add a check here that the user hasn't loaded any wallets with a bestblock height of less than the base of the snapshot.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-09T16:15:24Z",
      "diff_hunk" : "@@ -2296,6 +2231,133 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;\n+            afile << coin;\n+        }\n+\n+        pcursor->Next();\n+    }\n+\n+    afile.fclose();\n+    return tfm::format(\"%d coins written at tip %s\", stats.coins_count, tip->ToString());\n+}\n+\n+UniValue loadtxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"dumptxoutset\",\n+                \"\\nLoad the serialized UTXO set from disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273572305",
      "id" : 273572305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzU3MjMwNQ==",
      "original_commit_id" : "1bb64fcf1cb94e28c4090909e229f546757d25de",
      "original_position" : 403,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 281,
      "pull_request_review_id" : 224509656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273572305",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273647684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273647684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, agree with you. Will change.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-09T18:44:29Z",
      "diff_hunk" : "@@ -520,21 +545,40 @@ class CChainState {\n      */\n     mutable std::atomic<bool> m_is_ibd;\n \n+    //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n+    std::unique_ptr<CoinsViews> m_coins_views;\n+\n public:\n+    CChainState(\n+        /* parameters forwarded to CoinsViews */\n+        size_t cache_size_bytes,\n+        bool in_memory,\n+        bool should_wipe,\n+        std::string leveldb_name = \"chainstate\"\n+        ) : m_is_ibd(false)\n+    {\n+        m_coins_views.reset(new CoinsViews(\n+            leveldb_name, cache_size_bytes, in_memory, should_wipe));\n+    }\n+\n     /**\n      * The current chain of blockheaders we consult and build on.\n      *\n      * @see CChain, CBlockIndex.\n      */\n     CChain m_chain;\n+\n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n      * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n      * missing the data for the block.\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n \n-    CBlockIndex *pindexBestInvalid = nullptr;\n+    CCoinsViewCache* CoinsCache() { return m_coins_views->m_cacheview.get(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273647684",
      "id" : 273647684,
      "in_reply_to_id" : 271910014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY0NzY4NA==",
      "original_commit_id" : "525df322de8e6803f41a56aff16bfc1ebe95f845",
      "original_position" : 83,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 224588340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273647684",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273656736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273656736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll add comments, but to answer your immediate question: once we complete validation of a snapshot, we update this value to true and write it out to a metadata file on disk. This is so that when we are initializing after a subsequent restart, we know that the snapshot we load in has been validated and we don't need to continue to do a background validation. This would be unnecessary if we renamed the `chainstate_xxx...x` leveldb directory used by the snapshot to `chainstate` after we complete background validation of the snapshot, which is maybe what we should do anyway.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-09T19:05:49Z",
      "diff_hunk" : "@@ -657,6 +658,46 @@ bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, C\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Serialized version of a UTXO set from which an assumed-valid CChainState\n+ * can be constructed.\n+ */\n+class SnapshotMetadata\n+{\n+public:\n+    CDiskBlockIndex m_base_blockheader;\n+    uint256 m_utxo_contents_hash = {};\n+    uint64_t m_coins_count = 0;\n+    /**\n+     * Necessary to \"fake\" the base nChainTx so that we can estimate progress during\n+     * snapshot IBD.\n+     */\n+    unsigned int m_nchaintx = 0;\n+    bool m_validation_complete = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r273656736",
      "id" : 273656736,
      "in_reply_to_id" : 271919012,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY1NjczNg==",
      "original_commit_id" : "50d8e7c910edec10dcf08beec577c3efd67f2276",
      "original_position" : 27,
      "path" : "src/validation.h",
      "position" : 334,
      "pull_request_review_id" : 224599131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273656736",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274043281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274043281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 77e5c902168ca2191448c5f8924b6831dc2717b9:\r\n\r\nI'd prefer not to include a header when a forward declaration is enough.\r\n\r\nSee the following fixup:\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 4676a446f8..a67cd03686 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -22,6 +22,7 @@\r\n #include <policy/policy.h>\r\n #include <policy/rbf.h>\r\n #include <pow.h>\r\n+#include <txmempool.h>\r\n #include <primitives/block.h>\r\n #include <primitives/transaction.h>\r\n #include <random.h>\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex feb92b3774..9ff65e2dce 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -18,7 +18,6 @@\r\n #include <protocol.h> // For CMessageHeader::MessageStartChars\r\n #include <script/script_error.h>\r\n #include <sync.h>\r\n-#include <txmempool.h>\r\n #include <versionbits.h>\r\n \r\n #include <algorithm>\r\n@@ -44,7 +43,7 @@ class CBlockPolicyEstimator;\r\n class CTxMemPool;\r\n class CValidationState;\r\n struct ChainTxData;\r\n-\r\n+struct DisconnectedBlockTransactions;\r\n struct PrecomputedTransactionData;\r\n struct LockPoints;\r\n \r\n",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-10T16:10:46Z",
      "diff_hunk" : "@@ -18,7 +18,11 @@\n #include <protocol.h> // For CMessageHeader::MessageStartChars\n #include <script/script_error.h>\n #include <sync.h>\n+#include <txmempool.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274043281",
      "id" : 274043281,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDA0MzI4MQ==",
      "original_commit_id" : "1bb64fcf1cb94e28c4090909e229f546757d25de",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 225074146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274043281",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274085047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274085047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This hasn't been fixed?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-10T17:55:22Z",
      "diff_hunk" : "@@ -614,6 +614,11 @@ void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n /** The currently-connected chain of blocks (protected by cs_main). */\n extern CChain& chainActive;\n \n+extern CChainState g_chainstate;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274085047",
      "id" : 274085047,
      "in_reply_to_id" : 271006988,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDA4NTA0Nw==",
      "original_commit_id" : "b5627060df9c7876d91391e34c84a7e4fb1ff378",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 225074146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274085047",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274091108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274091108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry - I'm marking these resolved as I rebase locally as a checklist for myself. Instead of pushing each time I rebase, I'm going to push all the changes up once I'm done (today or tomorrow).",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-10T18:10:37Z",
      "diff_hunk" : "@@ -614,6 +614,11 @@ void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n /** The currently-connected chain of blocks (protected by cs_main). */\n extern CChain& chainActive;\n \n+extern CChainState g_chainstate;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274091108",
      "id" : 274091108,
      "in_reply_to_id" : 271006988,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDA5MTEwOA==",
      "original_commit_id" : "b5627060df9c7876d91391e34c84a7e4fb1ff378",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 225134474,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274091108",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274128409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274128409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good advice, thanks. I've renamed the class `BlockManager` and folded the \"global\" instance into `ChainstateManager`, which then injects a reference to that instance when constructing chainstates. Each reference lives as `CChainState.m_blockman`.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-10T19:48:21Z",
      "diff_hunk" : "@@ -1148,7 +1209,7 @@ void static InvalidChainFound(CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(c\n void CChainState::InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state) {\n     if (!state.CorruptionPossible()) {\n         pindex->nStatus |= BLOCK_FAILED_VALID;\n-        m_failed_blocks.insert(pindex);\n+        g_blockmetaman.m_failed_blocks.insert(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274128409",
      "id" : 274128409,
      "in_reply_to_id" : 271513853,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyODQwOQ==",
      "original_commit_id" : "155ee896520e51b8a13d6904e3a14b5fa50295c0",
      "original_position" : 101,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 225180998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274128409",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274470338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274470338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, this is an incorrect relic of this RPC being a hackneyed prototype. We'll probably have to lock cs_main for the duration of this call for now, but I think that'll be prohibitively lengthy when we start generating snapshots as part of normal operation, so down the road we may have to introduce a unique lock for the coinsdb (i.e. to prevent flushes from happening mid-snapshot).\r\n\r\nWe're fine to use different cursor objects so long as the leveldb data hasn't changed between calls (which it obviously won't if we hold cs_main).",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T15:02:37Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274470338",
      "id" : 274470338,
      "in_reply_to_id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ3MDMzOA==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 225595493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274470338",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274474143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274474143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This makes me think that the existing `gettxoutsetinfo` RPC is broken since it isn't locking cs_main during the `GetUTXOStats()` call. I wonder if the author of that function assumed that leveldb handles locking as some kind of RAII associated with use of the iterator, but that's not the case ([DBImpl::NewIterator](https://github.com/bitcoin-core/leveldb/blob/bitcoin-fork/db/db_impl.cc#L1156-L1166), [DBIter](https://github.com/bitcoin-core/leveldb/blob/bitcoin-fork/db/db_iter.cc#L51-L64)).",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T15:09:55Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274474143",
      "id" : 274474143,
      "in_reply_to_id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ3NDE0Mw==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 225600378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274474143",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274479369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274479369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The cursor returned iterates over a snapshot of the database at the time of its creation; the db can be modified simultaneously, but won't affect what the cursor sees.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T15:20:32Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274479369",
      "id" : 274479369,
      "in_reply_to_id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ3OTM2OQ==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 225606956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274479369",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274481307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274481307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sipa I can't find any mention of this behavior in the leveldb docs or header files. I see it happening [here](https://github.com/bitcoin-core/leveldb/blob/bitcoin-fork/db/db_impl.cc#L1159), but do we want to rely on something so implicit?",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T15:24:19Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274481307",
      "id" : 274481307,
      "in_reply_to_id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ4MTMwNw==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 225609346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274481307",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274484277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274484277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should probably make it explicit through the Snapshot API of LevelDB. I thought we already did, actually - so I'm a bit confused how I knew this as I don't remember looking in the code.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T15:29:47Z",
      "diff_hunk" : "@@ -2230,6 +2230,70 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+/**\n+ * Serialize the UTXO set to a file for loading elsewhere.\n+ *\n+ * @see SnapshotMetadata\n+ */\n+UniValue dumptxoutset(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\n+                \"dumptxoutset\",\n+                \"\\nWrite the serialized UTXO set to disk.\\n\",\n+                {\n+                    {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"path to the output file\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    std::string path = request.params[0].get_str();\n+    FILE* file{fsbridge::fopen(path, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    std::unique_ptr<CCoinsViewCursor> pcursor;\n+\n+    {\n+        LOCK(::cs_main);\n+        ::FlushStateToDisk();\n+        pcursor = std::unique_ptr<CCoinsViewCursor>(::ChainstateActive()->CoinsDB()->Cursor());\n+        assert(pcursor);\n+    }\n+\n+    CCoinsStats stats;\n+    if (!GetUTXOStats(::ChainstateActive()->CoinsDB(), stats)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n+    }\n+\n+    CBlockIndex* tip;\n+    {\n+        LOCK(::cs_main);\n+        tip = LookupBlockIndex(stats.hashBlock);\n+        assert(tip);\n+    }\n+    SnapshotMetadata metadata{\n+        CDiskBlockIndex(tip), stats.hashSerialized, stats.coins_count, tip->nChainTx};\n+\n+    afile << metadata;\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            afile << key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274484277",
      "id" : 274484277,
      "in_reply_to_id" : 272226729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ4NDI3Nw==",
      "original_commit_id" : "71a65a08213b0159d4e4df2199d9993547f163e4",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 241,
      "pull_request_review_id" : 225612968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274484277",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274577341"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577341"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Most of these are already documented with data docstrings, but I've added an overview in the classdoc.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T18:37:39Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274577341",
      "id" : 274577341,
      "in_reply_to_id" : 272327897,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzM0MQ==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 66,
      "path" : "src/validation.h",
      "position" : 362,
      "pull_request_review_id" : 225716908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274578776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274578776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep. This function used to be split across two (one of which was executed in a separate thread), so this is an artifact of that. Willfix.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-11T18:41:21Z",
      "diff_hunk" : "@@ -4872,6 +4872,136 @@ CChainState* ChainstateManager::InitializeChainstate(\n     return to_modify.get();\n }\n \n+bool ChainstateManager::ActivateSnapshot(\n+        CAutoFile* coins_file,\n+        SnapshotMetadata metadata,\n+        size_t cache_size_bytes,\n+        bool in_memory)\n+{\n+    uint256 base_blockhash = metadata.m_base_blockheader.GetBlockHash();\n+\n+    // Important that we haven't set `m_snapshot_metadata` yet before this point.\n+    CChainState* snapshot_chainstate = InitializeChainstate(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274578776",
      "id" : 274578776,
      "in_reply_to_id" : 272736054,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3ODc3Ng==",
      "original_commit_id" : "9b6907e080fe4da105a332c76ddb5110310e8840",
      "original_position" : 13,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 225718684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274578776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r275033240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275033240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Made it private and then `friend`ed the only two functions (ChainActive and ChainstateActive) which access it.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-12T19:18:21Z",
      "diff_hunk" : "@@ -711,14 +732,170 @@ class SnapshotMetadata\n \n };\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * This class was created to displace the use of global variables (e.g.\n+ * chainActive) which were historically used to reference a single active\n+ * chainstate throughout the codebase.\n+ *\n+ * TODO jamesob: basically everything in this class is implicitly covered\n+ *   by `cs_main`. Should probably put some more formalization around\n+ *   locking and maybe add a class-local `cs` CCriticalSection.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    /**\n+     * Temporary holding place for a snapshot chainstate which is in the process of\n+     * being constructed. When ready, we swap with `m_snapshot_chainstate`.\n+     */\n+    std::unique_ptr<CChainState> m_unready_snapshot_chainstate;\n+\n+    /**\n+     * If not empty, this points to metadata corresponding to the UTXO snapshot\n+     * currently in use.\n+     */\n+    std::unique_ptr<SnapshotMetadata> m_snapshot_metadata;\n+\n+    /**\n+     * The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+     * if a snapshot is in use, for background validation. Its contents will\n+     * be freed when background validation of the snapshot has completed.\n+     */\n+    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(cs_main);\n+\n+    /**\n+     * A chainstate initialized on the basis of a UTXO snapshot. If this is\n+     * truthy, it is always our active chainstate unless proven invalid.\n+     */\n+    std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(cs_main);\n+\n+public:\n+    /**\n+     * Points to either the ibd or snapshot chainstate; indicates our\n+     * most-work chain.\n+     */\n+    CChainState* m_active_chainstate GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r275033240",
      "id" : 275033240,
      "in_reply_to_id" : 272326477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTAzMzI0MA==",
      "original_commit_id" : "8d9b707f609b647fb28ae182a097adc03e718725",
      "original_position" : 116,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 226247784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275033240",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r275034464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275034464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-04-12T19:22:59Z",
      "diff_hunk" : "@@ -64,6 +64,72 @@ CChainState* ChainstateActive() { return &g_chainstate; }\n \n CChain& ChainActive() { return g_chainstate.m_chain; }\n \n+/**\n+ * Maintains a tree of blocks (stored in `m_block_index`) which is consulted\n+ * to determine where the most-work tip is.\n+ *\n+ * This data is used mostly in `CChainState` - information about, e.g.,\n+ * candidate tips is not maintained here.\n+ */\n+class BlockMetadataManager {\n+public:\n+    BlockMap m_block_index GUARDED_BY(cs_main);\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk m_block_index when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of m_block_index to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk m_block_index in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+public:\n+    /*\n+     * All pairs A->B, where A (or one of its ancestors) misses transactions, but B has transactions.\n+     * Pruned nodes may have entries where B is missing data.\n+     */\n+    std::multimap<CBlockIndex*, CBlockIndex*> m_blocks_unlinked;\n+\n+    CBlockIndex *m_pindex_best_invalid = nullptr;\n+\n+    bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree);\n+\n+    void Unload() {\n+        m_failed_blocks.clear();\n+        m_blocks_unlinked.clear();\n+        m_pindex_best_invalid = nullptr;\n+\n+        for (const BlockMap::value_type& entry : m_block_index) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r275034464",
      "id" : 275034464,
      "in_reply_to_id" : 272317689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTAzNDQ2NA==",
      "original_commit_id" : "155ee896520e51b8a13d6904e3a14b5fa50295c0",
      "original_position" : 51,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 226249375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275034464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-16T17:14:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-483764115",
      "id" : 483764115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Mzc2NDExNQ==",
      "updated_at" : "2019-04-16T17:14:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483764115",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-18T15:13:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-484551017",
      "id" : 484551017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDU1MTAxNw==",
      "updated_at" : "2019-04-18T15:13:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484551017",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm unable to compile this on macOS. See [error log](https://gist.github.com/Sjors/3937c8ebef0fcc8ea066072eacb59a60). It does compile on Ubuntu, despite quite a few warnings.\r\n\r\nI tested making a dump for testnet and then importing it with a fresh datadir. But I think I'm using it wrong. First time I tried to load it I got. That was before it fetched any headers. I waited for it to fetch a few blocks and tried again, but same error:\r\n\r\n```\r\nbitcoind: txdb.cpp:104: virtual bool CCoinsViewDB::BatchWrite(CCoinsMap&, const uint256&): Assertion `!hashBlock.IsNull()' failed.\r\n```\r\n\r\nI don't think an RPC method is the right tool for loading a snapshot (it's fine for saving); probably better to just specify a location at launch.\r\n\r\nCan you add an actual `assumeutxo` value (mainnet & testnet)? When combined with #13713 it should be easier to create and test the snapshot (I had some difficulty wrapping my head around the demo script). That also means `loadtxoutset` can refuse to process a snapshot for a lower block height than the most recent fully processed block (even if the header is a valid-fork).\r\n\r\nTo facilitate writing functional tests, you could allow a `-assumeutxo` param for regtest only.",
      "created_at" : "2019-04-19T18:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-484975314",
      "id" : 484975314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDk3NTMxNA==",
      "updated_at" : "2019-04-19T18:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484975314",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm unable to compile this on macOS. See error log. It does compile on Ubuntu, despite quite a few warnings.\r\n\r\nThanks; could you post the warnings you're receiving on Ubuntu? I'm not getting any warnings during compilation when using clang 9.0.0 and gcc 7.3.0 on Ubuntu 18.04.2.\r\n\r\n> I don't think an RPC method is the right tool for loading a snapshot (it's fine for saving); probably better to just specify a location at launch.\r\n\r\nLoading snapshot only on startup would simplify things in the short run, but ultimately if we're going to share snapshots over the P2P network, we'll need to support loading them at runtime. Better to test that process out earlier IMO.\r\n\r\n> I waited for it to fetch a few blocks and tried again, but same error...\r\n\r\nOops, looks like I introduced a bug during a recent rebase. Fixing now. Thanks for testing!\r\n\r\n> Can you add an actual assumeutxo value (mainnet & testnet)?\r\n\r\nYep, I'll do this in the next day or so.\r\n\r\n> To facilitate writing functional tests, you could allow a -assumeutxo param for regtest only.\r\n\r\nYep, this seems like a good idea. I'm also going to try to do as much unittesting as I can (as opposed to functional tests).",
      "created_at" : "2019-04-23T13:18:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-485798749",
      "id" : 485798749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTc5ODc0OQ==",
      "updated_at" : "2019-04-23T13:18:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485798749",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-23T17:45:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-485905192",
      "id" : 485905192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTkwNTE5Mg==",
      "updated_at" : "2019-04-23T17:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485905192",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've added particular assumeutxo values and a more narrow `devtools` script. @Sjors hopefully this should now build without trouble or warnings on MacOS, though I haven't tested.",
      "created_at" : "2019-04-25T20:01:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-486817519",
      "id" : 486817519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjgxNzUxOQ==",
      "updated_at" : "2019-04-25T20:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486817519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "When (and if) I get a few Concept ACKs on this, I'll start to break this into smaller PRs with accompanying tests. Let me know if there's anything that would make conceptual review easier.",
      "created_at" : "2019-04-26T18:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-487158576",
      "id" : 487158576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzE1ODU3Ng==",
      "updated_at" : "2019-04-26T18:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487158576",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-04-26T19:03:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-487166998",
      "id" : 487166998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzE2Njk5OA==",
      "updated_at" : "2019-04-26T19:03:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487166998",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. It compiles now. I was able to create a snapshot using the script and load it on a fresh datadir. Though it crashed when I stopped the node and started it again:\r\n\r\n```\r\n2019-04-27T14:18:10Z [snapshot] resetting coinsviews for Chainstate [ibd] @ height 410343 (000000000008b5afee8bdf7bbc4386c001615bbfcfe12e7ddd0ac19ab9a03235)\r\n2019-04-27T14:18:10Z [snapshot] resetting coinsviews for Chainstate [snapshot] @ height 1512817 (0000000000000332aba2ad56296b67b7b6664a46b1c23bb014bb9aad6fb20828)\r\n2019-04-27T14:18:13Z [default wallet] Releasing wallet\r\n2019-04-27T14:18:13Z Shutdown: done\r\n\r\n...\r\n2019-04-27T14:19:11Z Initializing chainstate Chainstate [snapshot] @ height -1 (null)\r\nAssertion failed: (!setBlockIndexCandidates.empty()), function PruneBlockIndexCandidates, file validation.cpp, line 2401.\r\n```\r\n\r\n\r\nIt's hard to follow what's going on when loading the snapshot on a fresh node because the logs are flooded by the regular IBD in progress. Consider pausing IBD while loading the file.\r\n\r\nOnce we reach the tip and it starts syncing from genesis in the background, the log is too quiet. It's only showing allocation of block files. It would be nice to have a message for each block along the lines of ` UpdateChain: processed block 00000000000000a9d.... at height=1234` . Something less verbose, like on message every 1000 blocks, would also be fine. Otherwise it might end up snowing under important events at the tip.\r\n\r\n`getblockchaininfo` should contain fields to measure the progress of catching up in the background (and there needs to be something for the GUI to access, that can wait).\r\n\r\nHow do plan to handle block pruning? Do we just split `-prune` in half while catchup is in progress? Do we double the minimum `prune` setting (when used with this feature)?",
      "created_at" : "2019-04-27T14:20:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-487289941",
      "id" : 487289941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI4OTk0MQ==",
      "updated_at" : "2019-04-27T14:20:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487289941",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-30T19:37:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-488086533",
      "id" : 488086533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODA4NjUzMw==",
      "updated_at" : "2019-04-30T19:37:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488086533",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Just an FYI - I had a working POC of this that would have worked fine with the chainstate hash in the source  code:\r\nhttps://gist.github.com/n1bor/55b25d72cd3c24eef85f7e24d549ef7a\r\n\r\nOne interesting thing is if you write a lot of data to a leveldb database that is mostly sorted by key (or at least big chunks are ) it is very efficient.",
      "created_at" : "2019-05-05T11:05:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-489415711",
      "id" : 489415711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTQxNTcxMQ==",
      "updated_at" : "2019-05-05T11:09:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489415711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1016563?v=4",
         "events_url" : "https://api.github.com/users/n1bor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n1bor/followers",
         "following_url" : "https://api.github.com/users/n1bor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n1bor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n1bor",
         "id" : 1016563,
         "login" : "n1bor",
         "node_id" : "MDQ6VXNlcjEwMTY1NjM=",
         "organizations_url" : "https://api.github.com/users/n1bor/orgs",
         "received_events_url" : "https://api.github.com/users/n1bor/received_events",
         "repos_url" : "https://api.github.com/users/n1bor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n1bor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n1bor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n1bor"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors thanks very much for testing.\r\n\r\n> it crashed when I stopped the node and started it again\r\n\r\nYou found a bug in how the init process interacts with an assumed-valid chainstate. I needed to add `nChainTx` reconstruction to `LoadBlockIndex()` and make some allowances for the assumed-valid chain in `RewindBlockIndex()`. The details of the fix are mostly contained in https://github.com/bitcoin/bitcoin/pull/15606/commits/7d10a00daca80c6a8e68196ae7c016c1123d91fe, but we also now write `BLOCK_OPT_WITNESS` into the appropriate CBlockIndex entries during snapshot activation (https://github.com/bitcoin/bitcoin/pull/15606/commits/7bfbb78b445efbefa5238b4d23290ad4d4db05cf#diff-24efdb00bfbe56b140fb006b562cc70bR5001).\r\n\r\n> Consider pausing IBD while loading the file.\r\n\r\nOn your advice I'm now acquiring `cs_main` during snapshot activation for clarity when testing, but I think that closer to merge we should undo this. The snapshot chainstate can populate on a separate thread while traditional IBD starts and I don't think either slows the other down since they're running on separate threads and writing to separate data structures (the block index excluded).\r\n\r\nNote that you can isolate most of the snapshot-related logs with `tail -f debug.log | grep '[snapshot]'`.\r\n\r\n> Once we reach the tip and it starts syncing from genesis in the background, the log is too quiet.\r\n\r\nI've added a `[background validation] UpdateTip: ...` message for every 2000 blocks synced in the background.\r\n\r\n> How do plan to handle block pruning?\r\n\r\nSince we don't expect (or support handling) reorgs in the background validation chainstate, we prune it aggressively (within 1 block of tip; see https://github.com/bitcoin/bitcoin/pull/15606/commits/e37372a0236b12dff422eaeca643db7d64f58b48#diff-24efdb00bfbe56b140fb006b562cc70bR3635). Given current pruning precision, this seems like a rounding error and so I think should be sufficient.\r\n\r\nThanks again for testing. The most recent version of this PR is rebased and should be usable.",
      "created_at" : "2019-05-07T17:23:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-490172246",
      "id" : 490172246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE3MjI0Ng==",
      "updated_at" : "2019-05-07T17:29:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490172246",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> getblockchaininfo should contain fields to measure the progress of catching up in the background (and there needs to be something for the GUI to access, that can wait).\r\n\r\nYou can currently get a sense of this with the (maybe temporary? but definitely poorly named) `monitorsnapshot` RPC. Suggestions on how to roll this into `getblockchaininfo` are welcome. Maybe a `background:` key that contains a nested version of the same information? ",
      "created_at" : "2019-05-07T17:27:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-490173749",
      "id" : 490173749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE3Mzc0OQ==",
      "updated_at" : "2019-05-07T17:27:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490173749",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r281750772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281750772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nIn file included from validation.cpp:12:\r\n./coinstats.h:15:14: redundant redeclaration of âCBlockIndex* LookupBlockIndex(const uint256&)â in same scope [-Wredundant-decls]\r\n```\r\n```suggestion\r\n\r\n```\r\n",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-05-07T17:50:45Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COINSTATS_H\n+#define BITCOIN_COINSTATS_H\n+\n+#include <coins.h>\n+#include <chain.h>\n+#include <uint256.h>\n+#include <sync.h>\n+\n+extern CCriticalSection cs_main;\n+CBlockIndex* LookupBlockIndex(const uint256& blockhash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r281750772",
      "id" : 281750772,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc1MDc3Mg==",
      "original_commit_id" : "d49425d82fa7a1bfa255e714a3e55f8efa016de8",
      "original_position" : 15,
      "path" : "src/coinstats.h",
      "position" : 15,
      "pull_request_review_id" : 234667687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281750772",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">> Consider pausing IBD while loading the file.\r\n> acquiring cs_main during snapshot activation for clarity when testing\r\n> I don't think either slows the other down since they're running on separate threads\r\n\r\nIt's not about performance, but about being able to debug. I think we should keep this in for at least one release, because it's easier than the `grep` approach. It could also make sense to wait ~60 seconds after the snapshot is loaded before resuming the original IBD. That way the log looks like:\r\n* IBD...\r\n* rpc call to load snapshot (if RPC debug is enabled)\r\n* pauze IBD\r\n* loading snapshot\r\n* snapshot loaded, begin sync from snapshot\r\n* little bit of sync from snapshot\r\n* IBD resumed\r\n* interwoven log entries from both syncs\r\n\r\n> we prune it aggressively (within 1 block of tip)\r\n\r\nPruning normally flushes `dbcache` though, are you preventing that?\r\n\r\n> Maybe a `background:` key that contains a nested version of the same information?\r\n\r\nThat seems better (or `snapshot`), since otherwise you have to call `monitorsnapshot` to even find out anything is happening.",
      "created_at" : "2019-05-07T18:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-490191681",
      "id" : 490191681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE5MTY4MQ==",
      "updated_at" : "2019-05-07T18:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490191681",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r281848423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281848423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit e2c878bea3 refactoring: move block metadata structures into BlockManager\r\n\r\nstyle-nit: Duplicate `public`\r\n\r\nAlso, wouldn't it be clearer to not expose the block index via CChainState::BlockIndex? For me this is confusing because there is one blockindex, but several chainstates that could use it.\r\n\r\nI suggest the following diff, which adds a `BlockManager::BlockIndex` method (diff is on top of the current pull request, not the commit where I left this comment):\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 5097a81f08..2235db5ba1 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1563,7 +1563,7 @@ bool AppInitMain(InitInterfaces& interfaces)\r\n \r\n                 // If the loaded chain has a wrong genesis, bail out immediately\r\n                 // (we're likely using a testnet datadir, or the other way around).\r\n-                if (!::ChainstateActive().BlockIndex().empty() &&\r\n+                if (!g_chainman.BlockIndex().empty() &&\r\n                         !LookupBlockIndex(chainparams.GetConsensus().hashGenesisBlock)) {\r\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\r\n                 }\r\n@@ -1798,7 +1798,7 @@ bool AppInitMain(InitInterfaces& interfaces)\r\n     //// debug print\r\n     {\r\n         LOCK(cs_main);\r\n-        LogPrintf(\"m_block_index.size() = %u\\n\", ::ChainstateActive().BlockIndex().size());\r\n+        LogPrintf(\"m_block_index.size() = %u\\n\", g_chainman.BlockIndex().size());\r\n         chain_active_height = ::ChainActive().Height();\r\n     }\r\n     LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 6cdd11233a..d8e40a5d56 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -1378,7 +1378,7 @@ static UniValue getchaintips(const JSONRPCRequest& request)\r\n     std::set<const CBlockIndex*> setOrphans;\r\n     std::set<const CBlockIndex*> setPrevs;\r\n \r\n-    for (const std::pair<const uint256, CBlockIndex*>& item : ::ChainstateActive().BlockIndex())\r\n+    for (const std::pair<const uint256, CBlockIndex*>& item : g_chainman.BlockIndex())\r\n     {\r\n         if (!::ChainActive().Contains(item.second)) {\r\n             setOrphans.insert(item.second);\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex f7884759ad..ebdd3ba1bc 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1044,11 +1044,6 @@ bool CChainState::IsInitialBlockDownload() const\r\n     return false;\r\n }\r\n \r\n-BlockMap& CChainState::BlockIndex()\r\n-{\r\n-    return m_blockman.m_block_index;\r\n-}\r\n-\r\n CBlockIndex *pindexBestForkTip = nullptr, *pindexBestForkBase = nullptr;\r\n \r\n static void AlertNotify(const std::string& strMessage)\r\n@@ -1695,8 +1690,8 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\r\n         //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\r\n         // This setting doesn't force the selection of any particular chain but makes validating some faster by\r\n         //  effectively caching the result of part of the verification.\r\n-        BlockMap::const_iterator  it = BlockIndex().find(hashAssumeValid);\r\n-        if (it != BlockIndex().end()) {\r\n+        BlockMap::const_iterator  it = m_blockman.BlockIndex().find(hashAssumeValid);\r\n+        if (it != m_blockman.BlockIndex().end()) {\r\n             if (it->second->GetAncestor(pindex->nHeight) == pindex &&\r\n                 pindexBestHeader->GetAncestor(pindex->nHeight) == pindex &&\r\n                 pindexBestHeader->nChainWork >= nMinimumChainWork) {\r\n@@ -2787,8 +2782,8 @@ bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& c\r\n \r\n         // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\r\n         // add it again.\r\n-        BlockMap::iterator it = BlockIndex().begin();\r\n-        while (it != BlockIndex().end()) {\r\n+        BlockMap::iterator it = m_blockman.BlockIndex().begin();\r\n+        while (it != m_blockman.BlockIndex().end()) {\r\n             if (it->second->IsValid(BLOCK_VALID_TRANSACTIONS) && it->second->HaveTxsDownloaded() && !setBlockIndexCandidates.value_comp()(it->second, m_chain.Tip())) {\r\n                 setBlockIndexCandidates.insert(it->second);\r\n             }\r\n@@ -2815,8 +2810,8 @@ void CChainState::ResetBlockFailureFlags(CBlockIndex *pindex) {\r\n     int nHeight = pindex->nHeight;\r\n \r\n     // Remove the invalidity flag from this block and all its descendants.\r\n-    BlockMap::iterator it = BlockIndex().begin();\r\n-    while (it != BlockIndex().end()) {\r\n+    BlockMap::iterator it = m_blockman.BlockIndex().begin();\r\n+    while (it != m_blockman.BlockIndex().end()) {\r\n         if (!it->second->IsValid() && it->second->GetAncestor(nHeight) == pindex) {\r\n             it->second->nStatus &= ~BLOCK_FAILED_MASK;\r\n             setDirtyBlockIndex.insert(it->second);\r\n@@ -3956,7 +3951,7 @@ bool CChainState::LoadChainTip(const CChainParams& chainparams)\r\n \r\n     if (tip && tip->GetBlockHash() == coins_cache.GetBestBlock()) return true;\r\n \r\n-    if (coins_cache.GetBestBlock().IsNull() && BlockIndex().size() == 1) {\r\n+    if (coins_cache.GetBestBlock().IsNull() && m_blockman.BlockIndex().size() == 1) {\r\n         // In case we just added the genesis block, connect it now, so\r\n         // that we always have a tip when we return.\r\n         LogPrintf(\"%s: Connecting genesis block...\\n\", __func__);\r\n@@ -4139,16 +4134,16 @@ bool CChainState::ReplayBlocks(const CChainParams& params)\r\n     const CBlockIndex* pindexNew;            // New tip during the interrupted flush.\r\n     const CBlockIndex* pindexFork = nullptr; // Latest block common to both the old and the new tip.\r\n \r\n-    if (BlockIndex().count(hashHeads[0]) == 0) {\r\n+    if (m_blockman.BlockIndex().count(hashHeads[0]) == 0) {\r\n         return error(\"ReplayBlocks(): reorganization to unknown block requested\");\r\n     }\r\n-    pindexNew = BlockIndex()[hashHeads[0]];\r\n+    pindexNew = m_blockman.BlockIndex()[hashHeads[0]];\r\n \r\n     if (!hashHeads[1].IsNull()) { // The old tip is allowed to be 0, indicating it's the first flush.\r\n-        if (BlockIndex().count(hashHeads[1]) == 0) {\r\n+        if (m_blockman.BlockIndex().count(hashHeads[1]) == 0) {\r\n             return error(\"ReplayBlocks(): reorganization from unknown block requested\");\r\n         }\r\n-        pindexOld = BlockIndex()[hashHeads[1]];\r\n+        pindexOld = m_blockman.BlockIndex()[hashHeads[1]];\r\n         pindexFork = LastCommonAncestor(pindexOld, pindexNew);\r\n         assert(pindexFork != nullptr);\r\n     }\r\n@@ -4235,7 +4230,7 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\r\n     // blocks will be dealt with below (releasing cs_main in between).\r\n     {\r\n         LOCK(cs_main);\r\n-        for (const auto& entry : BlockIndex()) {\r\n+        for (const auto& entry : m_blockman.BlockIndex()) {\r\n             if (IsWitnessEnabled(entry.second->pprev, params.GetConsensus()) && !(entry.second->nStatus & BLOCK_OPT_WITNESS) && !m_chain.Contains(entry.second)) {\r\n                 EraseBlockData(entry.second);\r\n             }\r\n@@ -4373,7 +4368,7 @@ bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs\r\n     if (!fReindex) {\r\n         bool ret = LoadBlockIndexDB(chainparams);\r\n         if (!ret) return false;\r\n-        needs_init = g_chainman.m_blockman.m_block_index.empty();\r\n+        needs_init = g_chainman.m_blockman.BlockIndex().empty();\r\n     }\r\n \r\n     if (needs_init) {\r\n@@ -4553,17 +4548,17 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\r\n     // so we have the genesis block in BlockIndex() but no active chain. (A few of the tests when\r\n     // iterating the block tree require that m_chain has been initialized.)\r\n     if (m_chain.Height() < 0) {\r\n-        assert(BlockIndex().size() <= 1);\r\n+        assert(m_blockman.BlockIndex().size() <= 1);\r\n         return;\r\n     }\r\n \r\n     // Build forward-pointing map of the entire block tree.\r\n     std::multimap<CBlockIndex*,CBlockIndex*> forward;\r\n-    for (const std::pair<const uint256, CBlockIndex*>& entry : BlockIndex()) {\r\n+    for (const std::pair<const uint256, CBlockIndex*>& entry : m_blockman.BlockIndex()) {\r\n         forward.insert(std::make_pair(entry.second->pprev, entry.second));\r\n     }\r\n \r\n-    assert(forward.size() == BlockIndex().size());\r\n+    assert(forward.size() == m_blockman.BlockIndex().size());\r\n \r\n     std::pair<std::multimap<CBlockIndex*,CBlockIndex*>::iterator,std::multimap<CBlockIndex*,CBlockIndex*>::iterator> rangeGenesis = forward.equal_range(nullptr);\r\n     CBlockIndex *pindex = rangeGenesis.first->second;\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex 84605e957c..20a90cda0b 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -465,8 +465,12 @@ struct CBlockIndexWorkComparator\r\n  * candidate tips is not maintained here.\r\n  */\r\n class BlockManager {\r\n-public:\r\n     BlockMap m_block_index GUARDED_BY(cs_main);\r\n+public:\r\n+    BlockMap& BlockIndex() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\r\n+    {\r\n+        return m_block_index;\r\n+    }\r\n \r\n     /** In order to efficiently track invalidity of headers, we keep the set of\r\n       * blocks which we tried to connect and found to be invalid here (ie which\r\n@@ -488,7 +492,6 @@ public:\r\n       */\r\n     std::set<CBlockIndex*> m_failed_blocks;\r\n \r\n-public:\r\n     /*\r\n      * All pairs A->B, where A (or one of its ancestors) misses transactions, but B has transactions.\r\n      * Pruned nodes may have entries where B is missing data.\r\n@@ -775,9 +778,6 @@ public:\r\n     /** Check whether we are doing an initial block download (synchronizing from disk or network) */\r\n     bool IsInitialBlockDownload() const;\r\n \r\n-    //! @returns the map of blocks that this chainstate is aware of.\r\n-    BlockMap& BlockIndex();\r\n-\r\n     /** Update the chain tip based on database information. */\r\n     bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n@@ -1040,7 +1040,7 @@ public:\r\n \r\n     BlockMap& BlockIndex() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\r\n     {\r\n-        return m_blockman.m_block_index;\r\n+        return m_blockman.BlockIndex();\r\n     }\r\n \r\n     bool IsSnapshotActive() const\r\ndiff --git a/src/wallet/test/wallet_tests.cpp b/src/wallet/test/wallet_tests.cpp\r\nindex 91618525fd..afb619f13f 100644\r\n--- a/src/wallet/test/wallet_tests.cpp\r\n+++ b/src/wallet/test/wallet_tests.cpp\r\n@@ -272,7 +272,7 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\r\n     if (blockTime > 0) {\r\n         LockAnnotation lock(::cs_main);\r\n         auto locked_chain = wallet.chain().lock();\r\n-        auto inserted = ::ChainstateActive().BlockIndex().emplace(GetRandHash(), new CBlockIndex);\r\n+        auto inserted = g_chainman.BlockIndex().emplace(GetRandHash(), new CBlockIndex);\r\n         assert(inserted.second);\r\n         const uint256& hash = inserted.first->first;\r\n         block = inserted.first->second;",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-05-07T22:08:58Z",
      "diff_hunk" : "@@ -461,27 +461,89 @@ struct CBlockIndexWorkComparator\n };\n \n /**\n- * CChainState stores and provides an API to update our local knowledge of the\n- * current best chain and header tree.\n+ * Maintains a tree of blocks (stored in `m_block_index`) which is consulted\n+ * to determine where the most-work tip is.\n  *\n- * It generally provides access to the current block tree, as well as functions\n- * to provide new data, which it will appropriately validate and incorporate in\n- * its state as necessary.\n+ * This data is used mostly in `CChainState` - information about, e.g.,\n+ * candidate tips is not maintained here.\n+ */\n+class BlockManager {\n+public:\n+    BlockMap m_block_index GUARDED_BY(cs_main);\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk m_block_index when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of m_block_index to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk m_block_index in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+public:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r281848423",
      "id" : 281848423,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTg0ODQyMw==",
      "original_commit_id" : "e2c878bea3003662d4bbdd656f1dc627a271a9df",
      "original_position" : 39,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 234785615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281848423",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r282154374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282154374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This means the catchup process never leaves IBD once nMinimumChainWork > work(assume_utxo block). Not sure if that matters.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-05-08T16:49:23Z",
      "diff_hunk" : "@@ -1168,30 +1017,38 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n     return nSubsidy;\n }\n \n-bool IsInitialBlockDownload()\n+// Note that though this is marked const, we may end up modifying `m_cached_finished_ibd`, which\n+// is a performance-related implementation detail. This function must be marked\n+// `const` so that `CValidationInterface` clients (which are given a `const CChainState&`)\n+// can call it.\n+//\n+bool CChainState::IsInitialBlockDownload() const\n {\n-    // Once this function has returned false, it must remain false.\n-    static std::atomic<bool> latchToFalse{false};\n     // Optimization: pre-test latch before taking the lock.\n-    if (latchToFalse.load(std::memory_order_relaxed))\n+    if (m_cached_finished_ibd.load(std::memory_order_relaxed))\n         return false;\n \n     LOCK(cs_main);\n-    if (latchToFalse.load(std::memory_order_relaxed))\n+    if (m_cached_finished_ibd.load(std::memory_order_relaxed))\n         return false;\n     if (fImporting || fReindex)\n         return true;\n-    if (::ChainActive().Tip() == nullptr)\n+    if (m_chain.Tip() == nullptr)\n         return true;\n-    if (::ChainActive().Tip()->nChainWork < nMinimumChainWork)\n+    if (m_chain.Tip()->nChainWork < nMinimumChainWork)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r282154374",
      "id" : 282154374,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjE1NDM3NA==",
      "original_commit_id" : "d49425d82fa7a1bfa255e714a3e55f8efa016de8",
      "original_position" : 386,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 235169752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282154374",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Did another test (on Ubuntu) and was able to create a snapshot and load it in a fresh datadir.\r\n\r\nWhen I tried to make a snapshot while still in IBD, the chain reorged down to the specified height and then immedidately shot up again to the tip, before making a (presumable wrong) snapshot. Easiest solution is for the demo script to check if `initialblockdownload` is `false`.\r\n\r\nPerhaps related, but I managed to corrupt the node that I took the snapshot from:\r\n\r\n```\r\n2019-05-08T17:35:39Z Checking all blk files are present...\r\n2019-05-08T17:35:40Z Initializing chainstate Chainstate [ibd] @ height -1 (null)\r\nbitcoind: validation.cpp:2448: void CChainState::PruneBlockIndexCandidates(): Assertion `!setBlockIndexCandidates.empty()' failed.\r\n```\r\n\r\nI recovered with `-reindex` and then made the snapshot more carefully.\r\n\r\nWhen I restart the node during the snapshot sync, I notice that `monitorsnapshot` returns the wrong values for verification_progress of `snapshot` (e.g. `0.142`) which doesn't go up much until you restart again (`initialblockdownload: false`). I restarted a few times, and then it suddenly showed 0.9999 again.\r\n\r\nThe new logging every 2000 blocks feature doesn't work after restart.\r\n\r\nThe snapshot successfully validated, but when I try to shutdown gracefully it doesn't get beyond the \"dumped mempool\" message. Probably a thread locking issue; no crazy CPU or memory usage. I had to use `kill -9`, but fortunately it still worked at the next start.\r\n\r\nI haven't tried pruning yet.",
      "created_at" : "2019-05-08T19:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-490611693",
      "id" : 490611693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDYxMTY5Mw==",
      "updated_at" : "2019-05-08T19:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490611693",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r282237828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282237828"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I like your suggestion, thanks! Will work it into the commits.",
      "commit_id" : "9a82ee0d551373c971a03c5b5149cb095a4073e1",
      "created_at" : "2019-05-08T20:33:28Z",
      "diff_hunk" : "@@ -461,27 +461,89 @@ struct CBlockIndexWorkComparator\n };\n \n /**\n- * CChainState stores and provides an API to update our local knowledge of the\n- * current best chain and header tree.\n+ * Maintains a tree of blocks (stored in `m_block_index`) which is consulted\n+ * to determine where the most-work tip is.\n  *\n- * It generally provides access to the current block tree, as well as functions\n- * to provide new data, which it will appropriately validate and incorporate in\n- * its state as necessary.\n+ * This data is used mostly in `CChainState` - information about, e.g.,\n+ * candidate tips is not maintained here.\n+ */\n+class BlockManager {\n+public:\n+    BlockMap m_block_index GUARDED_BY(cs_main);\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk m_block_index when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of m_block_index to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk m_block_index in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+public:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#discussion_r282237828",
      "id" : 282237828,
      "in_reply_to_id" : 281848423,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjIzNzgyOA==",
      "original_commit_id" : "e2c878bea3003662d4bbdd656f1dc627a271a9df",
      "original_position" : 39,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 235277762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
      "updated_at" : "2019-07-23T14:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282237828",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-08T21:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-490499939",
      "id" : 490499939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDQ5OTkzOQ==",
      "updated_at" : "2019-05-08T21:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490499939",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you split out d94356e086a2240773a42649ce6ef785b3a3d4b5 into a separate pull request? I need this for some of my fuzzing projects.\r\n\r\nSee #16703",
      "created_at" : "2019-08-23T22:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-524482297",
      "id" : 524482297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ4MjI5Nw==",
      "updated_at" : "2019-08-23T22:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524482297",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "On macOS 10.14.6 I'm seeing a warning:\r\n```\r\nvalidation.cpp:2222:64: warning: lambda capture 'func_name' is not required to be captured for this use [-Wunused-lambda-capture]\r\n    auto log_progress = [pindexNew, &coins_view, &chainParams, func_name](\r\n                                                             ~~^~~~~~~~~\r\nvalidation.cpp:4184:50: warning: comparison of integers of different signs: 'int64_t' (aka 'long long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\r\n        if (nCheckLevel >= 3 && curr_coins_usage <= chainstate.m_coinstip_cache_size_bytes) {\r\n                                ~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n2 warnings generated.\r\n```\r\n\r\nCan you make the snapshot a bit more recent?\r\n\r\nI tried loading the snapshot I created back in May and noticed `2019-08-28T12:11:37Z [snapshot] waiting to see blockheader 000000000000001629aa3af57b421626b17c233ad0cd7197dfcc77389fe7b85e in headers chain before snapshot activation` burried in the log. Oops, that's a testnet snapshot :-) But this causes the RPC call to hang and makes it difficult to exit bitcoind, so we should probably detect this.\r\n\r\nUpdate: I made a fresh snapshot of a more recent block. When trying to import it the debug log said `2019-08-28T17:34:46Z [snapshot] assumeutxo value in snapshot metadata not valid for height 592000 - refusing to load snapshot`, but the RPC returned a cryptic `error code: -32603. error message:   Unable to load UTXO snapshot ...`.\r\n\r\n`flushing snapshot chainstate to disk` takes 10+ minutes. Can this step be skipped if `-dbcache` is large enough?\r\n\r\nIs this ignoring my `-dbcache` setting?\r\n```\r\n2019-08-28T17:55:49Z [Chainstate [snapshot] @ height 592003 (0000000000000000000919cc22af382ead360cd7a27572e19a2b6ac42baa6745)] resized coinsdb cache to 0.4 MiB\r\n2019-08-28T17:55:49Z [Chainstate [snapshot] @ height 592003 (0000000000000000000919cc22af382ead360cd7a27572e19a2b6ac42baa6745)] resized coinstip cache to 499.5 MiB\r\n2019-08-28T17:55:49Z Cache size (8699974960) exceeds total space (1523763712)\r\n```",
      "created_at" : "2019-08-28T12:30:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-525723416",
      "id" : 525723416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNTcyMzQxNg==",
      "updated_at" : "2019-08-28T17:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/525723416",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I made a torrent tracker for these snapshots, as well as limited capacity seeding:\r\n* mainnet: `magnet:?xt=urn:btih:556fb8dcc50059a62b0694f576a14e249156ab99&dn=utxo%5Fsnapshot%5F570000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n* testnet: `magnet:?xt=urn:btih:8780d3e8e336986a7fede11bea3e1209e2b25e41&dn=utxo%5Fsnapshot%5Ftestnet%5F1512062.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`",
      "created_at" : "2019-08-29T13:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-526181836",
      "id" : 526181836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNjE4MTgzNg==",
      "updated_at" : "2019-08-29T13:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/526181836",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At the moment, the tip of this branch is broken - there's a lock inversion between the new `g_chainman.m_cs_chainstates` lock and `mempool.cs`. It's proven tricky to untangle because `ChainstateActive()` (which requires `g_chainman.m_cs_chainstates`) is called so pervasively.\r\n\r\nI tried swapping out m_cs_chainstates for cs_main since they're pretty much\r\nalways overlapping anyways, but that's a non-starter because you can't call\r\n`g_chainman.GetAll()` on top of `chainstate->ActivateBestChain()` because ABC\r\nasserts that cs_main isn't held (to drain the validation queue).\r\n\r\nI'm trying to work out the lowest-impact fix.\r\n\r\n### Notes\r\n\r\n```\r\n2019-08-20T17:18:51Z POTENTIAL DEADLOCK DETECTED\r\n2019-08-20T17:18:51Z Previous lock order was:\r\n2019-08-20T17:18:51Z  m_cs_chainstate validation.cpp:2675 (in thread loadblk)\r\n2019-08-20T17:18:51Z  cs_main validation.cpp:2693 (in thread loadblk)\r\n2019-08-20T17:18:51Z  (1) ::mempool.cs validation.cpp:2693 (in thread loadblk)\r\n2019-08-20T17:18:51Z  (2) g_chainman.m_cs_chainstates validation.cpp:86 (in thread loadblk)\r\n```\r\n\r\nwhich is \r\n\r\n  ActivateBestChain: LOCK(mempool.cs) \r\n  -> ConnectTip: LOCK(g_chainman.m_cs_chainstates) via ChainstateActive()\r\n\r\n```\r\n2019-08-20T17:18:51Z Current lock order is:\r\n2019-08-20T17:18:51Z  cs_main init.cpp:1484 (in thread init)\r\n2019-08-20T17:18:51Z  (2) m_cs_chainstates validation.cpp:5507 (in thread init)\r\n2019-08-20T17:18:51Z  cs_main validation.cpp:2046 (in thread init)\r\n2019-08-20T17:18:51Z  (1) cs txmempool.cpp:907 (in thread init)\r\n```\r\n\r\nwhich is\r\n\r\n  ChainstateManager.MaybeRebalanceCaches(): LOCK(m_cs_chainstates)\r\n  -> FlushStateToDisk\r\n  -> mempool.DynamicMemoryUsage(): LOCK(mempool.cs)\r\n",
      "created_at" : "2019-09-17T18:05:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-532335545",
      "id" : 532335545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjMzNTU0NQ==",
      "updated_at" : "2019-09-17T18:05:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532335545",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It's proven tricky to untangle because ChainstateActive() (which requires g_chainman.m_cs_chainstates) is called so pervasively.\r\n\r\nCan't remember what we talked about last time this came up, but maybe m_cs_chainstates should be a shared mutex, that many threads can call lock_shared on simultaneously, and not block unless the chain is being swapped.\r\n\r\nThat way m_cs_chainstates could be locked at a really broad scope, before cs_main and mempool.cs, but it wouldn't hurt performance because it would be locked non-exclusively.\r\n",
      "created_at" : "2019-09-24T15:29:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-534612837",
      "id" : 534612837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNDYxMjgzNw==",
      "updated_at" : "2019-09-24T15:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534612837",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm hosting some recent snapshots as a torrent (and tracker):\r\n* 570,000 mainnet `magnet:?xt=urn:btih:556fb8dcc50059a62b0694f576a14e249156ab99&dn=utxo%5Fsnapshot%5F570000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969` (made with older version, probably incompatible)\r\n* 600,000 mainnet: `magnet:?xt=urn:btih:e3c0b504c8e60c52653706079dbfecc5bcad5e02&dn=utxo%5Fmainnet%5F600000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n* 1,600,000 testnet: `magnet:?xt=urn:btih:701acffe49e83bce213ff337e52022c11368cdd0&dn=utxo%5Ftestnet%5F1600000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`",
      "created_at" : "2019-11-06T10:38:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-550251563",
      "id" : 550251563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDI1MTU2Mw==",
      "updated_at" : "2019-11-15T13:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550251563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A few quick updates on this branch.\r\n\r\n### New snapshots\r\n\r\nI've added an allowed assumeutxo hash at height 600,000 (which you can check with `./contrib/devtools/utxo_snapshot.sh - ./src/bitcoin-cli -datadir=[...]`) and have uploaded snapshot files ([Google Drive](https://storage.googleapis.com/assumeutxo/utxo.600k.dat), [Google Cloud](https://drive.google.com/file/d/1sGNpAsdQPPZNpWt7Wwbi5u3bHZiIKmSb/view?usp=sharing)) for testers' convenience. We obviously don't necessarily need to preserve this value for merge, but I figure it's useful for testing and not unrealistic.\r\n\r\nYou can test this branch easily by running a script like\r\n```sh\r\n#!/bin/bash\r\n\r\nset -e\r\nif [ ! -f ./src/bitcoind ]; then\r\n  echo \"Must be in built bitcoin directory.\"\r\n  exit 1\r\nfi\r\nSNAPSHOT_LOC=/tmp/utxo.600k.dat\r\nDATADIR=/tmp/bitcoin-assumeutxo-test\r\nmkdir -p $DATADIR\r\n\r\n[ -f ${SNAPSHOT_LOC} ] || curl -L https://storage.googleapis.com/assumeutxo/utxo.600k.dat > $SNAPSHOT_LOC\r\n/usr/bin/time -v ./src/bitcoind -datadir=$DATADIR -dbcache=4000 -stopatheight=604401 &\r\nsleep 60\r\n# Might timeout.\r\n/usr/bin/time -v ./src/bitcoin-cli -datadir=$DATADIR loadtxoutset $SNAPSHOT_LOC || true\r\nfg %1\r\n```\r\n\r\nAfter running this you should end up with a node that's synced to tip within 60-90 minutes depending on your internet connection and hardware.\r\n\r\n### Benchmarking\r\n\r\nI've compared reindexing to height 550,000 for this branch vs. its base ([a la previous PRs](https://github.com/bitcoin/bitcoin/pull/16801#issuecomment-551883348)), and beyond some outlier runs on both sides, this changeset seems to be comparable in performance to master.\r\n\r\n```\r\nhost         tag                      time       time% maxmem  cpu%  dbcache\r\nbench-ssd-2  bench/au.1               9:24:53    0.92  6717.99MB 338%  5000MB\r\nbench-ssd-2  bench/au.1               9:23:14    0.92  6770.57MB 339%  5000MB\r\nbench-ssd-2  bench/au.master.1        10:08:33   0.99  6654.39MB 315%  5000MB\r\nbench-ssd-2  bench/au.master.1        10:13:04   1.00  6697.26MB 313%  5000MB\r\n\r\nbench-ssd-3  bench/au.master.1        9:26:17    0.93  6743.38MB 337%  5000MB\r\nbench-ssd-3  bench/au.master.1        9:24:03    0.93  6748.67MB 338%  5000MB\r\nbench-ssd-3  bench/au.1               9:22:35    0.92  6713.50MB 340%  5000MB\r\nbench-ssd-3  bench/au.1               10:08:36   1.00  6712.88MB 314%  5000MB\r\n\r\nbench-ssd-4  bench/au.1               9:24:59    0.93  6744.43MB 338%  5000MB\r\nbench-ssd-4  bench/au.1               10:06:09   1.00  6717.30MB 315%  5000MB\r\nbench-ssd-4  bench/au.master.1        9:23:44    0.93  6695.61MB 339%  5000MB\r\nbench-ssd-4  bench/au.master.1        9:23:56    0.93  6646.16MB 338%  5000MB\r\n\r\nbench-ssd-5  bench/au.master.1        9:18:57    1.00  6715.23MB 341%  5000MB\r\nbench-ssd-5  bench/au.master.1        9:20:35    1.00  6644.22MB 341%  5000MB\r\nbench-ssd-5  bench/au.1               9:17:27    0.99  6702.63MB 342%  5000MB\r\nbench-ssd-5  bench/au.1               9:21:17    1.00  6663.15MB 340%  5000MB\r\n```\r\n\r\nNote of course that as a sort of \"meta\"-optimization, these benchmarks are solely to ensure that we haven't introduced any performance regressions into normal operation. The really relevant benchmark here is \"time from empty datadir to usable node,\" which on one of my more capable machines has gone from ~20hrs to ~1hr. \r\n\r\n### Next steps\r\n\r\nIf you want to help move this project forward, the following PRs are prerequisites and once they're merged I'll carve off the next changeset:\r\n\r\n- #16945 \r\n- #17487 \r\n\r\n### Current work\r\n\r\nAfter significantly revising the structure of the snapshot file in #16899, this branch has been substantially rebased to avoid the requirement of any on-disk snapshot metadata once the snapshot has been loaded; instead we look to filesystem state (the presence of a `$DATADIR/chainstate_*` folder) to signal that we are currently building a snapshot chainstate. Once this chainstate has been fully back validated, we move it over to the regular `chainstate/` dir on shutdown. We also used to need on-disk state to restore the \"faked\" `nChainTx` data for snapshot-based header chains -- we now cache that information in the snapshot's chainstate itself (https://github.com/bitcoin/bitcoin/pull/15606/commits/87093a94ba311c495a1982f4f47d0c4607789f8f).\r\n\r\nI'm currently thinking about how to handle locking semantics (as you might be able to tell from the last commit, which needs to be squashed into the rest of the history at some point) which I can detail further if anyone's interested.",
      "created_at" : "2019-11-18T21:17:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-555213164",
      "id" : 555213164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTIxMzE2NA==",
      "updated_at" : "2019-11-18T21:17:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555213164",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Commits that can be split out and submitted for review in parallel:\r\n\r\n* f416c16b5728c91b071e18ea860a59c0401dcb5d\r\n* ba1f760cdad07331b403966a0d3ab8b3f9898799 (partially, at least)\r\n* e75fbc3087c1ad5039c946a0ac3107d6d2c84b94 (after #18698 ?)\r\n\r\ncommit 9b665e999bc82b98ff317907370db6f65efb2b43 can be dropped, no? It is already properly marked:\r\n\r\n```\r\n$ git grep 'bool LoadBlockIndex('\r\nsrc/validation.cpp:bool LoadBlockIndex(const CChainParams& chainparams)\r\nsrc/validation.h:bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\nsrc/validation.h:    bool LoadBlockIndex(\r\n",
      "created_at" : "2020-04-20T15:06:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-616613653",
      "id" : 616613653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNjYxMzY1Mw==",
      "updated_at" : "2020-04-20T15:06:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616613653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why is GitHub so horribly useless? I can't even see the last comment I posted here two weeks ago without spending minutes unwrapping the discussion",
      "created_at" : "2020-05-23T12:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-633044179",
      "id" : 633044179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzA0NDE3OQ==",
      "updated_at" : "2020-05-23T12:32:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633044179",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Quick update. I've rebased this PR in such a way that it does not rely on changes in #17487 to avoid being blocked on that going through. If that does merge, it'll be easy to update this branch to make use of the flush-without-erase behavior.\r\n\r\nThis needs testing (which I plan to do soon) as it's been a while since I've gone through the whole battery of manual system tests (i.e. actually loading snapshots and syncing). I need to focus on writing a few more functional and unit tests that will obviate most of that manual work. Some intermediate commits here almost certainly have compilation errors.\r\n\r\nThis project is getting to the point where it's less straightforward to find discrete bits of this draft to carve off for individual merge. Among the next changes are the snapshot activation procedure, the related RPC command for loading a snapshot, and all the little correspondent changes that have to happen in modules like net_processing to have snapshot chainstates actually function. I guess it makes sense to PR the snapshot activation changes (https://github.com/bitcoin/bitcoin/pull/15606/commits/eae9c625b10a7b5e6495ebef8698a98873f4933a) individually, but after that it may be somewhat less straightforward to carve off commits. \r\n\r\nI'm wondering how averse people would be to treating much of the remainder of this draft as a single PR, and subsequently finishing off the first phase of assumeutxo in two or so more PRs?",
      "created_at" : "2020-08-01T19:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-667579173",
      "id" : 667579173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzU3OTE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-01T19:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667579173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I still thinks this can and should be split up further, since that makes it easier to find reviewers for the part of the code that is modified. For example, the net_processing additions might be reviewed by a different set of people than the validation changes like 8ce5eb04d5ec21843e6a3919d0beee9f6e6589fe",
      "created_at" : "2020-08-02T05:45:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-667631605",
      "id" : 667631605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzYzMTYwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T05:45:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667631605",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebase time now that #19806 landed?",
      "created_at" : "2021-02-17T15:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-780635284",
      "id" : 780635284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDYzNTI4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T15:29:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780635284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Rebase time now that #19806 landed?\r\n\r\nYup, actively working on it.",
      "created_at" : "2021-02-17T15:35:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-780639279",
      "id" : 780639279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDYzOTI3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T15:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780639279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Approach ACK / light review ACK 285d5dd3e409c1f14f50c46f18b3b1338f7ab9f6\r\n\r\nLooking at the remaining commits it seems like the assumeutxo implementation is actually 75% merged already, and remaining changes are mostly tweaking code that hardcodes or assumes ActiveChainstate to instead handle multiple chainstates.\r\n\r\nCurrent approach of splitting this large PR into medium sized PRs to be reviewed and merged sequentially (starting with #21526) seems reasonable and is probably ideal. I could also imagine a different approach thats splits out the tweaky commits as small obvious 1-commit PRs that could be reviewed in parallel, but this might just be more work and not solve anything.\r\n\r\nIn an ideal world it would be nice if individual changes here could be accompanied by unit tests confirming the new behaviors, but understandable that this isn't happening since validation code is not very modular.",
      "created_at" : "2021-04-01T01:32:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-811573676",
      "id" : 811573676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMTU3MzY3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-01T01:32:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811573676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be nice to see a rebase of this, as it's a bit easier to understand the prerequisite PR's in their full context.",
      "created_at" : "2021-05-21T13:46:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-845962015",
      "id" : 845962015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTk2MjAxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T13:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845962015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree with @Sjors . Currently it is not possible to test the \"great picture\" and only unit test or code review the split out patches.",
      "created_at" : "2021-05-25T08:37:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606#issuecomment-847672512",
      "id" : 847672512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NzY3MjUxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-25T08:37:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847672512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
