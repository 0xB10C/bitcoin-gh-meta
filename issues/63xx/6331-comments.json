[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33161485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33161485"
         }
      },
      "body" : "Indentation style is 4 spaces per level.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:42:29Z",
      "diff_hunk" : "@@ -101,4 +101,67 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+  CTxMemPool pool(CFeeRate(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33161485",
      "id" : 33161485,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 6,
      "path" : "src/test/mempool_tests.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33161485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Untested ACK. This is one of the few places where I think boost shines.",
      "created_at" : "2015-06-24T15:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-114922628",
      "id" : 114922628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-24T15:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114922628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "It would be nice to see how much the block creation code could be sped up and simplified with this, though.",
      "created_at" : "2015-06-24T15:51:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-114922915",
      "id" : 114922915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-24T15:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114922915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33162696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33162696"
         }
      },
      "body" : "I think we want to know priorities aimed for the next block's height, as that is where the transactions are expected to end up.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:53:07Z",
      "diff_hunk" : "@@ -2216,6 +2217,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n     mempool.removeForBlock(pblock->vtx, pindexNew->nHeight, txConflicted, !IsInitialBlockDownload());\n+    mempool.recalcPriorities(pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33162696",
      "id" : 33162696,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33162696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33163140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33163140"
         }
      },
      "body" : "Nit: I think that over time we will want this to be primarily a non-ordered set (because hash-based lookups are faster). Something like transaction_map or indexed_transaction_map would maybe be more appropriate? Maybe define it inside CTxMempool, so it is more clearly scoped.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:56:46Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33163140",
      "id" : 33163140,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33163140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182254"
         }
      },
      "body" : "For the unordered index I need a hash function for uint256 because the build fails when it defaults to `boost::hash<uint256>`.  I think you mentioned to me before about some existing code that does this and prevents a dos case - where do I find that function?",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T18:51:35Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182254",
      "id" : 33182254,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182418"
         }
      },
      "body" : "Don't bother about that now.\r\n\r\nI just mean that an \"unordered transaction set\" is not what this intends to function as. It's just how the current implementation works.\r\n\r\nAs I said, a nit.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T18:53:22Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182418",
      "id" : 33182418,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33183459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33183459"
         }
      },
      "body" : "What about indexed_transaction_set since the indexes have a set-like interface?",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T19:03:58Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33183459",
      "id" : 33183459,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33183459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33346732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33346732"
         }
      },
      "body" : "Sounds good to me.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T11:09:09Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33346732",
      "id" : 33346732,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33346732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33379346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33379346"
         }
      },
      "body" : "@sipa, wouldn't it be better to go ahead and make that change now?  We're looking up transactions by hash in the mempool all the time (for instance `CCoinsViewMemPool::GetCoins`).  I'm not sure what the efficiency difference is, but given that its currently a hash lookup, its probably not something we should make slower.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T17:58:03Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33379346",
      "id" : 33379346,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33379346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33385453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33385453"
         }
      },
      "body" : "oops, silly me..  std::map is ordered",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T19:02:08Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33385453",
      "id" : 33385453,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33385453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33386474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33386474"
         }
      },
      "body" : "It is nontrivial to make boost::multi_index_container work with salted hash\nfunctions (you want to avoid the ability for network players to produce\ntransactions that collide in the hashtable). I've tried myself, so I think\nit's reasonable to first get this in without. One of the advantages of\nboost::multi_index_container is that changing the indexes should be easy.\n",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T19:13:13Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33386474",
      "id" : 33386474,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33386474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412259"
         }
      },
      "body" : "Fixed in latest commit",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:00:14Z",
      "diff_hunk" : "@@ -101,4 +101,67 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+  CTxMemPool pool(CFeeRate(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412259",
      "id" : 33412259,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 6,
      "path" : "src/test/mempool_tests.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412267"
         }
      },
      "body" : "Fixed in latest commit.  Also moved the recalcPriorities call to happen after UpdateTip(), because I didn't think the priority recalc was important enough to delay updating the tip.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:01:25Z",
      "diff_hunk" : "@@ -2216,6 +2217,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n     mempool.removeForBlock(pblock->vtx, pindexNew->nHeight, txConflicted, !IsInitialBlockDownload());\n+    mempool.recalcPriorities(pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412267",
      "id" : 33412267,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:01:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412276"
         }
      },
      "body" : "I've now renamed it to CTxMemPool::indexed_transaction_set in my latest commit.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:02:47Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412276",
      "id" : 33412276,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "If this gets merged, the next thing I would look at is changing CreateNewBlock to use the indexes.\r\n\r\nBut first I need to fix the bug from #6292 because the CreateNewBlock code currently calculates priorities correctly, whereas these indexes use CTxMemPoolEntry::GetPriority which gives incorrect results.",
      "created_at" : "2015-06-27T12:06:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-116024487",
      "id" : 116024487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-27T12:06:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/116024487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   }
]
