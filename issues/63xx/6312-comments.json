[
   {
      "body" : "Mind fixing that BIP link? 404",
      "created_at" : "2015-06-21T18:28:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-113938242",
      "id" : 113938242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-21T18:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113938242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Fixed.\n\nOn Sun, Jun 21, 2015 at 11:28 AM, Peter Todd <notifications@github.com>\nwrote:\n\n> Mind fixing that BIP link? 404\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-113938242>.\n>\n",
      "created_at" : "2015-06-21T18:39:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-113938911",
      "id" : 113938911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-21T18:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113938911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "Now again, could you please do up a quick demo example app that actually uses this? e.g. like my https://github.com/petertodd/checklocktimeverify-demos/blob/master/micropayment-channel.py\r\n\r\nDoesn't have to be much, but we really need a worked out example here... Notably, see how without a way to fix tx mutability the nSequence proposal really isn't any different in practice than just signing increasingly decreasing nLockTime's? Because if you could safely sign the transaction it'd already be mined and thus you don't need a relative nSequence - an absolute nLockTime calculated from the height/time of the tx you know already is in the chain is fine.\r\n\r\nIMO there's no reason to merge this until it has a safe use-case that provides a concrete benefit over the existing status quo; a simple change in what exact number is being signed isn't a concrete benefit.",
      "created_at" : "2015-06-22T00:05:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-113970979",
      "id" : 113970979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-22T00:05:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113970979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Why doesn' this patch include the code for OP_CHECKSEQUENCEVERIFY?",
      "created_at" : "2015-06-23T20:19:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-114630825",
      "id" : 114630825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-23T20:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114630825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@btcdrak that code is here:\r\n\r\nhttps://github.com/maaku/bitcoin/tree/checksequenceverify\r\n\r\nIt is entirely separate from what this pull request accomplishes. For example, it is possible to do simple transaction replacement without CHECKSEQUENCEVERIFY, as explained in the BIP. Likewise the source code of the CSV branch does not in fact depend on this pull request -- all CSV does is verify a constraint on the sequence number of the input, it does not depend on that sequence number having consensus-enforced semantics.",
      "created_at" : "2015-06-23T20:38:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-114634773",
      "id" : 114634773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-23T20:38:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114634773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "@maaku I think the value of this PR in isolation is limited. You really need the opcode as well. It would be wonderful if you could publish a separate PR+BIP for CSV if you dont wish to combine them.\r\n\r\nCSV is a very useful feature and one I think we clearly need to help address scalability. I see no profit in not getting it on the table now especially since it's been deployed in Elements already and is clearly working.",
      "created_at" : "2015-06-23T22:13:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-114656954",
      "id" : 114656954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-23T22:13:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114656954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "I'm working on it. Things take time.\nOn Jun 23, 2015 15:14, \"Ã Â¸Â¿tcDrak\" <notifications@github.com> wrote:\n\n> @maaku <https://github.com/maaku> I think the value of this PR in\n> isolation is limited. You really need the opcode as well. It would be\n> wonderful if you could publish a separate PR+BIP for CSV if you dont wish\n> to combine them.\n>\n> CSV is a very useful feature and one I think we clearly need to help\n> address scalability. I see no profit in not getting it on the table now\n> especially since it's been deployed in Elements already and is clearly\n> working.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-114656954>.\n>\n",
      "created_at" : "2015-06-23T22:21:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-114658497",
      "id" : 114658497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-06-23T22:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114658497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33211341"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33211341"
         }
      },
      "body" : "Probably should call this something other than sequence?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-06-24T23:59:09Z",
      "diff_hunk" : "@@ -14,5 +14,7 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n static const int COINBASE_MATURITY = 100;\n /** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n+/** Threshold for inverted CTxIn::nSequence: below this value it is interpreted as a relative lock-time, otherwise ignored. */\n+static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33211341",
      "id" : 33211341,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 5,
      "path" : "src/consensus/consensus.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33211341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33211350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33211350"
         }
      },
      "body" : "IsFinalTx was a better name IMO.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-06-24T23:59:21Z",
      "diff_hunk" : "@@ -673,22 +673,110 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n     return true;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33211350",
      "id" : 33211350,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33211350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322311"
         }
      },
      "body" : "The version check is in LockTime already, so redundant here...",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-06-26T01:31:35Z",
      "diff_hunk" : "@@ -969,6 +1050,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(dummy);\n         }\n \n+        // Enforce sequnce numbers as relative lock-time\n+        // only for tx.nVersion >= 2.\n+        int nLockTimeFlags = 0;\n+        if (tx.nVersion >= 2)\n+            nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322311",
      "id" : 33322311,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 144,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322326"
         }
      },
      "body" : "Perhaps STANDARD_LOCKTIME_VERIFY_FLAGS instead of nLockTimeFlags?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-06-26T01:32:11Z",
      "diff_hunk" : "@@ -969,6 +1050,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(dummy);\n         }\n \n+        // Enforce sequnce numbers as relative lock-time\n+        // only for tx.nVersion >= 2.\n+        int nLockTimeFlags = 0;\n+        if (tx.nVersion >= 2)\n+            nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n+\n+        // Only accept nLockTime-using transactions that can be mined in the next\n+        // block; we don't want our mempool filled up with transactions that can't\n+        // be mined yet.\n+        if (LockTime(tx, nLockTimeFlags, &view, chainActive.Height() + 1, GetAdjustedTime()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322326",
      "id" : 33322326,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 149,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322335"
         }
      },
      "body" : "The version check is in LockTime already, so redundant here...",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-06-26T01:32:26Z",
      "diff_hunk" : "@@ -153,7 +159,14 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->second.GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n+\n+            // Enforce sequnce numbers as relative lock-time\n+            // only for tx.nVersion >= 2.\n+            int nLockTimeFlags = 0;\n+            if (tx.nVersion >= 2)\n+                nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r33322335",
      "id" : 33322335,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 32,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33322335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "needs rebase",
      "created_at" : "2015-08-04T22:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-127784773",
      "id" : 127784773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-04T22:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/127784773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2015-08-12T06:39:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-130186849",
      "id" : 130186849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-12T06:39:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/130186849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37031834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37031834"
         }
      },
      "body" : "`s/sequnce/sequence`",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-13T22:10:46Z",
      "diff_hunk" : "@@ -860,6 +942,18 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(dummy);\n         }\n \n+        // Enforce sequnce numbers as relative lock-time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37031834",
      "id" : 37031834,
      "original_commit_id" : "b011af6c551585e03a8575e3cc9e87d02472fba5",
      "original_position" : 139,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37031834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2015-08-13T22:14:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-130863975",
      "id" : 130863975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-13T22:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/130863975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Refs #6564",
      "created_at" : "2015-08-17T19:28:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-131936872",
      "id" : 131936872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-17T19:28:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/131936872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Agreed with @petertodd that this is fairly pointless without BIP-62 (malleability), but I do want both for lightning.\r\n\r\n(I also note that we should in future detach the locktime field from requiring non-FFFFFFFF nSequence; they're completely orthogonal AFAICT.  But that's a minor soft-fork.)",
      "created_at" : "2015-08-18T00:18:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132002885",
      "id" : 132002885,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T00:18:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132002885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "@petertodd isn't the point of this that it is relative?  That is,  I don't need to know what block the first transaction is in,  nor the follow up transactions?\r\nBut I know that they will be (at least) no less than `nSequence` apart?",
      "created_at" : "2015-08-18T00:28:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132004029",
      "id" : 132004029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T00:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132004029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37256672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37256672"
         }
      },
      "body" : "Took me a while to see what you're suggestion, but I agree. I'll rework it to be a policy.h option.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-18T01:34:37Z",
      "diff_hunk" : "@@ -969,6 +1050,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(dummy);\n         }\n \n+        // Enforce sequnce numbers as relative lock-time\n+        // only for tx.nVersion >= 2.\n+        int nLockTimeFlags = 0;\n+        if (tx.nVersion >= 2)\n+            nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n+\n+        // Only accept nLockTime-using transactions that can be mined in the next\n+        // block; we don't want our mempool filled up with transactions that can't\n+        // be mined yet.\n+        if (LockTime(tx, nLockTimeFlags, &view, chainActive.Height() + 1, GetAdjustedTime()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37256672",
      "id" : 37256672,
      "original_commit_id" : "856081c2b69027287660b099722af855f1cf1c1f",
      "original_position" : 149,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37256672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "@rustyrussell @petertodd : what relative lock-time gives you is a committed response window to a proof-of-publication. With CHECKSEQUENCEVERIFY (#6564) there is indeed some features you can get that in some situations aren't just replicatable with CHECKLOCKTIMEVERIFY. However the most exciting use cases also require something additional still. In the case of lightning, not just BIP 62, but some sort of normative txid.\r\n\r\n@dcousens I believe @petertodd's point is that since all the inputs are already on the block chain, you can just set nLockTime to the confirmed age of the input + the relative lock-time. And if the inputs are not all confirmed, then you are building chains of transactions that aren't safe due to malleability. So really this is a feature that becomes most useful when we have a definitive fix for malleability, which we will in the not so distant future.",
      "created_at" : "2015-08-18T01:42:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132024558",
      "id" : 132024558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T01:42:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132024558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "Yup, my objection was a somewhat pedantic point of process; now that CSV has been proposed it's moot objection.\n\nWill review all this stuff soon FWIW, travelling right now... Per usual. :/\n\nOn 17 August 2015 18:43:33 GMT-07:00, Mark Friedenbach <notifications@github.com> wrote:\n>@rustyrussell @petertodd : what relative lock-time gives you is a\n>committed response window to a proof-of-publication. With\n>CHECKSEQUENCEVERIFY (#6564) there is indeed some features you can get\n>that in some situations aren't just replicatable with\n>CHECKLOCKTIMEVERIFY. However the most exciting use cases also require\n>something additional still. In the case of lightning, not just BIP 62,\n>but some sort of normative txid.\n>\n>@dcousens I believe @petertodd's point is that since all the inputs are\n>already on the block chain, you can just set nLockTime to the confirmed\n>age of the input + the relative lock-time. And if the inputs are not\n>all confirmed, then you are building chains of transactions that aren't\n>safe due to malleability. So really this is a feature that becomes most\n>useful when we have a definitive fix for malleability, which we will in\n>the not so distant future.\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132024558\n\n",
      "created_at" : "2015-08-18T01:57:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132028861",
      "id" : 132028861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T01:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132028861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "> And if the inputs are not all confirmed, then you are building chains of transactions that aren't safe due to malleability.\r\n\r\nRight,  thanks for clearing that up @maaku :)",
      "created_at" : "2015-08-18T02:23:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132039404",
      "id" : 132039404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T02:23:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132039404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@maaku Just to clarify (though a bit OT):\r\n\r\nLightning *wants* normalized txid for simpler dual-input anchors, but doesn't need it (the escape tx design seems to work).\r\n\r\nLightning *needs* normalized txid for outsourcing of revocation enforcement.",
      "created_at" : "2015-08-18T04:22:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132069024",
      "id" : 132069024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-18T04:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132069024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "Fixed @luke-jr's nits.",
      "created_at" : "2015-08-19T01:16:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-132408863",
      "id" : 132408863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-19T01:16:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132408863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374565"
         }
      },
      "body" : "Probably should call this something other than sequence?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T02:22:51Z",
      "diff_hunk" : "@@ -6,11 +6,22 @@\n #ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n #define BITCOIN_CONSENSUS_CONSENSUS_H\n \n+/** For uint32_t */\n+#include <stdint.h>\n+\n /** The maximum allowed size for a serialized block, in bytes (network rule) */\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n+/** Threshold for inverted CTxIn::nSequence: below this value it is interpreted as a relative lock-time, otherwise ignored. */\n+static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374565",
      "id" : 37374565,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 14,
      "path" : "src/consensus/consensus.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374581"
         }
      },
      "body" : "IsFinalTx was a better name IMO.\r\n",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T02:23:11Z",
      "diff_hunk" : "@@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374581",
      "id" : 37374581,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374960"
         }
      },
      "body" : "Luke, did you notice that the semantics changed? That's why the name\nchanged.\nOn Aug 18, 2015 7:23 PM, \"Luke-Jr\" <notifications@github.com> wrote:\n\n> In src/main.cpp\n> <https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374581>:\n>\n> > @@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n> >      return nEvicted;\n> >  }\n> >\n> > -bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n> > +int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n>\n> IsFinalTx was a better name IMO.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6312/files#r37374581>.\n>\n",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T02:33:02Z",
      "diff_hunk" : "@@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37374960",
      "id" : 37374960,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37374960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37376960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37376960"
         }
      },
      "body" : "You mean because it returns int64_t instead of bool? But unless I missed a spot, the return value is only ever *used* as a bool in the same sense...",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T03:23:33Z",
      "diff_hunk" : "@@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37376960",
      "id" : 37376960,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37376960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37377633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37377633"
         }
      },
      "body" : "No it switches to opposite meaning -- zero indicates tx is final, nonzero\nindicates when it will become final.\nOn Aug 18, 2015 8:24 PM, \"Luke-Jr\" <notifications@github.com> wrote:\n\n> In src/main.cpp\n> <https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37376960>:\n>\n> > @@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n> >      return nEvicted;\n> >  }\n> >\n> > -bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n> > +int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n>\n> You mean because it returns int64_t instead of bool? But unless I missed a\n> spot, the return value is only ever *used* as a bool in the same sense...\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6312/files#r37376960>.\n>\n",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T03:42:44Z",
      "diff_hunk" : "@@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37377633",
      "id" : 37377633,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37377633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37378264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37378264"
         }
      },
      "body" : "To expand, the change in semantics is required because it is no longer a\r\nsimple matter to introspect the transaction to see how long it will remain\r\nnon-final. You will see in some parts of the GUI code for example its\r\nreturn value is saved and used to calculate how long the transaction will\r\nremain locked, which is then displayed to the user.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T04:02:54Z",
      "diff_hunk" : "@@ -638,22 +638,110 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37378264",
      "id" : 37378264,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37378264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37378485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37378485"
         }
      },
      "body" : "`RELATIVE_LOCKTIME_THRESHOLD`?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-08-19T04:11:07Z",
      "diff_hunk" : "@@ -6,11 +6,22 @@\n #ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n #define BITCOIN_CONSENSUS_CONSENSUS_H\n \n+/** For uint32_t */\n+#include <stdint.h>\n+\n /** The maximum allowed size for a serialized block, in bytes (network rule) */\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n+/** Threshold for inverted CTxIn::nSequence: below this value it is interpreted as a relative lock-time, otherwise ignored. */\n+static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r37378485",
      "id" : 37378485,
      "original_commit_id" : "246d456476119d464adfb8fa2e938b6def13ad50",
      "original_position" : 14,
      "path" : "src/consensus/consensus.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37378485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "OK, I tested with with the lightning cli tools.  Passed and failed transactions using nSequence as expected.  That was for git rev 246d456476119d464adfb8fa2e938b6def13ad50.\r\n\r\nAcked-by: Rusty Russell <rusty@rustcorp.com.au> ",
      "created_at" : "2015-08-21T06:57:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-133307855",
      "id" : 133307855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-21T06:57:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133307855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "I have pushed two separate repos which provide an alternative to BIP 68 as specified, based on feedback received. I would appreciate review of these alternatives:\r\n\r\nhttps://github.com/maaku/bitcoin/tree/sequencenumbers2\r\n\r\nThis repo removes the inversion of the sequence number, such that the relative lock-time value is used directly as the sequence number.\r\n\r\nhttps://github.com/maaku/bitcoin/tree/sequencenumbers3\r\n\r\nThis repo also inverts the sequence number, as well as interprets it as a fixed-point number. This allows up to 5 year relative lock times using blocks as units, and saves 12 low-order bits for future use. Or, up to about 2 year relative lock times using seconds as units, and saves 4 bits for future use without second-level granularity. More bits could be recovered from time-based locktimes by choosing a higher granularity (a soft-fork change if done correctly).",
      "created_at" : "2015-08-28T00:57:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-135594513",
      "id" : 135594513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-28T00:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/135594513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "Mark Friedenbach <notifications@github.com> writes:\n> I have pushed two separate repos which provide an alternative to BIP 68 as specified, based on feedback received. I would appreciate review of these alternatives:\n>\n> https://github.com/maaku/bitcoin/tree/sequencenumbers2\n>\n> This repo removes the inversion of the sequence number, such that the relative lock-time value is used directly as the sequence number.\n\nOK, I like this.\n\n> https://github.com/maaku/bitcoin/tree/sequencenumbers3\n>\n> This repo also inverts the sequence number, as well as interprets it as a fixed-point number. This allows up to 5 year relative lock times using blocks as units, and saves 12 low-order bits for future use. Or, up to about 2 year relative lock times using seconds as units, and saves 4 bits for future use without second-level granularity. More bits could be recovered from time-based locktimes by choosing a higher granularity (a soft-fork change if done correctly).\n\nI think that's overkill.  We already have the high bit to say \"ignore\nit\" for future soft forks.\n\nBTW, you need to fix the commit messages, as they still talk about\ninversion.\n\nCheers,\nRusty.\n",
      "created_at" : "2015-08-31T00:34:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-136222776",
      "id" : 136222776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-08-31T00:34:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/136222776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "@maaku I like https://github.com/maaku/bitcoin/tree/sequencenumbers3 which leaves the door open for future expansion.",
      "created_at" : "2015-09-17T18:08:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-141169510",
      "id" : 141169510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-17T18:08:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141169510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Comparison links for others:\r\nhttps://github.com/bitcoin/bitcoin/compare/master...maaku:sequencenumbers2\r\nhttps://github.com/bitcoin/bitcoin/compare/master...maaku:sequencenumbers3",
      "created_at" : "2015-09-19T02:26:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-141609979",
      "id" : 141609979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-19T02:26:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141609979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Since posting the two alternatives 26 days ago, I have had conversations with many stakeholders via the mailing list, IRC, direct messaging, and in-person at the Scaling Bitcoin workshop in Montreal. Not all of these conversations were explicitly on the public record, so I will obey Chatham House rules in presenting a summary of these conversations in aggregate without identities attached. I hope that those who disagree with the summary or the outcome speak up in response.\r\n\r\n* There seems to be consensus in favor of BIP 68: I was unable to find anyone willing to argue that BIP 68 is on the whole a bad idea, so long as half of the sequence space keeps the original pre-BIP 68 (non consensus) semantics. The present pull request respects this constraint.\r\n\r\n* There is universal consensus that the bit-inversion step should be dropped. I have updated this pull request accordingly.\r\n\r\n* There is mixed views on whether the range of allowed relative lock-times should be constrained to set aside future bits for soft-fork changes (see: sequencenumbers2 and sequencenumbers3 discussed above). One developer argued strongly against this on the basis of favoring simplicity. Three developers argued to varying degrees in favor of setting bits aside for future soft-fork changes. The rest who were asked were explicitly indifferent. Nobody, of the developers who were asked, has said that they would retract their support for this pull request if the consensus were to be against them on this issue.\r\n\r\nWith this in mind I have decided to update this pull request to the sequencenumbers3 branch. This branch restricts maximum relative lock-times to approximately 1 year, and in doing so sets aside **5** bits for future expansion when using time-based relative lock-time (granularity: 1 second), and **14** bits for future expansion when using height-based relative lock-time (granularity: 1 block). Further bits could be set aside by decreasing granularity in a soft-fork compatible way.\r\n\r\nAll of the presently imagined use cases for BIP 68 and the related CHECKSEQUENCEVERIFY opcode (#6564) use relative lock-times much less than one year, so it is expected that this constraint on the maximum range does not restrict usability in any meaningful way.\r\n\r\nBIP 68 will be updated to reflect this new scheme.",
      "created_at" : "2015-09-23T02:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142471985",
      "id" : 142471985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-25T18:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142471985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40199246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40199246"
         }
      },
      "body" : "\"I believe this is incorrect, as LockTime() is called for the coinbase transaction by ContextualCheckBlock()\" - @petertodd from [other branch](https://github.com/maaku/bitcoin/commit/d454248ad6eab502762ed0b0aaa37d0f646f1844#commitcomment-13327523)",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-09-23T12:55:58Z",
      "diff_hunk" : "@@ -638,22 +638,105 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = tx.nVersion >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (CTxIn::SEQUENCE_FINAL == txin.nSequence)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to.\n+        if (!fEnforceBIP68)\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Skip this input if it is not in the UTXO set. This should\n+        // only ever happen in non-consensus code.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40199246",
      "id" : 40199246,
      "original_commit_id" : "c11fa72951e500a0503a0c129d7ca3d11f19febe",
      "original_position" : 50,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40199246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "For some reason I was not email notified of Peter's nits. They have now been fixed, at least those on the commit you linked to.",
      "created_at" : "2015-09-23T13:57:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142609581",
      "id" : 142609581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-23T13:57:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142609581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40207799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40207799"
         }
      },
      "body" : "Would it be possible to retain the old IsFinalTx function, including its code, but replace its \"return true;\" statements by \"return LockTime(...) == 0\", and use that in consensus code? That would make it trivial to see this is a softfork.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-09-23T14:15:03Z",
      "diff_hunk" : "@@ -638,22 +638,106 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40207799",
      "id" : 40207799,
      "original_commit_id" : "5624be42cbb55cc471a49eef882c1ae71c7d2f25",
      "original_position" : 15,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40207799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Just pushed a relatively minor consensus change to BIP 68 functionality, based on something that was observed while editing the BIP 68 and BIP 112 drafts.\r\n\r\nPreviously, it was possible to have a \"zero\" relative lock-time that allowed child and parent to be in the same block, but only if block-height was used. The smallest allowed relative lock-height using block-time required at least one block separation between child and parent. The reason for this asymmetry was a legacy of bit inversion where SEQUENCE_FINAL overlapped in meaning with 0-height relative lock-time.\r\n\r\nThere is no longer justification for treating these two units separately. Conceivably there could be an obscure use case where the CHECKSEQUENCEVERIFY parameter is calculated on the stack and yet the check itself needs to be disabled under some circumstances -- passing though a zero in this case could save a few bytes over wrapping the CSV in an IF/ELSE block. So I have opted for making the behavior symmetric in that both 0x00000000 (0 blocks) and 0x40000000 (0 seconds) allow child and parent to appear in the same block. The tests have been updated accordingly.",
      "created_at" : "2015-09-23T17:04:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142664443",
      "id" : 142664443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-23T17:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142664443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40233364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40233364"
         }
      },
      "body" : "Yep that would have been better. However I wonder if this is necessary or desirable now that this PR has received many full reviews, including verification that the change is a soft-fork.\r\n\r\nIf you or others are having trouble verifying this, I recommend looking at the individual commits. There are two preparatory commits that contain no consensus changes, only rearrangement of the logic for IsFinalTx() into what will become LockTime(). The BIP 68 changes then affect only specific portions of the IsFinalTx / LockTime code.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-09-23T17:40:24Z",
      "diff_hunk" : "@@ -638,22 +638,106 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40233364",
      "id" : 40233364,
      "original_commit_id" : "5624be42cbb55cc471a49eef882c1ae71c7d2f25",
      "original_position" : 15,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40233364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "All nits have been addressed except @sipa's (see my comment there).\r\n\r\n@rustyrussell for your convenience I have extracted the patch from the tree you ACK'd to the present state of the pull request. Here is the 0bin:\r\n\r\nhttp://0bin.net/paste/R7x6LS+2bZ588OLs#2yvQPDe36d0PxI8ImqRhhie4-DS5l4wb0OcpDJIgWw1",
      "created_at" : "2015-09-23T17:40:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142675375",
      "id" : 142675375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-23T17:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142675375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "needs rebase",
      "created_at" : "2015-09-23T19:48:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142708879",
      "id" : 142708879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-23T19:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142708879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Does not need rebase... anyone know how to get github to reload a PR? My branch is updated but the PR is not updating.\r\n\r\nEDIT: yay fixed",
      "created_at" : "2015-09-23T20:01:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-142712283",
      "id" : 142712283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-23T20:03:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142712283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40260094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40260094"
         }
      },
      "body" : "I have broken out another commit in order to make review easier.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-09-23T21:28:25Z",
      "diff_hunk" : "@@ -638,22 +638,106 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r40260094",
      "id" : 40260094,
      "original_commit_id" : "5624be42cbb55cc471a49eef882c1ae71c7d2f25",
      "original_position" : 15,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40260094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "So to summarise this latest iteration now frees up some nSequence bits for future expansion as follows:\r\n\r\nThe first two bits signal whether relative lock-time is used, and which units (0 = height, 1 = seconds for bit 30), then either 16 bits of relative height, or 25 bits of relative time.\r\n\r\nThe remaining low order bits (5 or 14) are unused, reserved for future expansion: if you don't want relative lock-time, there's 31 bits to use for whatever purpose (by setting the MSB) and if you do want relative lock-time, then there are 5 or 14 bits based on which units you use.  More bits are reclaimable if you decrease granularity (in a soft-fork compatible way), e.g. round up the second based relative lock-time to the next multiple of 512, and you now have 14 bits for both units (512s is less than the expected time between blocks, so it's barely any a change anyway).",
      "created_at" : "2015-09-25T19:03:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-143324446",
      "id" : 143324446,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-25T19:03:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143324446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Rebase to fix merge.",
      "created_at" : "2015-09-25T22:31:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-143368073",
      "id" : 143368073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-25T22:31:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143368073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "I believe all nits have been addressed. Can we get some ACKs?",
      "created_at" : "2015-09-27T21:02:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-143594888",
      "id" : 143594888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-27T21:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143594888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "This failed my test script.\r\n\r\nIn particular, I generate tx A, and tx B which spends A and has nSequence indicating +60 seconds.  I sendrawtransaction A, generate 11 blocks, sleep 61, generate 11 blocks, then try to spend B.  It fails as nonfinal.  This worked with previous versions.  I suspect in some places we're using median time and in other places block time.\r\n\r\nImmediately after spending A, we try to spend B (and expect it to fail): in LockTime() nBlockTime is 1443510877, but pindexBestHeader->GetAncestor(coins.nHeight-1)->GetMedianTimePast() is 1443510890.  That extra 13 seconds is just weird.\r\n\r\nThis is -regtest, BTW.",
      "created_at" : "2015-09-29T07:18:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-143970721",
      "id" : 143970721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-29T07:18:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143970721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "Rusty, I believe that is due to the normal behavior of regtest. It is a consensus rule that the median time past increase in each block, and in regtest mode you are creating blocks faster than 1 second. The consensus rule probably should have been checking that nTime >= GetMedianTimePast() rather than strictly greater, but _c'est la vie_. Add that to the list of trivial hard forks.\r\n\r\nSo given that there were 13 seconds of discrepency, you've given us insight into how long it took on your machine to generate 100 blocks, submit a transaction, and generate 22 more blocks.",
      "created_at" : "2015-09-29T16:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-144112190",
      "id" : 144112190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-01T20:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144112190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "@maaku thanks, indeed: the block times were being pushed forward about 13 seconds (block generation bumps the time if it would be <= GetMedianPast()).  Taking that into account, my tests all pass!\r\n\r\nTested-by: Rusty Russell <rusty@rustcorp.com.au>",
      "created_at" : "2015-09-30T01:16:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-144244769",
      "id" : 144244769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-09-30T01:16:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144244769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "body" : "@maaku What I wanted to say earlier is that I think that CheckLockTime is being called in the wallet for not-new transactions, which would make it fail for locktimed transactions in the wallet, even long after they are in the chain.\r\n",
      "created_at" : "2015-10-01T20:51:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-144844503",
      "id" : 144844503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-01T20:52:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144844503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Can you fix the link in the original pull message, it sends you to an outdated BIP now.",
      "created_at" : "2015-10-02T21:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-145157466",
      "id" : 145157466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-02T21:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145157466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos The link was updated https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki",
      "created_at" : "2015-10-02T21:22:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-145158557",
      "id" : 145158557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-02T21:22:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145158557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "We're permanently sacrificing a bit from nSequence - and possibly sacrificing a few more longer term. But the immediate utility of CSV seems to outweigh the sacrifice, and we can eventually recover 31 bits back if we end up deprecating this mechanism in the future.\r\n\r\nI still have some reservations on the implementation. Did not test with wallet. But I would like to see some form of this merged soon.\r\n.",
      "created_at" : "2015-10-06T12:28:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-145841798",
      "id" : 145841798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-13T20:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145841798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41537512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41537512"
         }
      },
      "body" : "This is kinda scary... I'd much rather see the UTXO not found, yet it should be there, case fail hard (by an assertion?) than introduce new consensus behavior in the case of bugs.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-08T16:44:06Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins)) {\n+            // It is fully expected that coinbases inputs are not\n+            // found in the UTXO set. Proceed to the next intput...\n+            if (txin.prevout.IsNull())\n+                continue;\n+            // If a non-coinbase input cannot be found, we cannot\n+            // be certain about whether lock-time constraints have\n+            // been satisfied. Note that it should only ever be\n+            // possible for this to happen with wallet transactions\n+            // that have unknown inputs.\n+            else\n+                return std::numeric_limits<int64_t>::max();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41537512",
      "id" : 41537512,
      "original_commit_id" : "0f8a3c420c10bbc9f7bda9d6bc178a10edd728fe",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41537512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41540525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41540525"
         }
      },
      "body" : "Is this case tested anywhere?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-08T17:11:06Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins)) {\n+            // It is fully expected that coinbases inputs are not\n+            // found in the UTXO set. Proceed to the next intput...\n+            if (txin.prevout.IsNull())\n+                continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41540525",
      "id" : 41540525,
      "original_commit_id" : "0f8a3c420c10bbc9f7bda9d6bc178a10edd728fe",
      "original_position" : 53,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41540525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41899674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41899674"
         }
      },
      "body" : "(summarizing earlier discussion about this) The problem is that that would be the case whenever the wallet check finality on an transaction whose inputs are already spent.\r\n\r\nIMHO the clean solution is to pass in the heights/times of all inputs to this function, which could have a different implementation for mempool/wallet/blockchain behaviour. Another - but probably more invasive change - would be to extend the CCoinsView interface to be able to request height/time data for inputs, and implement a CCoinsView for the wallet too.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-13T17:45:08Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins)) {\n+            // It is fully expected that coinbases inputs are not\n+            // found in the UTXO set. Proceed to the next intput...\n+            if (txin.prevout.IsNull())\n+                continue;\n+            // If a non-coinbase input cannot be found, we cannot\n+            // be certain about whether lock-time constraints have\n+            // been satisfied. Note that it should only ever be\n+            // possible for this to happen with wallet transactions\n+            // that have unknown inputs.\n+            else\n+                return std::numeric_limits<int64_t>::max();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41899674",
      "id" : 41899674,
      "original_commit_id" : "0f8a3c420c10bbc9f7bda9d6bc178a10edd728fe",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41899674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41900142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41900142"
         }
      },
      "body" : "@maaku Did you test this in conjunction with a wallet? My guess is that it will start hiding all old transactions whose inputs are completely spent, because they are treated as non-final.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-13T17:48:58Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins)) {\n+            // It is fully expected that coinbases inputs are not\n+            // found in the UTXO set. Proceed to the next intput...\n+            if (txin.prevout.IsNull())\n+                continue;\n+            // If a non-coinbase input cannot be found, we cannot\n+            // be certain about whether lock-time constraints have\n+            // been satisfied. Note that it should only ever be\n+            // possible for this to happen with wallet transactions\n+            // that have unknown inputs.\n+            else\n+                return std::numeric_limits<int64_t>::max();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r41900142",
      "id" : 41900142,
      "original_commit_id" : "0f8a3c420c10bbc9f7bda9d6bc178a10edd728fe",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41900142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Looks good. Having 1 year of relative time for nSequence is more than sufficient for multisigature revocation scripts used in systems such as Lightning Network. These systems have the particular use case of revoking multisignature double-spends via lower relative locktimes. In effect, the 1 year relative time becomes a dispute period for observing activity on-chain and is therefore well more than sufficient, as that presumes a maximum programmable length of onece per year when one watches the blockchain.\r\n\r\nAdditionally, the per-input use of consuming a bit in nSequence makes a lot of sense, as there may be inputs with different behavior -- applying it to all inputs with nVersion would significantly increase complexity and reduce use, as maaku explained. It's also good to have similar functionality for blockheight and relative timestamp to match nLockTime.\r\n\r\nEnabling/disabling relative locks permanently consumes a single bit in nSequence seems to make a lot of sense, as there may be different uses of relative timestamps (e.g. timestops in the future) or more exotic uses. Stellar has something which uses the phrase \"sequence number\"[1] but appears that functionality in Bitcoin can be used without some sequence flag via sending to different Bitcoin addresses per transaction.\r\n\r\n[1] https://www.stellar.org/blog/multisig-and-simple-contracts-stellar/",
      "created_at" : "2015-10-15T18:47:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-148485847",
      "id" : 148485847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-15T18:53:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148485847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13424781?v=3",
         "events_url" : "https://api.github.com/users/josephpoon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josephpoon/followers",
         "following_url" : "https://api.github.com/users/josephpoon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josephpoon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josephpoon",
         "id" : 13424781,
         "login" : "josephpoon",
         "organizations_url" : "https://api.github.com/users/josephpoon/orgs",
         "received_events_url" : "https://api.github.com/users/josephpoon/received_events",
         "repos_url" : "https://api.github.com/users/josephpoon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josephpoon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josephpoon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josephpoon"
      }
   },
   {
      "body" : "utACK\r\n\r\nGave a close read-over. I think the extra flexibility is a good idea at the expense of total relative lock time span. ",
      "created_at" : "2015-10-15T21:14:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-148523089",
      "id" : 148523089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-15T21:14:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148523089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42426354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42426354"
         }
      },
      "body" : "Reverted to prior behavior of continuing to the next input if the UTXO doesn't exist in the view.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-19T21:10:31Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers equal to or above the locktime threshold\n+        // are not treated as relative lock-times, nor are they given\n+        // any consensus-enforced meaning at this point.\n+        if (txin.nSequence >= CTxIn::SEQUENCE_LOCKTIME_THRESHOLD)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins)) {\n+            // It is fully expected that coinbases inputs are not\n+            // found in the UTXO set. Proceed to the next intput...\n+            if (txin.prevout.IsNull())\n+                continue;\n+            // If a non-coinbase input cannot be found, we cannot\n+            // be certain about whether lock-time constraints have\n+            // been satisfied. Note that it should only ever be\n+            // possible for this to happen with wallet transactions\n+            // that have unknown inputs.\n+            else\n+                return std::numeric_limits<int64_t>::max();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42426354",
      "id" : 42426354,
      "original_commit_id" : "0f8a3c420c10bbc9f7bda9d6bc178a10edd728fe",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42426354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-10-20T04:07:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-149425816",
      "id" : 149425816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-20T04:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149425816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Whats with all the univalue files?",
      "created_at" : "2015-10-20T10:41:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-149518405",
      "id" : 149518405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-20T10:41:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149518405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Build files that should be masked off by `.gitignore` but weren't. I've removed them.",
      "created_at" : "2015-10-20T16:14:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-149619493",
      "id" : 149619493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-20T16:14:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149619493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "@maaku looks like travis timed out on one of the jobs and needs to be restarted.",
      "created_at" : "2015-10-21T18:38:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-149988517",
      "id" : 149988517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-21T18:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149988517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42668695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42668695"
         }
      },
      "body" : "We need to hold `cs_main` for this, though I think the callers already do.  So perhaps an `AssertLockHeld(cs_main)` would be appropriate at the top of this function?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-21T19:13:56Z",
      "diff_hunk" : "@@ -638,22 +638,143 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42668695",
      "id" : 42668695,
      "original_commit_id" : "5f7a3587bd24f65ab043c99ec061b969cd061d00",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42668695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "concept ACK, will code review soon",
      "created_at" : "2015-10-21T22:13:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-150039784",
      "id" : 150039784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-21T22:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150039784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-10-22T15:41:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-150266177",
      "id" : 150266177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-22T15:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150266177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5617245?v=3",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "body" : "FYI the stray univalue files were fixed upstream with an updated .gitignore in libunivalue.  Not sure if/when that gets updated in-tree.",
      "created_at" : "2015-10-23T19:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-150666955",
      "id" : 150666955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-23T19:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150666955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1492956?v=3",
         "events_url" : "https://api.github.com/users/jmcorgan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jmcorgan/followers",
         "following_url" : "https://api.github.com/users/jmcorgan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jmcorgan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jmcorgan",
         "id" : 1492956,
         "login" : "jmcorgan",
         "organizations_url" : "https://api.github.com/users/jmcorgan/orgs",
         "received_events_url" : "https://api.github.com/users/jmcorgan/received_events",
         "repos_url" : "https://api.github.com/users/jmcorgan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jmcorgan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jmcorgan"
      }
   },
   {
      "body" : "@jmcorgan it was rebased out.",
      "created_at" : "2015-10-23T19:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-150671992",
      "id" : 150671992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-23T19:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150671992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42923384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42923384"
         }
      },
      "body" : "It is worth noting that this function was IsFinalTx() which does not currently have an `AssertLockHeld(cs_main)` in the main tree. I don't think it does any harm adding an assert though.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-23T23:03:26Z",
      "diff_hunk" : "@@ -638,22 +638,143 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42923384",
      "id" : 42923384,
      "original_commit_id" : "5f7a3587bd24f65ab043c99ec061b969cd061d00",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42923384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42931264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42931264"
         }
      },
      "body" : "Ok, I have added `AssertLockHeld(cs_main)`.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-24T06:58:21Z",
      "diff_hunk" : "@@ -638,22 +638,143 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r42931264",
      "id" : 42931264,
      "original_commit_id" : "5f7a3587bd24f65ab043c99ec061b969cd061d00",
      "original_position" : 77,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42931264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2015-10-26T09:49:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-151083608",
      "id" : 151083608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-26T09:49:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151083608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649160?v=3",
         "events_url" : "https://api.github.com/users/rubensayshi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rubensayshi/followers",
         "following_url" : "https://api.github.com/users/rubensayshi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rubensayshi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rubensayshi",
         "id" : 649160,
         "login" : "rubensayshi",
         "organizations_url" : "https://api.github.com/users/rubensayshi/orgs",
         "received_events_url" : "https://api.github.com/users/rubensayshi/received_events",
         "repos_url" : "https://api.github.com/users/rubensayshi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rubensayshi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rubensayshi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rubensayshi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43016421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43016421"
         }
      },
      "body" : "By mistake I commented on the commit not PR, but here it seems it should be GetBlockTime() instead of GetMedianTimePast() or am I missing something ?",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-26T16:28:44Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    AssertLockHeld(cs_main);\n+\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();\n+\n+            // The only time the negative branch of this conditional\n+            // is executed is when the prior output was taken from the\n+            // mempool, in which case we assume it makes it into the\n+            // same block (see above).\n+            int64_t nCoinTime = (nCoinHeight <= (indexBestBlock.nHeight+1))\n+                              ? indexBestBlock.GetAncestor(nCoinHeight-1)->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43016421",
      "id" : 43016421,
      "original_commit_id" : "dd817d2cd10e9b5d619294e390e88559b737f1ab",
      "original_position" : 86,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43016421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43021288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43021288"
         }
      },
      "body" : "@NicolasDorier See https://github.com/bitcoin/bitcoin/pull/6566",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-26T17:03:30Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    AssertLockHeld(cs_main);\n+\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();\n+\n+            // The only time the negative branch of this conditional\n+            // is executed is when the prior output was taken from the\n+            // mempool, in which case we assume it makes it into the\n+            // same block (see above).\n+            int64_t nCoinTime = (nCoinHeight <= (indexBestBlock.nHeight+1))\n+                              ? indexBestBlock.GetAncestor(nCoinHeight-1)->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43021288",
      "id" : 43021288,
      "original_commit_id" : "dd817d2cd10e9b5d619294e390e88559b737f1ab",
      "original_position" : 86,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43021288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5617245?v=3",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43021540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43021540"
         }
      },
      "body" : "Pasting @maaku 's response on the commit :\r\n\r\n> No, GetMedianTimePast is preferred because it is not a free choice by the miner who included the transaction being spent. BIP 113 changes the other end of the interval for both nLockTime and nSequence to be GetMedianTimePast, which is a soft-fork change, but changing the start of the interval in that way would be a hard-fork change. So we start from the very beginning using GetMedianTimePast.\r\n\r\nOk it is clear thanks !",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-10-26T17:05:19Z",
      "diff_hunk" : "@@ -638,22 +638,145 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const CCoinsView* pCoinsView, int nBlockHeight, int64_t nBlockTime)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    AssertLockHeld(cs_main);\n+\n+    CCoins coins;\n+\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    int nMinHeight = 0;\n+    int64_t nMinTime = 0;\n+    // Will remain equal to true if all inputs are finalized\n+    // (CTxIn::SEQUENCE_FINAL).\n+    bool fFinalized = true;\n+\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+        // Set a flag if we witness an input that isn't finalized.\n+        if (txin.nSequence == CTxIn::SEQUENCE_FINAL)\n+            continue;\n+        else\n+            fFinalized = false;\n+\n+        // Do not enforce sequence numbers as a relative lock time\n+        // unless we have been instructed to, and a view has been\n+        // provided.\n+        if (!(fEnforceBIP68 && pCoinsView))\n+            continue;\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLED_FLAG)\n+            continue;\n+\n+        // Fetch the UTXO corresponding to this input.\n+        //\n+        // If the UTXO is not found, proceed to the next because we\n+        // will not be able to do the relative lock-time calculation.\n+        // This should never happen in consensus code.\n+        //\n+        // The better solution would be to fail, but that requires\n+        // rewriting many pieces of non-consensus code that call\n+        // IsFinalTx or CheckFinalTx to collect this information\n+        // and pass it in somehow. This would not be simple to\n+        // back-port for the soft-fork, however.\n+        if (!pCoinsView->GetCoins(txin.prevout.hash, coins))\n+            continue;\n+\n+        // coins.nHeight is MEMPOOL_HEIGHT (an absurdly high value)\n+        // if the parent transaction was from the mempool. We can't\n+        // know what height it will have once confirmed, but we\n+        // assume it makes it in the same block.\n+        int nCoinHeight = std::min(coins.nHeight, nBlockHeight);\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_SECONDS_FLAG) {\n+            // In two locations that follow we make reference to\n+            // chainActive.Tip(). To prevent a race condition, we\n+            // store a reference to the current tip.\n+            //\n+            // Note that it is not guaranteed that indexBestBlock will\n+            // be consistent with the passed in view. The proper thing\n+            // to do is to have the view return time information about\n+            // UTXOs.\n+            const CBlockIndex& indexBestBlock = *chainActive.Tip();\n+\n+            // The only time the negative branch of this conditional\n+            // is executed is when the prior output was taken from the\n+            // mempool, in which case we assume it makes it into the\n+            // same block (see above).\n+            int64_t nCoinTime = (nCoinHeight <= (indexBestBlock.nHeight+1))\n+                              ? indexBestBlock.GetAncestor(nCoinHeight-1)->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r43021540",
      "id" : 43021540,
      "original_commit_id" : "dd817d2cd10e9b5d619294e390e88559b737f1ab",
      "original_position" : 86,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43021540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "This branch has been rebased with the recently merged \"median past locktime\" #6566",
      "created_at" : "2015-10-27T00:35:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-151325011",
      "id" : 151325011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-27T00:35:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151325011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "To reiterate a comment I've made before on the commits but which may have been lost: I dislike the fact that the LockTime function skips non-existing inputs in the CCoinsView. I believe that's a dangerous mix of non-consensus logic in consensus code, and ideally it would be a pure logic functions which just takes a list of input heights/times and makes decisions. Different call sites can then pass that data by pulling it out of chainstate, mempool or wallet as wanted.",
      "created_at" : "2015-10-29T20:09:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-152304301",
      "id" : 152304301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-29T20:09:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152304301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa ACK, and I like the idea of explicitly providing a list to work on.",
      "created_at" : "2015-10-29T20:11:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-152304803",
      "id" : 152304803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-29T20:11:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152304803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@sipa @petertodd I fully agree that skipping nonexisting inputs is ugly. But in the interest of expedient deployment I would suggest sticking a prominent TODO in there and reworking the calls in a separate PR.",
      "created_at" : "2015-10-29T21:58:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-152340120",
      "id" : 152340120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-29T21:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152340120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "I agree that IsFinalTx should be a pure logic function.\r\n\r\nI think a compromise can be made by having two overload of the IsFinalTx : One with the CCoinsView and the pure logic one.\r\n\r\nThe one with CCoinsView would pull out the list of input heights/times and then call the pure function. This would not break the code which already depends on the current IsFinalTx, while still allowing to call the IsFinalTx pure function for other part which need to decide by themselves how to deal with missing inputs.\r\n\r\nIf the PR needs to be expedient, the clients of IsFinalTx may be modified in a separate PR, but at least IsFinalTx will be easier to review and test.",
      "created_at" : "2015-10-30T07:10:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-152446525",
      "id" : 152446525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-10-30T07:10:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152446525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "I tried to implement the purely logical way of doing it in C#: (code very similar to C)\r\nChainedBlock correspond to CBlockIndex, also this is a non static method, so \"Input\" and \"LockTime\" refer to the currently evaluated transaction.\r\n\r\nBasically, I pass an array of CBlockIndex which is expected to have the same size as the number of input in the transaction. If an element is null, I assume that the transaction in the mempool. \"confirmedBlocks[i]\" corresponds to the CBlockIndex of the i'th input of the transaction.\r\n\r\nhttps://github.com/MetacoSA/NBitcoin/commit/874a21c240b2da2ab9310d4e5962336cfea4efbb\r\n\r\nNow, for being expedient on this PR, it would be possible to make a LockTime function which have the same parameter as now but which search the \"confirmedBlocks\" in the CCoinView directly, take the tip of th activeChain, and call the pure logic overload.",
      "created_at" : "2015-11-05T11:22:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-154034834",
      "id" : 154034834,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-05T11:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154034834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "Since I am assuming null element of the input's block array are spent output from the mempool, if you can keep the exact same semantic than now in the case the CCoinView does not have the coin, then you can feel with the array with the genesis CBlockIndex if CCoinView does not find the coin.\r\n\r\nThis would have the same effect as:\r\n```\r\nif (!pCoinsView->GetCoins(txin.prevout.hash, coins))\r\n            continue;\r\n```\r\n\r\nBecause nMinTime  and nMinHeight would not be modified.\r\n\r\nI can implement it in C if it helps, but since I can't really compile it would certainly need some fixes.",
      "created_at" : "2015-11-06T07:57:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-154339240",
      "id" : 154339240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-06T08:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154339240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "I gave it a try : 5f24b6603407c78ae112ae82fd293ac24fbefb52\r\n\r\nI have not compiled it, but it explains my point.",
      "created_at" : "2015-11-07T06:01:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-154632501",
      "id" : 154632501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-07T06:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154632501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier Oh that's great. I can cherry-pick this into the PR after testing.\r\n\r\nedit: doesn't compile.",
      "created_at" : "2015-11-07T06:56:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-154642749",
      "id" : 154642749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-07T07:16:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154642749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "I fix that for tonight, thanks, will setup travis on my branch as well as you advised.\r\n\r\nEDIT : fixed on 6a9495392f0f89ed9ce46ff2bc3460ce443f407a you can try, if it does not work I'll try to setup travis on my branch to debug myself.",
      "created_at" : "2015-11-07T08:03:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-154652895",
      "id" : 154652895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-07T08:09:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154652895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "Just sent a new commit which make LockTime independant from the tip, but also responsible for calculating the blocktime correctly based on MTP flag. With that I could remove several code duplication.\r\n\r\n65506413367f09d34b942a3b1256066e4346eccf",
      "created_at" : "2015-11-10T14:00:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155427265",
      "id" : 155427265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-10T14:01:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155427265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "I'm thinking about changing [this line](https://github.com/maaku/bitcoin/blob/sequencenumbers/src/main.cpp#L1929), so the CCoinView is not queried twice. (once in HaveInputs, the other in LockTime to fetch previous coins)\r\n\r\nAlso, it would make the consensus code dependent only the purely logical LockTime function instead of the other.\r\n\r\nThoughts ?\r\n",
      "created_at" : "2015-11-10T16:29:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155476778",
      "id" : 155476778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-10T16:29:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155476778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "rebased.",
      "created_at" : "2015-11-10T19:30:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155540642",
      "id" : 155540642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-10T19:30:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155540642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@NicolasDorier \r\n> I'm thinking about changing this line, so the CCoinView is not queried twice. (once in HaveInputs, the other in LockTime to fetch previous coins)\r\n> Thoughts ?\r\n\r\nIt reminds me of #6445 (which I'm happy to rebase at any time if/when/after \"we merge the mempool limiting code\" (sorry, I'm not sure which PR to point you to) ).",
      "created_at" : "2015-11-11T16:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155834027",
      "id" : 155834027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-11T16:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155834027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-11-11T16:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155839017",
      "id" : 155839017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-11T16:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155839017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "The scope of #6445 seems to do way more optimization. So I think that all of these optimization should be done at the same time with another PR. (calling the logical function LockTime included)\r\nI also don't know if it is worth since the CCoinView is already caching coins.\r\n\r\nThe PR seems complete to me right now, I'll start making more tests by running a node.\r\n\r\nLast question I have : I'm not used to dev in C, so I don't really know the best practice out here, as you can see [here](https://github.com/maaku/bitcoin/blob/949f8b63c137c43192e413b34df5fdba746dcd37/src/main.cpp#L641) there is a std::vector&lt;CCoins&gt; parameter. This works fine, but does a std::vector&lt;CCoin*&gt; would be preferable to avoid copies ?",
      "created_at" : "2015-11-11T18:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155866426",
      "id" : 155866426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-11T18:22:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155866426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier it is passing a reference to the vector. Not a C pro myself either but that shouldn't copy ",
      "created_at" : "2015-11-11T18:42:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155872869",
      "id" : 155872869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-11T18:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155872869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@instagibbs @NicolasDorier Indeed, it's being passed by reference.",
      "created_at" : "2015-11-11T18:44:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155873489",
      "id" : 155873489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-11T18:44:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155873489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "The vector is not copied, but when I access coins with .at (write or read) there is a copy of the item.",
      "created_at" : "2015-11-12T04:51:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155997499",
      "id" : 155997499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-12T04:51:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155997499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "No there isn't. Using the at method also returns a reference.\n",
      "created_at" : "2015-11-12T04:54:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-155997789",
      "id" : 155997789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-12T04:54:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155997789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44622250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44622250"
         }
      },
      "body" : "This will access uninitialized memory beyond the stack on the genesis block.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-11-12T05:16:18Z",
      "diff_hunk" : "@@ -638,19 +638,121 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const std::vector<CCoins>& prevCoins, const CBlockIndex& block)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? block.pprev->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44622250",
      "id" : 44622250,
      "original_commit_id" : "949f8b63c137c43192e413b34df5fdba746dcd37",
      "original_position" : 16,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44622250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44625635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44625635"
         }
      },
      "body" : "Good catch, I just fixed it on https://github.com/NicolasDorier/bitcoin/commit/eb2696281bd9bd13d0fca5c25e7c96969b5ef518\r\n\r\nIf you want to update this PR.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-11-12T06:39:51Z",
      "diff_hunk" : "@@ -638,19 +638,121 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const std::vector<CCoins>& prevCoins, const CBlockIndex& block)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? block.pprev->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44625635",
      "id" : 44625635,
      "original_commit_id" : "949f8b63c137c43192e413b34df5fdba746dcd37",
      "original_position" : 16,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44625635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44645715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44645715"
         }
      },
      "body" : "This has been updated.",
      "commit_id" : "9e2de51fcb9888fc7ce6739a79db298f9629998b",
      "created_at" : "2015-11-12T11:14:27Z",
      "diff_hunk" : "@@ -638,19 +638,121 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n     return nEvicted;\n }\n \n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+int64_t LockTime(const CTransaction &tx, int flags, const std::vector<CCoins>& prevCoins, const CBlockIndex& block)\n {\n-    if (tx.nLockTime == 0)\n-        return true;\n-    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n-        return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        if (!txin.IsFinal())\n-            return false;\n-    return true;\n+    int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? block.pprev->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#discussion_r44645715",
      "id" : 44645715,
      "original_commit_id" : "949f8b63c137c43192e413b34df5fdba746dcd37",
      "original_position" : 16,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6312",
      "updated_at" : "2015-11-12T11:14:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44645715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@btcdrak you should squash the two last commit together.",
      "created_at" : "2015-11-12T12:01:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156085927",
      "id" : 156085927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-12T12:01:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156085927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier So you've abstracted out a pure function for locktime calculations, but you're keeping a single wrapper for everything. Ideally, there would be different wrappers for mempool, chainstate(consensus), and wallet. Perhaps mempool and wallet can use the same one.",
      "created_at" : "2015-11-12T20:43:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156228076",
      "id" : 156228076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-12T20:43:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156228076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I addressed your nits on 95ea71b3f84f4c630470e2f85f0fb7ee5154b84b, thanks for reviewing, my C skills are a bit rusty. (Except the point about a coin not being found in the CCoinView)\r\nI planned to use the pure function on [this line](https://github.com/maaku/bitcoin/blob/sequencenumbers/src/main.cpp#L1938) but @jtimon pointed out that a bigger optimization is on the way (#6445) so I think it is better to use the pure one on a separate PR which make the optimizations.\r\n@btcdrak can you add my commit ? (travis running but it should be good)",
      "created_at" : "2015-11-13T06:08:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156334891",
      "id" : 156334891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-13T06:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156334891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier Cherry picked in f45f136, this should address the bulk of @sipa's nits, the optimisations will be done in a separate PR after this is merged.",
      "created_at" : "2015-11-13T07:33:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156354255",
      "id" : 156354255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-13T07:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156354255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "concept ACK + it-works test\r\n\r\nReviewed downstream payment channel code and specifications - no apparent conflicting uses in the field widely deployed AFAICS, which was my main concern with BIP 68.\r\n",
      "created_at" : "2015-11-13T08:00:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156357486",
      "id" : 156357486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-13T08:00:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156357486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Concept ACK.\r\n\r\nI really miss some RPC tests.\r\nA RPC test/playground-script could be used to demo the new functionality, allow modification for testers and would prove that it actually works. For testing/verification purposes its far more useful than the internal unit tests (not saying the unit tests would then be superfluous!).",
      "created_at" : "2015-11-16T08:37:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-156955709",
      "id" : 156955709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-16T08:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156955709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli I can provide that, but it would be in C#, so I'm not sure if it will be useful for people here.\r\n\r\nMaybe a website where you can create your own script and point it to your node ?",
      "created_at" : "2015-11-17T06:48:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-157288469",
      "id" : 157288469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-17T06:50:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157288469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@NicolasDorier: I think it should be in line with our `qa/rpc-tests`. They are written in Python, a language that everyone can lear within 5-10mins. :)\r\nYou might check the bip65 test scripts:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/qa/rpc-tests/bip65-cltv-p2p.py\r\n\r\nWould be awesome to see some bip68 rpc tests that demonstrate and test real-world examples.",
      "created_at" : "2015-11-17T08:10:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-157304824",
      "id" : 157304824,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-17T08:10:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157304824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli those are tests for the softfork and were added to CLTV after the mempool only PR was merged. They were added as part of the CLTV softfork implementation in #6351.\r\n\r\nSo for this reason, we'll add RPC tests when it's time to activate the softfork. \r\n\r\nThis PR is 5 months old now and we've accommodated everyone's nits. I believe it's refined enough now to be merged. It is currently mempool-only behaviour so does not pose any risks.\r\n\r\nI don't want this PR to end up in \"rebase-hell\", especially because we know there are more refactoring coming up that will affect this patch. Better merge now, and refactor/optimise afterwards.",
      "created_at" : "2015-11-17T08:43:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-157309898",
      "id" : 157309898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-17T08:43:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157309898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Had to rebase again due to changes in master.",
      "created_at" : "2015-11-17T10:45:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-157333907",
      "id" : 157333907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-17T10:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157333907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Rebase again due to divergence with master.",
      "created_at" : "2015-11-17T20:00:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6312#issuecomment-157488677",
      "id" : 157488677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6312",
      "updated_at" : "2015-11-17T20:00:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157488677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   }
]
