[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6315#discussion_r32887478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32887478"
         }
      },
      "body" : "I'm not sure if the locking of a signal emit is done within boost::signal of if this needs explicit locking of `uiInterface`?",
      "commit_id" : "b5621faf909f31a0d6c41c1340f37b0b3235c38a",
      "created_at" : "2015-06-20T20:01:10Z",
      "diff_hunk" : "@@ -527,6 +528,7 @@ UniValue setban(const UniValue& params, bool fHelp)\n             throw JSONRPCError(RPC_MISC_ERROR, \"Error: Unban failed\");\n     }\n \n+    uiInterface.BannedListChanged();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6315#discussion_r32887478",
      "id" : 32887478,
      "original_commit_id" : "2233f12a56416e029f4df50d83e2001f00fbd067",
      "original_position" : 12,
      "path" : "src/rpcnet.cpp",
      "position" : 12,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6315",
      "updated_at" : "2015-06-20T20:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32887478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6315#discussion_r32887492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32887492"
         }
      },
      "body" : "i recognized that `boost::posix_time::from_time_t` is not 64bit capable. Maybe someone has a idea how to fix this.",
      "commit_id" : "b5621faf909f31a0d6c41c1340f37b0b3235c38a",
      "created_at" : "2015-06-20T20:03:07Z",
      "diff_hunk" : "@@ -0,0 +1,192 @@\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bantablemodel.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+\n+#include \"net.h\"\n+#include \"sync.h\"\n+#include \"utiltime.h\"\n+\n+#include <QDebug>\n+#include <QList>\n+#include <QTimer>\n+\n+#include <boost/date_time/posix_time/posix_time.hpp>\n+#include <boost/date_time/c_local_time_adjustor.hpp>\n+\n+// private implementation\n+class BanTablePriv\n+{\n+public:\n+    /** Local cache of peer information */\n+    QList<CCombinedBan> cachedBanlist;\n+    /** Column to sort nodes by */\n+    int sortColumn;\n+    /** Order (ascending or descending) to sort nodes by */\n+    Qt::SortOrder sortOrder;\n+\n+    /** Pull a full list of banned nodes from CNode into our cache */\n+    void refreshBanlist()\n+    {\n+        std::map<CSubNet, int64_t> banMap;\n+        CNode::GetBanned(banMap);\n+\n+        cachedBanlist.clear();\n+#if QT_VERSION >= 0x040700\n+        cachedBanlist.reserve(banMap.size());\n+#endif\n+        std::map<CSubNet, int64_t>::iterator iter;\n+        for (iter = banMap.begin(); iter != banMap.end(); ++iter) {\n+            CCombinedBan banEntry;\n+            banEntry.subnet = iter->first;\n+            banEntry.bantil = iter->second;\n+            cachedBanlist.append(banEntry);\n+        }\n+    }\n+\n+    int size()\n+    {\n+        return cachedBanlist.size();\n+    }\n+\n+    CCombinedBan *index(int idx)\n+    {\n+        if(idx >= 0 && idx < cachedBanlist.size()) {\n+            return &cachedBanlist[idx];\n+        } else {\n+            return 0;\n+        }\n+    }\n+};\n+\n+BanTableModel::BanTableModel(ClientModel *parent) :\n+    QAbstractTableModel(parent),\n+    clientModel(parent),\n+    timer(0)\n+{\n+    columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n+    priv = new BanTablePriv();\n+    // default to unsorted\n+    priv->sortColumn = -1;\n+\n+    // set up timer for auto refresh\n+    timer = new QTimer();\n+    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+    timer->setInterval(MODEL_UPDATE_DELAY);\n+\n+    // load initial data\n+    refresh();\n+}\n+\n+void BanTableModel::startAutoRefresh()\n+{\n+    timer->start();\n+}\n+\n+void BanTableModel::stopAutoRefresh()\n+{\n+    timer->stop();\n+}\n+\n+int BanTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return priv->size();\n+}\n+\n+int BanTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return columns.length();;\n+}\n+\n+QVariant BanTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid())\n+        return QVariant();\n+\n+    CCombinedBan *rec = static_cast<CCombinedBan*>(index.internalPointer());\n+\n+    if (role == Qt::DisplayRole) {\n+        switch(index.column())\n+        {\n+        case Address:\n+            return QString::fromStdString(rec->subnet.ToString());\n+        case Bantime:\n+            //show time in users local timezone, not 64bit compatible!\n+            //TODO find a way to support 64bit timestamps\n+            boost::posix_time::ptime pt1 = boost::posix_time::from_time_t(rec->bantil);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6315#discussion_r32887492",
      "id" : 32887492,
      "original_commit_id" : "b5621faf909f31a0d6c41c1340f37b0b3235c38a",
      "original_position" : 123,
      "path" : "src/qt/bantablemodel.cpp",
      "position" : 123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6315",
      "updated_at" : "2015-06-20T20:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32887492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
