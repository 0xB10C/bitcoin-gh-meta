[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9137#discussion_r87689230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87689230"
         }
      },
      "body" : "Hmm... this would result in not longer coupling the hash with the data-structure. This can result in difficult states for future changes.\r\nWould a new primitive (maybe `CIncompleteTransaction` or similar) make more sense?",
      "commit_id" : "3fc45351717db4f5e06e18d060f86fbd9783f4b4",
      "created_at" : "2016-11-12T08:31:34Z",
      "diff_hunk" : "@@ -62,9 +62,14 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+void CTransaction::SetHash(const uint256 &tx_hash)\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    *const_cast<uint256*>(&hash) = tx_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9137#discussion_r87689230",
      "id" : 87689230,
      "original_commit_id" : "3fc45351717db4f5e06e18d060f86fbd9783f4b4",
      "original_position" : 8,
      "path" : "src/primitives/transaction.cpp",
      "position" : 8,
      "pull_request_review_id" : 8295141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9137",
      "updated_at" : "2016-11-12T08:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87689230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9137#discussion_r87689280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87689280"
         }
      },
      "body" : "Would there be a better way to keep the wallet separated from the UTXO set?\r\nDuring wallet creation (`init.cpp`) it could pass-in a lambda that would take care about finding the corresponding `CCoins`.",
      "commit_id" : "3fc45351717db4f5e06e18d060f86fbd9783f4b4",
      "created_at" : "2016-11-12T08:35:19Z",
      "diff_hunk" : "@@ -1506,6 +1507,29 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n     return ret;\n }\n \n+void CWallet::ScanForWalletUTXOs()\n+{\n+    for (std::unique_ptr<CCoinsViewCursor> pcursor(pcoinsTip->Cursor());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9137#discussion_r87689280",
      "id" : 87689280,
      "original_commit_id" : "3fc45351717db4f5e06e18d060f86fbd9783f4b4",
      "original_position" : 41,
      "path" : "src/wallet/wallet.cpp",
      "position" : 41,
      "pull_request_review_id" : 8295166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9137",
      "updated_at" : "2016-11-12T08:35:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87689280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Conceptual questions:\r\n* I guess the new `importmulti` call should also be covered in this change?\r\n* Idea: We could deprecate the other import calls in favor of `importmulti` (which has more features and makes generally more sense).\r\n\r\n* Does spending those incomplete transactions work well? IMO some checks (isFinal()) do read the nSequence value of the (now missing) inputs?\r\n\r\nThings that would need to be done:\r\n-> Visual attribution in the GUI\r\n-> the `fIncomplete` status should probably be added to the RPC TxToJSON (or similar) function\r\n-> Add tests",
      "created_at" : "2016-11-12T08:47:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9137#issuecomment-260110132",
      "id" : 260110132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9137",
      "updated_at" : "2016-11-12T08:47:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260110132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "NACK when done this way. If you need an incomplete transaction, use CMutableTransaction instead of hacking that functionality around CTransaction.",
      "created_at" : "2016-11-12T10:32:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9137#issuecomment-260114312",
      "id" : 260114312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9137",
      "updated_at" : "2016-11-12T10:32:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260114312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
