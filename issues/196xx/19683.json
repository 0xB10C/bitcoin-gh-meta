{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "> Hello clang/lib/frontend,\r\n> I search your headers once again.\r\n> Because it's time for some housekeeping,\r\n> Within the code I was tweaking,\r\n> And the targets I was making with my build,\r\n> Are unfulfilled,\r\n> It's just language compliance.\r\n> \r\n> In reference works I scroll alone\r\n> Pages cribbed from holy tomes\r\n> In the details of a template\r\n> My code's behaviour has now found its fate\r\n> When my hopes were dashed as a note left it as described:\r\n> As undefined\r\n> It's not in compliance\r\n> \r\n> And from the standard text I saw\r\n> Ten thousand errors, maybe more\r\n> Threading used without locking\r\n> Pointers referenced after freeing\r\n> Linters writing warnings that coders will never fix\r\n> But still they tick\r\n> The box that claims compliance\r\n> \r\n> \"Fools,\" said I, \"you do not know\"\r\n> Errors, like a cancer, grow\r\n> Hear my words that I might reach you\r\n> Use -Wall and it might teach you\r\n> But my words and compiler errors fade.\r\n> Schedules forbade compliance.\r\n> \r\n> And the people bowed and prayed\r\n> With static checking torn and frayed\r\n> The markets flashed out their warning\r\n> In the words that they were forming\r\n> As recruiters said \"The search for more profits leads to writing stuff in CSS,\r\n> And node.js.\r\n> Without a need for compliance\"\r\n\r\nMany thanks to ajtowns for the above contribution!\r\n\r\n-----\r\n\r\nThis PR makes us (in the case of macOS builds) explicitly specify the list of system include search paths and its ordering, rather than rely on `clang`'s flaky autodetection routine.\r\n\r\nSee the added comments in `depends/hosts/darwin.mk` for more details:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/8b8296dc70a0aa5ca86d11ba5d3151fc56208e25/depends/hosts/darwin.mk#L37-L60\r\n\r\n-----\r\n\r\n**Makefile help wanted**: the newly added `clang_resource_dir` is not resolving properly when expanded as `$(1)_cc`. In particular, the `native_cctools_clang_version` part is expanding to nothing. My debugging reveals the following:\r\n\r\n```sh\r\n$ make -C depends/ HOST=x86_64-apple-darwin16 print-zlib_cc\r\nmake: Entering directory '/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends'\r\nzlib_cc = clang -target x86_64-apple-darwin16 -mmacosx-version-min=10.12 -mlinker-version=530 -B/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/x86_64-apple-darwin16/native/bin --sysroot /home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/SDKs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers -Xclang -internal-externc-isystem/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/x86_64-apple-darwin16/native/lib/clang//include -Xclang -internal-externc-isystem/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/SDKs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers/usr/include\r\nmake: Leaving directory '/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends'\r\n```\r\nNotice above how the resource path is `...depends/x86_64-apple-darwin16/native/lib/clang//include`, missing the clang version\r\n\r\nWhereas manually expanding it once gives us the right path:\r\n```\r\n$ make -C depends/ HOST=x86_64-apple-darwin16 print-x86_64_darwin_CC\r\nmake: Entering directory '/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends'\r\nx86_64_darwin_CC = clang -target x86_64-apple-darwin16 -mmacosx-version-min=10.12 -mlinker-version=530 -B/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/x86_64-apple-darwin16/native/bin --sysroot /home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/SDKs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers -Xclang -internal-externc-isystem/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/x86_64-apple-darwin16/native/lib/clang/8.0.0/include -Xclang -internal-externc-isystem/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends/SDKs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers/usr/include\r\nmake: Leaving directory '/home/dongcarl/src/bitcoin/2020-08-clang-search-path-robustness/depends'\r\n```\r\n\r\nNotice above how the resource path is `...depends/x86_64-apple-darwin16/native/lib/clang/8.0.0/include`, with the right clang version.\r\n\r\nLooking at the build logs for a gitian build I performed, I see that the clang version is missing in all invocations in depends, meaning that the resource dir wasn't being picked up by clang. Curious that this didn't lead to any build failures though.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/comments",
   "created_at" : "2020-08-07T17:41:36Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19683",
   "id" : 675170037,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDY0NzM0MDMw",
   "number" : 19683,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19683.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19683",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19683.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19683"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "WIP: depends: Explicitly specify clang search paths for darwin host",
   "updated_at" : "2020-08-07T17:46:27Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
      "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dongcarl/followers",
      "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dongcarl",
      "id" : 3445290,
      "login" : "dongcarl",
      "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
      "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
      "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
      "repos_url" : "https://api.github.com/users/dongcarl/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dongcarl"
   }
}
