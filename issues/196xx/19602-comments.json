[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23544](https://github.com/bitcoin/bitcoin/pull/23544) (rpc, wallet: addhdseed, infer seed when importing descriptor with xpub by Sjors)\n* [#23497](https://github.com/bitcoin/bitcoin/pull/23497) (Add `src/node/` and `src/wallet/` code to `node::` and `wallet::` namespaces by ryanofsky)\n* [#23417](https://github.com/bitcoin/bitcoin/pull/23417) (wallet, spkm: Move key management from DescriptorScriptPubKeyMan to wallet level KeyManager by achow101)\n* [#22751](https://github.com/bitcoin/bitcoin/pull/22751) (rpc/wallet: add simulaterawtransaction RPC by kallewoof)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n* [#20205](https://github.com/bitcoin/bitcoin/pull/20205) (wallet: Properly support a wallet id by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-27T23:26:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-664688852",
      "id" : 664688852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDY4ODg1Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664688852/reactions"
      },
      "updated_at" : "2022-01-05T00:14:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664688852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 \r\nIt seems this PR has [problems](https://travis-ci.org/github/bitcoin/bitcoin/jobs/712335127) with linters.",
      "created_at" : "2020-07-29T10:55:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-665595010",
      "id" : 665595010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTU5NTAxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T10:55:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665595010",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why doesn't this extend `upgradewallet`?",
      "created_at" : "2020-07-31T00:53:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-666848115",
      "id" : 666848115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Njg0ODExNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T00:53:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666848115",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Why doesn't this extend `upgradewallet`?\r\n\r\nIt didn't feel like it fit `upgradewallet` as I see that more for changing the wallet version number and using legacy wallet features. But this is changing a legacy wallet to something completely new.\r\n\r\nThis is also pretty invasive and fundamentally changes how the wallet is working, so I wanted to keep it separate from something that people might still want to use on legacy wallets.",
      "created_at" : "2020-07-31T18:13:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-667273357",
      "id" : 667273357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzI3MzM1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T18:13:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667273357",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we should only add this functionality after `sqlite` wallets? Otherwise you'd keep migrating.",
      "created_at" : "2020-08-12T18:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-673029431",
      "id" : 673029431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzAyOTQzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T18:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673029431",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think we should only add this functionality after `sqlite` wallets? Otherwise you'd keep migrating.\r\n\r\nI think there's a question of whether we want to keep sqlite separate from descriptors. We might want to allow legacy wallets to migrate to sqlite without migrating to descriptors since they are orthogonal.",
      "created_at" : "2020-08-12T18:41:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-673044201",
      "id" : 673044201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzA0NDIwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T18:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673044201",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r470588563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470588563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: might be good to use the non-deprecated constructor to avoid having to change this again. See e.g. #19528",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-08-14T12:17:06Z",
      "diff_hunk" : "@@ -4113,6 +4113,33 @@ static UniValue upgradewallet(const JSONRPCRequest& request)\n     return error.original;\n }\n \n+static UniValue migratewallet(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r470588563",
      "id" : 470588563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4ODU2Mw==",
      "original_commit_id" : "97e34cd88de254a0041d825b155cd98b6bcb1892",
      "original_line" : 4116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 467528506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470588563/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470588563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do you know what the performance of a wallet would be like, in the case of a non-HD wallet being migrated? ",
      "created_at" : "2020-08-15T23:49:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-674458755",
      "id" : 674458755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDQ1ODc1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-15T23:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674458755",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Do you know what the performance of a wallet would be like, in the case of a non-HD wallet being migrated?\r\n\r\nProbably worse.",
      "created_at" : "2020-08-16T05:05:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-674479714",
      "id" : 674479714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDQ3OTcxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-16T05:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674479714",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Probably worse.\r\n\r\nAlmost certainly, that's why I'm asking :) It would be nice to know how much worse it would be",
      "created_at" : "2020-08-17T03:19:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-674634247",
      "id" : 674634247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDYzNDI0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T03:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674634247",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-31T16:39:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-683893379",
      "id" : 683893379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Mzg5MzM3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T16:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683893379",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480291494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480291494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Getting a build error when I try to do this:\r\n\r\n```wallet/rpcwallet.cpp:4280:5: error: no matching constructor for initialization of 'const CRPCCommand'\r\n    { \"wallet\",             \"migratewallet\",                    &migratewallet,                 {} },\r\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./rpc/server.h:120:5: note: candidate constructor not viable: no known conversion from 'RPCHelpMan (*)(const JSONRPCRequest &)' to 'rpcfn_type' (aka 'UniValue (*)(const JSONRPCRequest &)') for 3rd argument\r\n    CRPCCommand(const char* category, const char* name, rpcfn_type fn, std::initializer_list<const char*> args)\r\n    ^\r\n./rpc/server.h:107:5: note: candidate constructor not viable: no known conversion from 'RPCHelpMan (*)(const JSONRPCRequest &)' to 'RpcMethodFnType' (aka 'RPCHelpMan (*)()') for 3rd argument\r\n    CRPCCommand(std::string category, std::string name_in, RpcMethodFnType fn, std::vector<std::string> args_in)\r\n    ^\r\n./rpc/server.h:100:5: note: candidate constructor not viable: requires 5 arguments, but 4 were provided\r\n    CRPCCommand(std::string category, std::string name, Actor actor, std::vector<std::string> args, intptr_t unique_id)\r\n    ^\r\n./rpc/server.h:91:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 4 were provided\r\nclass CRPCCommand\r\n      ^\r\n./rpc/server.h:91:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 4 were provided\r\n1 error generated.\r\n```",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-08-31T17:53:53Z",
      "diff_hunk" : "@@ -4113,6 +4113,33 @@ static UniValue upgradewallet(const JSONRPCRequest& request)\n     return error.original;\n }\n \n+static UniValue migratewallet(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480291494",
      "id" : 480291494,
      "in_reply_to_id" : 470588563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MTQ5NA==",
      "original_commit_id" : "97e34cd88de254a0041d825b155cd98b6bcb1892",
      "original_line" : 4116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 478821040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480291494/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480291494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but I prefer this to be in the wallet tool.",
      "created_at" : "2020-08-31T18:18:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-683946104",
      "id" : 683946104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Mzk0NjEwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T18:18:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683946104",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480309374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480309374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure why. This diff compiles for me:\r\n\r\n```diff\r\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\r\nindex cc89c4992b..1361955a4b 100644\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -4171,9 +4171,9 @@ static UniValue upgradewallet(const JSONRPCRequest& request)\r\n     return error.original;\r\n }\r\n \r\n-static UniValue migratewallet(const JSONRPCRequest& request)\r\n+static RPCHelpMan migratewallet()\r\n {\r\n-    RPCHelpMan{\"migratewallet\",\r\n+    return RPCHelpMan{\"migratewallet\",\r\n         \"\\nMigrate the wallet to a descriptor wallet.\\n\"\r\n         \"A new wallet backup will need to be made.\",\r\n         {},\r\n@@ -4181,9 +4181,9 @@ static UniValue migratewallet(const JSONRPCRequest& request)\r\n         RPCExamples{\r\n             HelpExampleCli(\"migratewallet\", \"\")\r\n             + HelpExampleRpc(\"migratewallet\", \"\")\r\n-        }\r\n-    }.Check(request);\r\n-\r\n+        },\r\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n+{\r\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\r\n     if (!wallet) return NullUniValue;\r\n     CWallet* const pwallet = wallet.get();\r\n@@ -4196,6 +4196,8 @@ static UniValue migratewallet(const JSONRPCRequest& request)\r\n         throw JSONRPCError(RPC_WALLET_ERROR, error.original);\r\n     }\r\n     return error.original;\r\n+},\r\n+    };\r\n }\r\n \r\n RPCHelpMan abortrescan();\r\n",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-08-31T18:27:35Z",
      "diff_hunk" : "@@ -4113,6 +4113,33 @@ static UniValue upgradewallet(const JSONRPCRequest& request)\n     return error.original;\n }\n \n+static UniValue migratewallet(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480309374",
      "id" : 480309374,
      "in_reply_to_id" : 470588563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwOTM3NA==",
      "original_commit_id" : "97e34cd88de254a0041d825b155cd98b6bcb1892",
      "original_line" : 4116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 478843483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480309374/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480309374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480453983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480453983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I seem to have made a mistake somewhere.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-08-31T22:57:07Z",
      "diff_hunk" : "@@ -4113,6 +4113,33 @@ static UniValue upgradewallet(const JSONRPCRequest& request)\n     return error.original;\n }\n \n+static UniValue migratewallet(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r480453983",
      "id" : 480453983,
      "in_reply_to_id" : 470588563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1Mzk4Mw==",
      "original_commit_id" : "97e34cd88de254a0041d825b155cd98b6bcb1892",
      "original_line" : 4116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 479024096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480453983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480453983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> but I prefer this to be in the wallet tool.\r\n\r\nI would prefer this to be accessible to most users so that more people can move to using descriptor wallets. For most wallets, this should be painless and not result in a horribly bloated wallet.",
      "created_at" : "2020-08-31T22:58:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-684085595",
      "id" : 684085595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDA4NTU5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T22:58:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684085595",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The wallet tool is just as available as the RPC. We can print the necessary incantation in the help if needed. It does make sense to have an upgrade button in the GUI though.",
      "created_at" : "2020-09-01T12:09:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-684805617",
      "id" : 684805617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDgwNTYxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T12:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684805617",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The wallet tool is just as available as the RPC.\r\n\r\nNot really. The RPC has a dedicated window within the GUI. The wallet tool requires actually using a terminal.",
      "created_at" : "2020-09-01T16:10:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-684968120",
      "id" : 684968120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDk2ODEyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T16:10:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684968120",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, a few quick thoughts before reviewing:\r\n- debug build clean and local tests green\r\n- the help in `bitcoin-cli help migratewallet` is pretty sparse? -- could benefit from a lot more helpful info to explain what/why/how to users, de-risk wallet migrations a bit and encourage users to move to descriptor wallets\r\n- agree with @meshcollider that performance info would be good here in the PR and in the doc (`descriptors.md` or a new one?) and/or rpc help \r\n- test is missing logging\r\n",
      "created_at" : "2020-09-01T19:09:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-685075629",
      "id" : 685075629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTA3NTYyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T19:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685075629",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, I think the scriptPubKey set we are generating here is incorrect. I'm going to work on a slightly separate thing for LegacyScriptPubKeyMan that ensures we have the correct scriptPubKey set.",
      "created_at" : "2020-09-14T16:48:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-692179872",
      "id" : 692179872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjE3OTg3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-14T16:48:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692179872",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the IsMine issue and added some tests for that. Also rebased onto master as there was a hidden merge conflict.\r\n\r\n>     * the help in `bitcoin-cli help migratewallet` is pretty sparse? -- could benefit from a lot more helpful info to explain what/why/how to users, de-risk wallet migrations a bit and encourage users to move to descriptor wallets\r\n\r\nAny suggestions?\r\n\r\n>     * agree with @meshcollider that performance info would be good here in the PR and in the doc (`descriptors.md` or a new one?) and/or rpc help\r\n\r\nI'll do that eventually. After I figure out how.\r\n\r\n>     * test is missing logging\r\n\r\nAdded some logging\r\n",
      "created_at" : "2020-09-14T22:20:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-692344229",
      "id" : 692344229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjM0NDIyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-14T22:20:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692344229",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @achow101, I need to review and test this.",
      "created_at" : "2020-10-01T19:41:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-702356461",
      "id" : 702356461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjM1NjQ2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T19:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702356461",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-10-15T11:09:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-709204174",
      "id" : 709204174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwOTIwNDE3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-15T11:09:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709204174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r520218986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520218986"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The linter is complaining this going unused.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-11-10T01:02:33Z",
      "diff_hunk" : "@@ -0,0 +1,280 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Migrating a wallet from legacy to descriptor.\"\"\"\n+\n+import os\n+\n+from test_framework.key import ECKey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r520218986",
      "id" : 520218986,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxODk4Ng==",
      "original_commit_id" : "208c296a5770d6a343226f59330daff5feca66a9",
      "original_line" : 9,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/wallet_migration.py",
      "position" : null,
      "pull_request_review_id" : 526774342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520218986/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520218986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r520220823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520220823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2020-11-10T01:07:49Z",
      "diff_hunk" : "@@ -0,0 +1,280 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Migrating a wallet from legacy to descriptor.\"\"\"\n+\n+import os\n+\n+from test_framework.key import ECKey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r520220823",
      "id" : 520220823,
      "in_reply_to_id" : 520218986,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIyMDgyMw==",
      "original_commit_id" : "208c296a5770d6a343226f59330daff5feca66a9",
      "original_line" : 9,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/wallet_migration.py",
      "position" : null,
      "pull_request_review_id" : 526776653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520220823/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520220823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2021-01-13T10:57:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-759372614",
      "id" : 759372614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTM3MjYxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-13T10:57:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759372614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\nSUMMARY: ThreadSanitizer: data race /usr/lib/llvm-10/bin/../include/c++/v1/memory:2616:20 in std::__1::unique_ptr<WalletDatabase, std::__1::default_delete<WalletDatabase> >::reset(WalletDatabase*)\r\n```\r\n\r\nhttps://cirrus-ci.com/task/5621550420328448?command=ci#L4781",
      "created_at" : "2021-01-14T07:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-759992266",
      "id" : 759992266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTk5MjI2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T07:51:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759992266",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-01-28T18:59:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-769302835",
      "id" : 769302835,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTMwMjgzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-28T18:59:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769302835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-18T10:06:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-781231473",
      "id" : 781231473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MTIzMTQ3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-18T10:06:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781231473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578385022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578385022"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This looks scary to me. Let's not delete the old wallet, but rename it. You know, just in case something with the migration didn't go well it's good to have a backup.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-02-18T12:40:27Z",
      "diff_hunk" : "@@ -4567,3 +4567,287 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return ret;\n }\n+\n+bool CWallet::MigrateToDescriptor(bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    LOCK(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet from Legacy to Descriptor.\\n\");\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(cs_wallets);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(vpwallets.begin(), vpwallets.end(), [this](std::shared_ptr<CWallet> w) {\n+                return w.get() == this;\n+            });\n+        assert(i != vpwallets.end());\n+        this_wallet = *i;\n+        vpwallets.erase(i);\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::path(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578385022",
      "id" : 578385022,
      "line" : 3388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODM4NTAyMg==",
      "original_commit_id" : "1452840f940d2c6b106efd8a9cc96c35afe98b6d",
      "original_line" : 3388,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 63,
      "pull_request_review_id" : 593169597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578385022/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578385022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578626248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578626248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~20 lines earlier we make a backup of the wallet. So there is still a backup and we're just removing the original after it is backed up.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-02-18T17:50:19Z",
      "diff_hunk" : "@@ -4567,3 +4567,287 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return ret;\n }\n+\n+bool CWallet::MigrateToDescriptor(bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    LOCK(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet from Legacy to Descriptor.\\n\");\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(cs_wallets);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(vpwallets.begin(), vpwallets.end(), [this](std::shared_ptr<CWallet> w) {\n+                return w.get() == this;\n+            });\n+        assert(i != vpwallets.end());\n+        this_wallet = *i;\n+        vpwallets.erase(i);\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::path(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578626248",
      "id" : 578626248,
      "in_reply_to_id" : 578385022,
      "line" : 3388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODYyNjI0OA==",
      "original_commit_id" : "1452840f940d2c6b106efd8a9cc96c35afe98b6d",
      "original_line" : 3388,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 63,
      "pull_request_review_id" : 593491124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578626248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578626248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578653465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578653465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Okay, sounds good to me then.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-02-18T18:29:56Z",
      "diff_hunk" : "@@ -4567,3 +4567,287 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return ret;\n }\n+\n+bool CWallet::MigrateToDescriptor(bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    LOCK(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet from Legacy to Descriptor.\\n\");\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(cs_wallets);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(vpwallets.begin(), vpwallets.end(), [this](std::shared_ptr<CWallet> w) {\n+                return w.get() == this;\n+            });\n+        assert(i != vpwallets.end());\n+        this_wallet = *i;\n+        vpwallets.erase(i);\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::path(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r578653465",
      "id" : 578653465,
      "in_reply_to_id" : 578385022,
      "line" : 3388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODY1MzQ2NQ==",
      "original_commit_id" : "1452840f940d2c6b106efd8a9cc96c35afe98b6d",
      "original_line" : 3388,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 63,
      "pull_request_review_id" : 593525638,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578653465/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-13T20:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578653465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-04-13T08:05:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-818535772",
      "id" : 818535772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxODUzNTc3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-13T08:05:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/818535772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-24T14:18:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-867674628",
      "id" : 867674628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NzY3NDYyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-24T14:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/867674628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-07-01T02:23:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-871861595",
      "id" : 871861595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MTg2MTU5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T02:23:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871861595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-08-09T04:02:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-894934752",
      "id" : 894934752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5841V57g",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-09T04:02:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894934752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-07T09:01:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-914126009",
      "id" : 914126009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5842fHS5",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-07T09:01:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/914126009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Adding to the 23.0 milestone, I think it would be good to have optional migration in as soon as possible.",
      "created_at" : "2021-09-09T12:49:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-916061137",
      "id" : 916061137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5842mfvR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-09T12:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916061137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-09-10T00:21:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-916530840",
      "id" : 916530840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5842oSaY",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T00:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916530840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What's the minimum wallet version this tool will support?\r\n",
      "created_at" : "2021-09-26T11:12:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-927286673",
      "id" : 927286673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5843RUWR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-26T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927286673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/52637275?v=4",
         "events_url" : "https://api.github.com/users/katesalazar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/katesalazar/followers",
         "following_url" : "https://api.github.com/users/katesalazar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/katesalazar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/katesalazar",
         "id" : 52637275,
         "login" : "katesalazar",
         "node_id" : "MDQ6VXNlcjUyNjM3Mjc1",
         "organizations_url" : "https://api.github.com/users/katesalazar/orgs",
         "received_events_url" : "https://api.github.com/users/katesalazar/received_events",
         "repos_url" : "https://api.github.com/users/katesalazar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/katesalazar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/katesalazar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/katesalazar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What's the minimum wallet version this tool will support?\r\n\r\nThe minimum that can be opened currently.",
      "created_at" : "2021-09-27T22:29:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-928369685",
      "id" : 928369685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5843VcwV",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T22:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928369685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-10-04T09:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-933324141",
      "id" : 933324141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5843oWVt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933324141/reactions"
      },
      "updated_at" : "2021-10-04T09:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933324141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2021-11-09T20:05:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-964494270",
      "id" : 964494270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5845fQO-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964494270/reactions"
      },
      "updated_at" : "2021-11-09T20:05:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964494270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2021-11-09T20:42:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-964526359",
      "id" : 964526359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5845fYEX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964526359/reactions"
      },
      "updated_at" : "2021-11-09T20:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964526359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> and a single key combo for the seed (the seed is a valid key that we can receive coins at!)\r\n\r\nð¤¦\r\n\r\nNice catch.",
      "created_at" : "2021-11-23T21:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-977180488",
      "id" : 977180488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5846PpdI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/977180488/reactions"
      },
      "updated_at" : "2021-11-23T21:23:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/977180488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764305735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764305735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "is this ignored?",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T19:37:02Z",
      "diff_hunk" : "@@ -4839,6 +4839,37 @@ static RPCHelpMan walletdisplayaddress()\n }\n #endif // ENABLE_EXTERNAL_SIGNER\n \n+static RPCHelpMan migratewallet()\n+{\n+    return RPCHelpMan{\"migratewallet\",\n+        \"\\nMigrate the wallet to a descriptor wallet.\\n\"\n+        \"A new wallet backup will need to be made.\",\n+        {},\n+        RPCResult{RPCResult::Type::NONE, \"\", \"\"},\n+        RPCExamples{\n+            HelpExampleCli(\"migratewallet\", \"\")\n+            + HelpExampleRpc(\"migratewallet\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    bilingual_str error;\n+    std::vector<bilingual_str> warnings;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764305735",
      "id" : 764305735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjmFH",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 4864,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 825701730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764305735/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-07T19:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764305735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764307528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764307528"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    auto spks{GetScriptPubKeys()};\r\n```\r\n\r\nDoes this not compile?",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T19:39:37Z",
      "diff_hunk" : "@@ -1613,6 +1613,351 @@ std::set<CKeyID> LegacyScriptPubKeyMan::GetKeys() const\n     return set_address;\n }\n \n+const std::unordered_set<CScript, SaltedSipHasher> LegacyScriptPubKeyMan::GetScriptPubKeys() const\n+{\n+    LOCK(cs_KeyStore);\n+    std::unordered_set<CScript, SaltedSipHasher> spks;\n+\n+    // All keys have at least P2PK and P2PKH\n+    for (const auto& key_pair : mapKeys) {\n+        const CPubKey& pub = key_pair.second.GetPubKey();\n+        spks.insert(GetScriptForRawPubKey(pub));\n+        spks.insert(GetScriptForDestination(PKHash(pub)));\n+    }\n+    for (const auto& key_pair : mapCryptedKeys) {\n+        const CPubKey& pub = key_pair.second.first;\n+        spks.insert(GetScriptForRawPubKey(pub));\n+        spks.insert(GetScriptForDestination(PKHash(pub)));\n+    }\n+\n+    // For every script in mapScript, only the ISMINE_SPENDABLE ones are being tracked.\n+    // The watchonly ones will be in setWatchOnly which we deal with later\n+    // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        if (IsMine(script) == ISMINE_SPENDABLE) {\n+            // Add ScriptHash for scripts that are not already P2SH\n+            if (!script.IsPayToScriptHash()) {\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            }\n+            // For segwit scripts, we only consider them spendable if we have the segwit spk\n+            int wit_ver = -1;\n+            std::vector<unsigned char> witprog;\n+            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+                spks.insert(script);\n+            }\n+        } else {\n+            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n+            // So check the P2SH of a multisig to see if we should insert it\n+            std::vector<std::vector<unsigned char>> sols;\n+            TxoutType type = Solver(script, sols);\n+            if (type == TxoutType::MULTISIG) {\n+                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n+                if (IsMine(ms_spk) != ISMINE_NO) {\n+                    spks.insert(ms_spk);\n+                }\n+            }\n+        }\n+    }\n+\n+    // All watchonly scripts are raw\n+    spks.insert(setWatchOnly.begin(), setWatchOnly.end());\n+\n+    return spks;\n+}\n+\n+std::optional<MigrationData> LegacyScriptPubKeyMan::MigrateToDescriptor()\n+{\n+    LOCK(cs_KeyStore);\n+    if (m_storage.IsLocked()) {\n+        return std::nullopt;\n+    }\n+\n+    MigrationData out;\n+\n+    std::unordered_set<CScript, SaltedSipHasher> spks;\n+    auto spks_temp = GetScriptPubKeys();\n+    spks.insert(spks_temp.begin(), spks_temp.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764307528",
      "id" : 764307528,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjmhI",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 1680,
      "original_position" : 68,
      "original_start_line" : 1678,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 825701730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764307528/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-12-07T19:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764307528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764309208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764309208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "clang-format?",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T19:42:05Z",
      "diff_hunk" : "@@ -3335,3 +3335,328 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return spk_man;\n }\n+\n+bool CWallet::MigrateToSQLite(bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet storage database from BerkeleyDB to SQLite.\\n\");\n+\n+    if (m_database->Format() == \"sqlite\") {\n+        error = _(\"Error: This wallet already uses SQLite\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::PathFromString(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);\n+\n+    // Make new DB\n+    DatabaseOptions opts;\n+    opts.require_create = true;\n+    opts.require_format = DatabaseFormat::SQLITE;\n+    DatabaseStatus db_status;\n+    std::unique_ptr<WalletDatabase> new_db = MakeDatabase(db_dir, opts, db_status, error);\n+    assert(new_db); // This is to prevent doing anything further with this wallet. The original file was deleted, but a backup exists.\n+    m_database.reset();\n+    m_database = std::move(new_db);\n+\n+    // Write existing records into the new DB\n+    batch = m_database->MakeBatch();\n+    batch->TxnBegin();\n+    for (const auto& kv_pair : records) {\n+        CDataStream ss_key(kv_pair.first, SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(kv_pair.second, SER_DISK, CLIENT_VERSION);\n+        if (!batch->Write(ss_key, ss_value)) {\n+            batch->TxnAbort();\n+            m_database->Close();\n+            fs::remove(m_database->Filename());\n+            assert(false); // This is a critical error, the new db could not be written to. The original db exists as a backup, but we should not continue execution.\n+        }\n+    }\n+    batch->TxnCommit();\n+    return true;\n+}\n+\n+std::optional<MigrationData> CWallet::GetDescriptorsForLegacy(bilingual_str& error) const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return std::nullopt;\n+    }\n+\n+    std::optional<MigrationData> res = legacy_spkm->MigrateToDescriptor();\n+    if (res == std::nullopt) {\n+        error = _(\"Error: Unable to produce descriptors for this legacy wallet. Make sure the wallet is unlocked first\");\n+        return std::nullopt;\n+    }\n+    return res;\n+}\n+\n+bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    for (auto& desc_spkm : data.desc_spkms) {\n+        if (m_spk_managers.count(desc_spkm->GetID()) > 0) {\n+            error = _(\"Error: Duplicate descriptors created during migration. Your wallet may be corrupted.\");\n+            return false;\n+        }\n+        m_spk_managers[desc_spkm->GetID()] = std::move(desc_spkm);\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from disk\n+    if (!legacy_spkm->DeleteRecords(error)) {\n+        return false;\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from memory\n+    m_spk_managers.erase(legacy_spkm->GetID());\n+    m_external_spk_managers.clear();\n+    m_internal_spk_managers.clear();\n+\n+    // Setup new descriptors\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // Check if the transactions in the wallet are still ours. Either they belong here, or they belong in the watchonly wallet.\n+    std::vector<uint256> txids_to_delete;\n+    for (const auto& tx_pair : mapWallet) {\n+        if (!IsMine(*tx_pair.second.tx)) {\n+            // Check it is the watchonly wallet's\n+            // solvable_wallet doesn't need to be checked because transactions for those scripst weren't being watched for\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(*tx_pair.second.tx)) {\n+                    // Add to watchonly wallet\n+                    if (!data.watchonly_wallet->AddToWallet(tx_pair.second.tx, tx_pair.second.m_confirm)) {\n+                        error = _(\"Error: Could not add watchonly tx to watchonly wallet\");\n+                        return false;\n+                    }\n+                    // Mark as to remove from this wallet\n+                    txids_to_delete.push_back(tx_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Both not ours and not in the watchonly wallet\n+            error = _(\"Error: Transaction in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Do the removes\n+    if (txids_to_delete.size() > 0) {\n+        std::vector<uint256> deleted_txids;\n+        if (ZapSelectTx(txids_to_delete, deleted_txids) != DBErrors::LOAD_OK) {\n+            error = _(\"Error: Could not delete watchonly transactions\");\n+            return false;\n+        }\n+        if (deleted_txids != txids_to_delete) {\n+            error = _(\"Error: Not all watchonly txs could be deleted\");\n+            return false;\n+        }\n+    }\n+\n+    // Check the address book data in the same way we did for transactions\n+    std::vector<CTxDestination> dests_to_delete;\n+    for (const auto& addr_pair : m_address_book) {\n+        if (!IsMine(addr_pair.first)) {\n+            // Check the address book data is the watchonly wallet's\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the watchonly. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            if (data.solvable_wallet) {\n+                LOCK(data.solvable_wallet->cs_wallet);\n+                if (data.solvable_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the solvable. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Not ours, not in watchonly wallet, and not in solvable\n+            error = _(\"Error: Address book data in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Remove the things to delete\n+    if (dests_to_delete.size() > 0) {\n+        for (const auto& dest : dests_to_delete) {\n+            if (!DelAddressBook(dest)) {\n+                error = _(\"Error: Unable to remove watchonly address book data\");\n+                return false;\n+            }\n+        }\n+    }\n+\n+    WalletLogPrintf(\"Wallet migration complete.\\n\");\n+\n+    return true;\n+}\n+\n+bool MigrateLegacyToDescriptor(CWallet& wallet, WalletContext& context, bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    LOCK(wallet.cs_wallet);\n+\n+    // First change to using SQLite\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(context.wallets_mutex);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(context.wallets.begin(), context.wallets.end(), [&wallet](std::shared_ptr<CWallet> w) {\n+                return w.get() == &wallet;\n+            });\n+        assert(i != context.wallets.end());\n+        this_wallet = *i;\n+        context.wallets.erase(i);\n+    }\n+    // Now do the database stuff\n+    if (!wallet.MigrateToSQLite(error ,warnings)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764309208",
      "id" : 764309208,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjm7Y",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 3582,
      "original_position" : 257,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 825701730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764309208/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-07T19:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764309208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed, as well as in the `Migrate*` functions that aren't actually using `warnings`.",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T20:15:41Z",
      "diff_hunk" : "@@ -4839,6 +4839,37 @@ static RPCHelpMan walletdisplayaddress()\n }\n #endif // ENABLE_EXTERNAL_SIGNER\n \n+static RPCHelpMan migratewallet()\n+{\n+    return RPCHelpMan{\"migratewallet\",\n+        \"\\nMigrate the wallet to a descriptor wallet.\\n\"\n+        \"A new wallet backup will need to be made.\",\n+        {},\n+        RPCResult{RPCResult::Type::NONE, \"\", \"\"},\n+        RPCExamples{\n+            HelpExampleCli(\"migratewallet\", \"\")\n+            + HelpExampleRpc(\"migratewallet\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    bilingual_str error;\n+    std::vector<bilingual_str> warnings;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330580",
      "id" : 764330580,
      "in_reply_to_id" : 764305735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjsJU",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 4864,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 825734327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-07T20:15:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T20:15:48Z",
      "diff_hunk" : "@@ -1613,6 +1613,351 @@ std::set<CKeyID> LegacyScriptPubKeyMan::GetKeys() const\n     return set_address;\n }\n \n+const std::unordered_set<CScript, SaltedSipHasher> LegacyScriptPubKeyMan::GetScriptPubKeys() const\n+{\n+    LOCK(cs_KeyStore);\n+    std::unordered_set<CScript, SaltedSipHasher> spks;\n+\n+    // All keys have at least P2PK and P2PKH\n+    for (const auto& key_pair : mapKeys) {\n+        const CPubKey& pub = key_pair.second.GetPubKey();\n+        spks.insert(GetScriptForRawPubKey(pub));\n+        spks.insert(GetScriptForDestination(PKHash(pub)));\n+    }\n+    for (const auto& key_pair : mapCryptedKeys) {\n+        const CPubKey& pub = key_pair.second.first;\n+        spks.insert(GetScriptForRawPubKey(pub));\n+        spks.insert(GetScriptForDestination(PKHash(pub)));\n+    }\n+\n+    // For every script in mapScript, only the ISMINE_SPENDABLE ones are being tracked.\n+    // The watchonly ones will be in setWatchOnly which we deal with later\n+    // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        if (IsMine(script) == ISMINE_SPENDABLE) {\n+            // Add ScriptHash for scripts that are not already P2SH\n+            if (!script.IsPayToScriptHash()) {\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            }\n+            // For segwit scripts, we only consider them spendable if we have the segwit spk\n+            int wit_ver = -1;\n+            std::vector<unsigned char> witprog;\n+            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+                spks.insert(script);\n+            }\n+        } else {\n+            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n+            // So check the P2SH of a multisig to see if we should insert it\n+            std::vector<std::vector<unsigned char>> sols;\n+            TxoutType type = Solver(script, sols);\n+            if (type == TxoutType::MULTISIG) {\n+                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n+                if (IsMine(ms_spk) != ISMINE_NO) {\n+                    spks.insert(ms_spk);\n+                }\n+            }\n+        }\n+    }\n+\n+    // All watchonly scripts are raw\n+    spks.insert(setWatchOnly.begin(), setWatchOnly.end());\n+\n+    return spks;\n+}\n+\n+std::optional<MigrationData> LegacyScriptPubKeyMan::MigrateToDescriptor()\n+{\n+    LOCK(cs_KeyStore);\n+    if (m_storage.IsLocked()) {\n+        return std::nullopt;\n+    }\n+\n+    MigrationData out;\n+\n+    std::unordered_set<CScript, SaltedSipHasher> spks;\n+    auto spks_temp = GetScriptPubKeys();\n+    spks.insert(spks_temp.begin(), spks_temp.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330629",
      "id" : 764330629,
      "in_reply_to_id" : 764307528,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjsKF",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 1680,
      "original_position" : 68,
      "original_start_line" : 1678,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 825734412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-12-07T20:15:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer relevant with warnings being removed",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T20:15:58Z",
      "diff_hunk" : "@@ -3335,3 +3335,328 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return spk_man;\n }\n+\n+bool CWallet::MigrateToSQLite(bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet storage database from BerkeleyDB to SQLite.\\n\");\n+\n+    if (m_database->Format() == \"sqlite\") {\n+        error = _(\"Error: This wallet already uses SQLite\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::PathFromString(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);\n+\n+    // Make new DB\n+    DatabaseOptions opts;\n+    opts.require_create = true;\n+    opts.require_format = DatabaseFormat::SQLITE;\n+    DatabaseStatus db_status;\n+    std::unique_ptr<WalletDatabase> new_db = MakeDatabase(db_dir, opts, db_status, error);\n+    assert(new_db); // This is to prevent doing anything further with this wallet. The original file was deleted, but a backup exists.\n+    m_database.reset();\n+    m_database = std::move(new_db);\n+\n+    // Write existing records into the new DB\n+    batch = m_database->MakeBatch();\n+    batch->TxnBegin();\n+    for (const auto& kv_pair : records) {\n+        CDataStream ss_key(kv_pair.first, SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(kv_pair.second, SER_DISK, CLIENT_VERSION);\n+        if (!batch->Write(ss_key, ss_value)) {\n+            batch->TxnAbort();\n+            m_database->Close();\n+            fs::remove(m_database->Filename());\n+            assert(false); // This is a critical error, the new db could not be written to. The original db exists as a backup, but we should not continue execution.\n+        }\n+    }\n+    batch->TxnCommit();\n+    return true;\n+}\n+\n+std::optional<MigrationData> CWallet::GetDescriptorsForLegacy(bilingual_str& error) const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return std::nullopt;\n+    }\n+\n+    std::optional<MigrationData> res = legacy_spkm->MigrateToDescriptor();\n+    if (res == std::nullopt) {\n+        error = _(\"Error: Unable to produce descriptors for this legacy wallet. Make sure the wallet is unlocked first\");\n+        return std::nullopt;\n+    }\n+    return res;\n+}\n+\n+bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    for (auto& desc_spkm : data.desc_spkms) {\n+        if (m_spk_managers.count(desc_spkm->GetID()) > 0) {\n+            error = _(\"Error: Duplicate descriptors created during migration. Your wallet may be corrupted.\");\n+            return false;\n+        }\n+        m_spk_managers[desc_spkm->GetID()] = std::move(desc_spkm);\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from disk\n+    if (!legacy_spkm->DeleteRecords(error)) {\n+        return false;\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from memory\n+    m_spk_managers.erase(legacy_spkm->GetID());\n+    m_external_spk_managers.clear();\n+    m_internal_spk_managers.clear();\n+\n+    // Setup new descriptors\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // Check if the transactions in the wallet are still ours. Either they belong here, or they belong in the watchonly wallet.\n+    std::vector<uint256> txids_to_delete;\n+    for (const auto& tx_pair : mapWallet) {\n+        if (!IsMine(*tx_pair.second.tx)) {\n+            // Check it is the watchonly wallet's\n+            // solvable_wallet doesn't need to be checked because transactions for those scripst weren't being watched for\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(*tx_pair.second.tx)) {\n+                    // Add to watchonly wallet\n+                    if (!data.watchonly_wallet->AddToWallet(tx_pair.second.tx, tx_pair.second.m_confirm)) {\n+                        error = _(\"Error: Could not add watchonly tx to watchonly wallet\");\n+                        return false;\n+                    }\n+                    // Mark as to remove from this wallet\n+                    txids_to_delete.push_back(tx_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Both not ours and not in the watchonly wallet\n+            error = _(\"Error: Transaction in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Do the removes\n+    if (txids_to_delete.size() > 0) {\n+        std::vector<uint256> deleted_txids;\n+        if (ZapSelectTx(txids_to_delete, deleted_txids) != DBErrors::LOAD_OK) {\n+            error = _(\"Error: Could not delete watchonly transactions\");\n+            return false;\n+        }\n+        if (deleted_txids != txids_to_delete) {\n+            error = _(\"Error: Not all watchonly txs could be deleted\");\n+            return false;\n+        }\n+    }\n+\n+    // Check the address book data in the same way we did for transactions\n+    std::vector<CTxDestination> dests_to_delete;\n+    for (const auto& addr_pair : m_address_book) {\n+        if (!IsMine(addr_pair.first)) {\n+            // Check the address book data is the watchonly wallet's\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the watchonly. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            if (data.solvable_wallet) {\n+                LOCK(data.solvable_wallet->cs_wallet);\n+                if (data.solvable_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the solvable. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Not ours, not in watchonly wallet, and not in solvable\n+            error = _(\"Error: Address book data in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Remove the things to delete\n+    if (dests_to_delete.size() > 0) {\n+        for (const auto& dest : dests_to_delete) {\n+            if (!DelAddressBook(dest)) {\n+                error = _(\"Error: Unable to remove watchonly address book data\");\n+                return false;\n+            }\n+        }\n+    }\n+\n+    WalletLogPrintf(\"Wallet migration complete.\\n\");\n+\n+    return true;\n+}\n+\n+bool MigrateLegacyToDescriptor(CWallet& wallet, WalletContext& context, bilingual_str& error, std::vector<bilingual_str>& warnings)\n+{\n+    LOCK(wallet.cs_wallet);\n+\n+    // First change to using SQLite\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(context.wallets_mutex);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(context.wallets.begin(), context.wallets.end(), [&wallet](std::shared_ptr<CWallet> w) {\n+                return w.get() == &wallet;\n+            });\n+        assert(i != context.wallets.end());\n+        this_wallet = *i;\n+        context.wallets.erase(i);\n+    }\n+    // Now do the database stuff\n+    if (!wallet.MigrateToSQLite(error ,warnings)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764330739",
      "id" : 764330739,
      "in_reply_to_id" : 764309208,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tjsLz",
      "original_commit_id" : "05d0543dd50e85c0bef89264d8e68b323cadefba",
      "original_line" : 3582,
      "original_position" : 257,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 825734528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330739/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-07T20:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764330739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764332198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764332198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "well, now you are ignoring those?",
      "commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "created_at" : "2021-12-07T20:18:21Z",
      "diff_hunk" : "@@ -3335,3 +3335,330 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return spk_man;\n }\n+\n+bool CWallet::MigrateToSQLite(bilingual_str& error)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    WalletLogPrintf(\"Migrating wallet storage database from BerkeleyDB to SQLite.\\n\");\n+\n+    if (m_database->Format() == \"sqlite\") {\n+        error = _(\"Error: This wallet already uses SQLite\");\n+        return false;\n+    }\n+\n+    // Get all of the records for DB type migration\n+    std::unique_ptr<DatabaseBatch> batch = m_database->MakeBatch();\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> records;\n+    if (!batch->StartCursor()) {\n+        error = _(\"Error: Unable to begin reading all records in the database\");\n+        return false;\n+    }\n+    bool complete = false;\n+    while (true) {\n+        CDataStream ss_key(SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(SER_DISK, CLIENT_VERSION);\n+        bool ret = batch->ReadAtCursor(ss_key, ss_value, complete);\n+        if (!ret) {\n+            break;\n+        }\n+        std::vector<unsigned char> key(ss_key.begin(), ss_key.end());\n+        std::vector<unsigned char> value(ss_value.begin(), ss_value.end());\n+        records[key] = value;\n+    }\n+    batch->CloseCursor();\n+    batch.reset();\n+    if (!complete) {\n+        error = _(\"Error: Unable to read all records in the database\");\n+        return false;\n+    }\n+\n+    // Make a backup of the DB\n+    std::string backup_path = strprintf(\"%s-%d.legacy.bak\", m_database->Filename(), GetTime());\n+    if (!BackupWallet(backup_path)) {\n+        error = _(\"Error: Unable to make a backup of your wallet\");\n+        return false;\n+    }\n+\n+    // Close this database and delete the file\n+    fs::path db_path = fs::PathFromString(m_database->Filename());\n+    fs::path db_dir = db_path.branch_path();\n+    std::string db_filename = db_path.leaf().string();\n+    m_database->Close();\n+    fs::remove(db_path);\n+\n+    // Make new DB\n+    DatabaseOptions opts;\n+    opts.require_create = true;\n+    opts.require_format = DatabaseFormat::SQLITE;\n+    DatabaseStatus db_status;\n+    std::unique_ptr<WalletDatabase> new_db = MakeDatabase(db_dir, opts, db_status, error);\n+    assert(new_db); // This is to prevent doing anything further with this wallet. The original file was deleted, but a backup exists.\n+    m_database.reset();\n+    m_database = std::move(new_db);\n+\n+    // Write existing records into the new DB\n+    batch = m_database->MakeBatch();\n+    batch->TxnBegin();\n+    for (const auto& kv_pair : records) {\n+        CDataStream ss_key(kv_pair.first, SER_DISK, CLIENT_VERSION);\n+        CDataStream ss_value(kv_pair.second, SER_DISK, CLIENT_VERSION);\n+        if (!batch->Write(ss_key, ss_value)) {\n+            batch->TxnAbort();\n+            m_database->Close();\n+            fs::remove(m_database->Filename());\n+            assert(false); // This is a critical error, the new db could not be written to. The original db exists as a backup, but we should not continue execution.\n+        }\n+    }\n+    batch->TxnCommit();\n+    return true;\n+}\n+\n+std::optional<MigrationData> CWallet::GetDescriptorsForLegacy(bilingual_str& error) const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return std::nullopt;\n+    }\n+\n+    std::optional<MigrationData> res = legacy_spkm->MigrateToDescriptor();\n+    if (res == std::nullopt) {\n+        error = _(\"Error: Unable to produce descriptors for this legacy wallet. Make sure the wallet is unlocked first\");\n+        return std::nullopt;\n+    }\n+    return res;\n+}\n+\n+bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    LegacyScriptPubKeyMan* legacy_spkm = GetLegacyScriptPubKeyMan();\n+    if (!legacy_spkm) {\n+        error = _(\"Error: This wallet is already a descriptor wallet\");\n+        return false;\n+    }\n+\n+    for (auto& desc_spkm : data.desc_spkms) {\n+        if (m_spk_managers.count(desc_spkm->GetID()) > 0) {\n+            error = _(\"Error: Duplicate descriptors created during migration. Your wallet may be corrupted.\");\n+            return false;\n+        }\n+        m_spk_managers[desc_spkm->GetID()] = std::move(desc_spkm);\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from disk\n+    if (!legacy_spkm->DeleteRecords(error)) {\n+        return false;\n+    }\n+\n+    // Remove the LegacyScriptPubKeyMan from memory\n+    m_spk_managers.erase(legacy_spkm->GetID());\n+    m_external_spk_managers.clear();\n+    m_internal_spk_managers.clear();\n+\n+    // Setup new descriptors\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // Check if the transactions in the wallet are still ours. Either they belong here, or they belong in the watchonly wallet.\n+    std::vector<uint256> txids_to_delete;\n+    for (const auto& tx_pair : mapWallet) {\n+        if (!IsMine(*tx_pair.second.tx)) {\n+            // Check it is the watchonly wallet's\n+            // solvable_wallet doesn't need to be checked because transactions for those scripst weren't being watched for\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(*tx_pair.second.tx)) {\n+                    // Add to watchonly wallet\n+                    if (!data.watchonly_wallet->AddToWallet(tx_pair.second.tx, tx_pair.second.m_confirm)) {\n+                        error = _(\"Error: Could not add watchonly tx to watchonly wallet\");\n+                        return false;\n+                    }\n+                    // Mark as to remove from this wallet\n+                    txids_to_delete.push_back(tx_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Both not ours and not in the watchonly wallet\n+            error = _(\"Error: Transaction in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Do the removes\n+    if (txids_to_delete.size() > 0) {\n+        std::vector<uint256> deleted_txids;\n+        if (ZapSelectTx(txids_to_delete, deleted_txids) != DBErrors::LOAD_OK) {\n+            error = _(\"Error: Could not delete watchonly transactions\");\n+            return false;\n+        }\n+        if (deleted_txids != txids_to_delete) {\n+            error = _(\"Error: Not all watchonly txs could be deleted\");\n+            return false;\n+        }\n+    }\n+\n+    // Check the address book data in the same way we did for transactions\n+    std::vector<CTxDestination> dests_to_delete;\n+    for (const auto& addr_pair : m_address_book) {\n+        if (!IsMine(addr_pair.first)) {\n+            // Check the address book data is the watchonly wallet's\n+            if (data.watchonly_wallet) {\n+                LOCK(data.watchonly_wallet->cs_wallet);\n+                if (data.watchonly_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the watchonly. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.watchonly_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            if (data.solvable_wallet) {\n+                LOCK(data.solvable_wallet->cs_wallet);\n+                if (data.solvable_wallet->IsMine(addr_pair.first)) {\n+                    // Add to the solvable. Preserve the labels, purpose, and change-ness\n+                    std::string label = addr_pair.second.GetLabel();\n+                    std::string purpose = addr_pair.second.purpose;\n+                    if (!purpose.empty()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].purpose = purpose;\n+                    }\n+                    if (!addr_pair.second.IsChange()) {\n+                        data.solvable_wallet->m_address_book[addr_pair.first].SetLabel(label);\n+                    }\n+                    dests_to_delete.push_back(addr_pair.first);\n+                    continue;\n+                }\n+            }\n+            // Not ours, not in watchonly wallet, and not in solvable\n+            error = _(\"Error: Address book data in wallet cannot be identified to belong to migrated wallets\");\n+            return false;\n+        }\n+    }\n+    // Remove the things to delete\n+    if (dests_to_delete.size() > 0) {\n+        for (const auto& dest : dests_to_delete) {\n+            if (!DelAddressBook(dest)) {\n+                error = _(\"Error: Unable to remove watchonly address book data\");\n+                return false;\n+            }\n+        }\n+    }\n+\n+    WalletLogPrintf(\"Wallet migration complete.\\n\");\n+\n+    return true;\n+}\n+\n+bool MigrateLegacyToDescriptor(CWallet& wallet, WalletContext& context, bilingual_str& error)\n+{\n+    LOCK(wallet.cs_wallet);\n+\n+    // First change to using SQLite\n+\n+    // Remove this wallet from the list of wallets while we mess with the database\n+    // This is a workaround to prevent MaybeCompactWalletDB from accessing m_database while we are deleting and changing it\n+    std::shared_ptr<CWallet> this_wallet{nullptr};\n+    {\n+        LOCK(context.wallets_mutex);\n+        std::vector<std::shared_ptr<CWallet>>::iterator i = std::find_if(context.wallets.begin(), context.wallets.end(), [&wallet](std::shared_ptr<CWallet> w) {\n+                return w.get() == &wallet;\n+            });\n+        assert(i != context.wallets.end());\n+        this_wallet = *i;\n+        context.wallets.erase(i);\n+    }\n+    // Now do the database stuff\n+    if (!wallet.MigrateToSQLite(error)) return false;\n+    // Put the wallet back in vpwallets because we are now done with messing with m_database\n+    {\n+        LOCK(context.wallets_mutex);\n+        context.wallets.push_back(this_wallet);\n+    }\n+\n+    // Then get all of the descriptors from the legacy wallet\n+    std::optional<MigrationData> data = wallet.GetDescriptorsForLegacy(error);\n+    if (data == std::nullopt) return false;\n+\n+    // Create the watchonly and solvable wallets if necessary\n+    if (data->watch_descs.size() > 0 || data->solvable_descs.size() > 0) {\n+        DatabaseOptions options;\n+        options.require_existing = false;\n+        options.require_create = true;\n+\n+        // Make the wallets\n+        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS;\n+        if (wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {\n+            options.create_flags |= WALLET_FLAG_AVOID_REUSE;\n+        }\n+        if (wallet.IsWalletFlagSet(WALLET_FLAG_KEY_ORIGIN_METADATA)) {\n+            options.create_flags |= WALLET_FLAG_KEY_ORIGIN_METADATA;\n+        }\n+        if (data->watch_descs.size() > 0) {\n+            wallet.WalletLogPrintf(\"Making a new watchonly wallet containing the watched scripts\\n\");\n+\n+            DatabaseStatus status;\n+            std::vector<bilingual_str> warnings;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#discussion_r764332198",
      "id" : 764332198,
      "line" : 3611,
      "node_id" : "PRRC_kwDOABII584tjsim",
      "original_commit_id" : "86e1ff3e7a053e6551f8d49db7bdc990ea0f52d6",
      "original_line" : 3611,
      "original_position" : 286,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 286,
      "pull_request_review_id" : 825736447,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764332198/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-07T20:18:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764332198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-12-08T05:23:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-988510160",
      "id" : 988510160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII584663fQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988510160/reactions"
      },
      "updated_at" : "2021-12-08T05:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988510160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-11T10:38:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19602#issuecomment-1009832509",
      "id" : 1009832509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
      "node_id" : "IC_kwDOABII5848MNI9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009832509/reactions"
      },
      "updated_at" : "2022-01-11T10:38:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009832509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
