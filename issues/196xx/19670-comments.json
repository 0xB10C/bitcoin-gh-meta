[
   {
      "author_association" : "MEMBER",
      "body" : "This should fix #19500, but I need to figure out how to test this...",
      "created_at" : "2020-08-05T19:00:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#issuecomment-669408329",
      "id" : 669408329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19670",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTQwODMyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T19:00:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669408329",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r465993080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465993080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@gmaxwell I should get rid of this `n.nLastBlockTime > 0` right?  So that we'll always protect up to 8 non-tx-relay peers, even if they haven't managed to be first to send us a block.  But perhaps I should only protect them if `fRelevantServices` is true, so that non-full nodes do not get protected here?",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-05T20:45:11Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n+    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n+    std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.nLastBlockTime > 0; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r465993080",
      "id" : 465993080,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MzA4MA==",
      "original_commit_id" : "ce35ffee1a937696ff65a38bfa9fd67032505ec8",
      "original_line" : 924,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 462010253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465993080",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466007029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466007029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think requring fRelevantServices makes sense.  I think it's not import to require that they sent a block-- helping them stay connected so long as they (claim they) could might help keep them around long enough to successfully do so.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-05T21:12:38Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n+    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n+    std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.nLastBlockTime > 0; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466007029",
      "id" : 466007029,
      "in_reply_to_id" : 465993080,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwNzAyOQ==",
      "original_commit_id" : "ce35ffee1a937696ff65a38bfa9fd67032505ec8",
      "original_line" : 924,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 462027702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466007029",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466085368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466085368"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T01:01:38Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n+    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n+    std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.nLastBlockTime > 0; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466085368",
      "id" : 466085368,
      "in_reply_to_id" : 465993080,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NTM2OA==",
      "original_commit_id" : "ce35ffee1a937696ff65a38bfa9fd67032505ec8",
      "original_line" : 924,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 462118990,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466085368",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK (modulo proper testing of course :))",
      "created_at" : "2020-08-06T08:49:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#issuecomment-669800157",
      "id" : 669800157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19670",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTgwMDE1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T08:49:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669800157",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466313982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466313982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If this PR was built on top of #19316, you could test directly for block-relay-only peers. I think that'd be a cleaner implementation.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T10:20:37Z",
      "diff_hunk" : "@@ -845,6 +852,14 @@ static bool CompareNodeTXTime(const NodeEvictionCandidate &a, const NodeEviction\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n+// Pick out the potential block-relay only peers, and sort them by last block time.\n+static bool CompareNodeBlockRelayOnlyTime(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466313982",
      "id" : 466313982,
      "line" : 856,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxMzk4Mg==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 856,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 462391972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466313982",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-08-06T10:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#issuecomment-669844501",
      "id" : 669844501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19670",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg0NDUwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669844501",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466352570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466352570"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We donât currently have a way in our codebase to know that an inbound peer is blocks-only; that is a concept we can only know for outbound peers. We can infer it for inbound peers, as this PR does, but the right way to do this in the future would be to negotiate it at startup, so both sides know that a connection will stay blocks only.\r\n\r\nI believe that PR is only cleaning things up for outbound blocks-only peers?",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T11:41:25Z",
      "diff_hunk" : "@@ -845,6 +852,14 @@ static bool CompareNodeTXTime(const NodeEvictionCandidate &a, const NodeEviction\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n+// Pick out the potential block-relay only peers, and sort them by last block time.\n+static bool CompareNodeBlockRelayOnlyTime(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466352570",
      "id" : 466352570,
      "in_reply_to_id" : 466313982,
      "line" : 856,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1MjU3MA==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 856,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 462439662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466352570",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466364701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466364701"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nLastBlockTime` is updated at `ProcessNewBlock` return if the process block is new to us and connecting on our best chain, among other yardsticks. An attacker-controlled inbound connection by always being the fastest to announce block to us can trump other honest block-relay-only inbound to prevent update of their `nLastBlockTime`. I think assuming a malicious peer can be always the fastest is reasonable, just connect to Fibre and bypass some validation checks. By rotating fastest block announcement among few of its inbound connections, a malicious attacker seems to win over this protection. \r\n\r\nHave you consider instead selecting randomly among all our block-relay-only peers 8 of them ? I think that would make this protection better as an attacker can't predict its block-relay-only inbound will be favored. Because if an attacker can forge the fast-block-announcement characteristic as protected by the following protection (\"Protect 4 nodes that most recently sent us blocks\"), it's not hard to also forge this new one as signaling as block-relay-only is cheap.\r\n\r\nCorrect me I I'm wrong about `ProcessNewBlock` and `nLastBlockTime` updates, this part is fairly complex with all the anti-DoS/trickery measures. ",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T12:06:53Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466364701",
      "id" : 466364701,
      "line" : 922,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2NDcwMQ==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 922,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 50,
      "pull_request_review_id" : 462455197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466364701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466388318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466388318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you're right. 19316 only changes things for outbound peers.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T12:51:03Z",
      "diff_hunk" : "@@ -845,6 +852,14 @@ static bool CompareNodeTXTime(const NodeEvictionCandidate &a, const NodeEviction\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n+// Pick out the potential block-relay only peers, and sort them by last block time.\n+static bool CompareNodeBlockRelayOnlyTime(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466388318",
      "id" : 466388318,
      "in_reply_to_id" : 466313982,
      "line" : 856,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4ODMxOA==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 856,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 462486635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466388318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466426527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466426527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're right about the code and behavior -- an adversary that is trying to be well-behaved by being the first to deliver blocks to us, from 8 different block-relay peers, can indeed take over this protection -- but randomly choosing among block-relay-only peers is not helpful protection.  If we choose randomly each time, an attacker can game that by merely spamming us with inbound connections until any given peer that had protection in a prior round has lots its protection in this round, and might get evicted.\r\n\r\nNote also that it is free to pretend to be a blocks-only full-node peer; you merely send the right version message to us on connection.  It is more work, and useful work, to be the first peer to deliver us a new block.  So randomly protecting inbound peers who turn off tx-relay is not a useful thing to do, even if your random selection were on a longer timer to try to avoid the spamming problem I described above.\r\n\r\nOne way to think about the protections here is: if we can pick out a set of peers that may be useful to us, protect them.  Because the alternative to protection is that we may lose peers that are demonstrably useful just because an attacker is spamming us.  If we make a mistake and include peers that happen to also be adversaries because they're acting like good peers, that's no worse than if we didn't add the protection at all; but if we can meaningfully increase the cost to an adversary of bypassing the protection, then we've accomplished something.\r\n\r\nSo maybe a poor criteria would be one where an attacker does useful work for us once and then can misbehave but still take over most or all of our protected spots.  I don't think that's what is happening here (arguably, earliest connection time has the risk of an attacker being able to take it over, eventually -- but the first sort is on most-recently-gave-us-a-block, so an attacker would have to be able to keep doing this to ensure that other peers don't gain an advantage).",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T13:50:05Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466426527",
      "id" : 466426527,
      "in_reply_to_id" : 466364701,
      "line" : 922,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNjUyNw==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 922,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 50,
      "pull_request_review_id" : 462537397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466426527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466431403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466431403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> So maybe a poor criteria would be one where an attacker does useful work for us once and then can misbehave but still take over most or all of our protected spots. I don't think that's what is happening here (arguably, earliest connection time has the risk of an attacker being able to take it over, eventually -- but the first sort is on most-recently-gave-us-a-block, so an attacker would have to be able to keep doing this to ensure that other peers don't gain an advantage).\r\n\r\nI do worry that this might be the case, however, because block-relay-only peers may not be the first to deliver us blocks very often (it's possible that due to compact block relay, there are biases in favor of compact block reconstruction happening best on links that are also relaying transactions -- I am not sure).  In which case, the attack you describe of an adversary connecting 8 times, delivering the next 8 blocks from each one, and then being silent, may well work for a while to cause only their links to be protected, because the honest peers have a tough time beating other peers.\r\n\r\nWe can try to get some anecdotal data on this by looking at our own existing nodes to see if apparent block-relay peers are being selected as HB compact block peers?  @gmaxwell any thoughts here?\r\n\r\nEDIT: I guess my overall thought is that even if this is somewhat gameable, adding this won't hurt and may help. If anyone comes up with something better we can always improve it.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T13:56:49Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466431403",
      "id" : 466431403,
      "in_reply_to_id" : 466364701,
      "line" : 922,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzMTQwMw==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 922,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 50,
      "pull_request_review_id" : 462543853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466431403",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wtogami ",
      "created_at" : "2020-08-06T15:47:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#issuecomment-670011410",
      "id" : 670011410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19670",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDAxMTQxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T15:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670011410",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466511844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466511844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I discovered that doing `IsLocal(node->addr)` is different from `node->addr.IsLocal()`, and the latter appears to be correct, but if someone can confirm that this captures the right idea I'd appreciate it. ",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T15:50:31Z",
      "diff_hunk" : "@@ -887,7 +902,7 @@ bool CConnman::AttemptToEvictConnection()\n                                                node->nLastBlockTime, node->nLastTXTime,\n                                                HasAllDesirableServiceFlags(node->nServices),\n                                                peer_relay_txes, peer_filter_not_null, node->addr, node->nKeyedNetGroup,\n-                                               node->m_prefer_evict};\n+                                               node->m_prefer_evict, node->addr.IsLocal()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466511844",
      "id" : 466511844,
      "line" : 905,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUxMTg0NA==",
      "original_commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "original_line" : 905,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 41,
      "pull_request_review_id" : 462649966,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T15:50:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466511844",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated to fix two bugs I discovered, and I did some light manual testing and verified that this seems to now do what is intended.",
      "created_at" : "2020-08-06T16:18:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#issuecomment-670029755",
      "id" : 670029755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19670",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDAyOTc1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T16:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670029755",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466551170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466551170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, after writing this, I realized thinking further that my counter-proposal wasn't worthy it. As you hinted, analyzing eviction as a serie of interdependent events means sooner or latter, an attacker still has a high-chance of success.\r\n\r\n>  If we make a mistake and include peers that happen to also be adversaries because they're acting like good peers, that's no worse than if we didn't add the protection at all; but if we can meaningfully increase the cost to an adversary of bypassing the protection, then we've accomplished something.\r\n\r\nThanks for the explanation. I agree that the current protection of fast-delivery-block peers is worth it and compel an attacker to position its nodes well with regard to block-topology and propagation, even if potentially gameable. Where I was more doubtful was on the value of adding a second protection relying on an-already used assumption. Even I was presuming that an attacker, by forgetting validation because it's a zero-cost accepting invalid blocks, will always trump block announcement, independently of being in concurrence with compact block peers.\r\n\r\nI think there is the interesting property with block-relay-only peers that it's far far harder to guess their pairing, as you remember back in commit. Whereas our protected-by-netgroup peers (1st heuristic) might be full-relay ones, and thus an attacker might be able to guess their IP prefix by tx-relay topology probing. \r\n\r\nBlock-relay-only peers don't have this weakness so it could be more worthy to combine them with the netgroup critera rather than with the fast-block-delivery one ?\r\n\r\nOverall, if we can't come up with better ideas, you right let's move further and try to address this kind of issues in future works on network anomalies detection/anti-eclipse.",
      "commit_id" : "ec4ee3fd7e9d0a8572c5e29404820bf5899b203a",
      "created_at" : "2020-08-06T16:54:47Z",
      "diff_hunk" : "@@ -903,12 +918,31 @@ bool CConnman::AttemptToEvictConnection()\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    // Protect up to 8 non-tx-relay peers that have sent us blocks.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19670#discussion_r466551170",
      "id" : 466551170,
      "in_reply_to_id" : 466364701,
      "line" : 922,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU1MTE3MA==",
      "original_commit_id" : "e5af0d1b656c35a7b0be45b46509867265bae691",
      "original_line" : 922,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 50,
      "pull_request_review_id" : 462700100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19670",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T16:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466551170",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
