[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-07-30T15:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666471177",
      "id" : 666471177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQ3MTE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T15:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666471177",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[Filtered code coverage report](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/) (files not modified by this PR are omitted and not modified lines in files that are otherwise modified are dimmed).\r\n\r\n[List of modified and not covered lines](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/modified_and_not_covered.html).",
      "created_at" : "2020-07-30T16:01:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666487671",
      "id" : 666487671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQ4NzY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666487671",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19687 (refactor: make EncodeBase{32,64} consume Spans by theStack)\n* #19643 (Add `-netinfo` peer connections dashboard by jonatack)\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #18722 (addrman: improve performance by using more suitable containers by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-30T20:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666670421",
      "id" : 666670421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjY3MDQyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-08T21:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666670421",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463949087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you sure the use of `prevector` is warranted here? Measurements would be nice.\r\n\r\nGenerally I think we should try stick with to the standard containers unless we have clear quantitative evidence showing that they are unsuitable for the scenario being considered. Reviewers, static analysers and compilers tend to be better at analysing use of the standard containers :)\r\n\r\nFWIW: \r\n\r\n```\r\n$ git grep -l prevector -- \"*.cpp\" \"*.h\" \":(exclude)src/bench/\" \":(exclude)src/test/\"\r\nsrc/hash.h\r\nsrc/memusage.h\r\nsrc/prevector.h\r\nsrc/script/script.h\r\nsrc/serialize.h\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-01T10:36:13Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463949087",
      "id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0OTA4Nw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459569784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463984610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suggested this, so let me back it up.\r\n\r\nCurrently an address in CAddrMan consumes 256 bytes (cost in mapInfo and mapAddr together, plus allocation overhead).\r\n\r\nThis PR as-is raises that to 288 bytes, for addresses that take up to 16 bytes (which is all of them, for now).\r\n\r\nUsing an `std::vector<uint8_t>` instead would change that to 352 bytes per address, or an extra 64 on top. It would also increase memory fragmentation and (slightly) increase CPU usage because of two malloc's per address.\r\n\r\nFTR, my node has 69691 addresses in CAddrMan.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-01T17:52:19Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463984610",
      "id" : 463984610,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4NDYxMA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459593442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464117640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sipa Thanks for quantifying! That answers my question :)",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-02T20:01:00Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464117640",
      "id" : 464117640,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExNzY0MA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459674809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464154824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Slightly more modern:\r\n\r\n```c++\r\nreturn std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\r\n```\r\n",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-03T01:42:35Z",
      "diff_hunk" : "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464154824",
      "id" : 464154824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NDgyNA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 116,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not something you introduced, but this only works because those addresses have the same byte representation in every byte order.\r\n",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-03T01:50:28Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156291",
      "id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjI5MQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "More modern:\r\n\r\n```c++\r\nreturn std::tie(a.m_net, a.m_addr) < std::tie(b.m_net, b.m_addr);\r\n```\r\n",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-03T01:51:43Z",
      "diff_hunk" : "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156525",
      "id" : 464156525,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjUyNQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 368,
      "original_position" : 390,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464157430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: uppercase v in global constants (here and further).",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-03T01:56:08Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464157430",
      "id" : 464157430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NzQzMA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 55,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-03T16:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-668116023",
      "id" : 668116023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODExNjAyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T16:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668116023",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465544086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the question and the elaborate explanation! Indeed smaller size and avoiding an extra heap allocation is better. FWIW I moved `m_addr` definition before `m_net` to save 8 bytes from the size of `CNetAddr` (32 vs 40 bytes on x64).",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-05T07:58:28Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465544086",
      "id" : 465544086,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NDA4Ng==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 461427646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465567494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! Even though the values of those constants are never going to change (I hope!), does the following look better?\r\n\r\n```cpp\r\nfor (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-05T08:39:19Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465567494",
      "id" : 465567494,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NzQ5NA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461457580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to resolve a conflict.",
      "created_at" : "2020-08-05T11:04:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669129564",
      "id" : 669129564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTEyOTU2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T11:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669129564",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465660727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-05T11:30:48Z",
      "diff_hunk" : "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465660727",
      "id" : 465660727,
      "in_reply_to_id" : 464154824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDcyNw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 116,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461577596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Modernized :bulb:",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-05T11:32:12Z",
      "diff_hunk" : "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661461",
      "id" : 465661461,
      "in_reply_to_id" : 464156525,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTQ2MQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 368,
      "original_position" : 390,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461578525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to uppercase.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-05T11:32:37Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661649",
      "id" : 465661649,
      "in_reply_to_id" : 464157430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTY0OQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 55,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 461578756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Applied review suggestions.",
      "created_at" : "2020-08-05T11:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669141744",
      "id" : 669141744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTE0MTc0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T11:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669141744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466938023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That seems the best option, I think. It's too bad that there's no way to get these constants as byte spans that can be directly compared against m_addr so it wouldn't need the cast and `memcmp` at all.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T09:46:40Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466938023",
      "id" : 466938023,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzODAyMw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463181566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466941269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is pretty scary cast expression. Wouldn't a cast to just `const uint8_t*` work just as well?",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T09:53:38Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466941269",
      "id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0MTI2OQ==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463185771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466946168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Heh we need to make `EncodeBase32` take a span too (not in this PR ofcourse).",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T10:03:44Z",
      "diff_hunk" : "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466946168",
      "id" : 466946168,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0NjE2OA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 339,
      "original_position" : 359,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 364,
      "pull_request_review_id" : 463191991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466950108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You do not need the \"hh\" here, or any type specifiers ever, `strprintf` is type safe.\r\nAlso maybe include the `/` to avoid an extra string concatenation\r\n```\r\nnetwork.ToString() + strprintf(\"/%u\", cidr);\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T10:12:30Z",
      "diff_hunk" : "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466950108",
      "id" : 466950108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1MDEwOA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 874,
      "original_position" : 725,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463197100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467258675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to use `htonl()`.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T20:40:06Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467258675",
      "id" : 467258675,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1ODY3NQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463598127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467259428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T20:42:02Z",
      "diff_hunk" : "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467259428",
      "id" : 467259428,
      "in_reply_to_id" : 466950108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1OTQyOA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 874,
      "original_position" : 725,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463599117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467264650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Passing `const uint8_t*` will not work as long as the argument of the method is a reference to an array: `CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])` which is best of type safety but unfortunately two of the callers don't have an array to pass.\r\n\r\nI think either one of the following two is better:\r\n\r\n<details>\r\n<summary>change argument to void*</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..bb4d2b50b 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,33 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(const void* ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    const uint8_t* ipv6_begin = static_cast<const uint8_t*>(ipv6);\r\n+    const uint8_t* ipv6_end = ipv6_begin + ADDR_IPV6_SIZE;\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6_begin, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6_begin + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6_begin, ipv6_end);\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -105,13 +106,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n     assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(&ipv6Addr);\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..ca048fbf5 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(const void* ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..98ac82453 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(addr_data);\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>change argument to Span</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..121b92650 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,32 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(IPV4_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(TORV2_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6.begin() + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6.end());\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6.begin(), ipv6.end());\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -104,14 +104,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n-    assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..a76b5e9ce 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(Span<const uint8_t> ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..e3aefa18a 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(Span<const uint8_t>(addr_data, addr_size));\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\nWhat do you think?",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T20:55:26Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467264650",
      "id" : 467264650,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NDY1MA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463605797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467267311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Span span span...\r\n\r\n![span](https://user-images.githubusercontent.com/548488/89688260-a0b3b200-d8b6-11ea-9f9c-6b8c7f87b385.png)\r\n",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-07T21:02:32Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467267311",
      "id" : 467267311,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzMxMQ==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463609590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467879433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/19687",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-10T12:49:03Z",
      "diff_hunk" : "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467879433",
      "id" : 467879433,
      "in_reply_to_id" : 466946168,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg3OTQzMw==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 339,
      "original_position" : 359,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 364,
      "pull_request_review_id" : 464197041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed Windows build and changed `SetLegacyIPv6()` to take a ~~Spam~~Span argument.",
      "created_at" : "2020-08-10T13:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671344431",
      "id" : 671344431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTM0NDQzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T13:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671344431",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467891793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-10T13:11:23Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467891793",
      "id" : 467891793,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg5MTc5Mw==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 464213144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`s/IPv4_IN_IPv6_PREFIX/IPV4_IN_IPV6_PREFIX/` also in comment, was missed during the rename.",
      "created_at" : "2020-08-10T20:19:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671569506",
      "id" : 671569506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTU2OTUwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T20:19:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671569506",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased just to restart Travis.",
      "created_at" : "2020-08-11T12:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671905298",
      "id" : 671905298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTkwNTI5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T12:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671905298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469100605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps place the `NET_IPV6` case first to group the similar cases together\r\n\r\nsuggestion here and line 221 to be the same as the first case line 205:\r\n```suggestion\r\n                assert(prefix_size + m_addr.size() == sizeof(arr));\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T08:40:54Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469100605",
      "id" : 469100605,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMDYwNQ==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 215,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469102204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "per `developer-notes.md`:\r\n```suggestion\r\n    } // no default case, so the compiler can warn about missing cases\r\n    assert(false);\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T08:43:44Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469102204",
      "id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMjIwNA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469124958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nBits` is currently given a value a few lines down but seems a good habit to always provide a default.\r\n```suggestion\r\n    int nBits{0};\r\n```",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T09:22:08Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469124958",
      "id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyNDk1OA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469128086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider using the pre-increment (`++i`) operator",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T09:27:25Z",
      "diff_hunk" : "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469128086",
      "id" : 469128086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyODA4Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 539,
      "original_position" : 507,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Default assigning in the case where we are supposed to always assign the variable later will suppress valgrind and compiler warnings if there is a bug in the code and it does not actually initialize the variable in some cases.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T11:08:21Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180866",
      "id" : 469180866,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDg2Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465811148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T11:08:36Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180974",
      "id" : 469180974,
      "in_reply_to_id" : 469100605,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDk3NA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 215,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465811298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T11:08:48Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181087",
      "id" : 469181087,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTA4Nw==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465811448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T11:09:02Z",
      "diff_hunk" : "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181196",
      "id" : 469181196,
      "in_reply_to_id" : 469128086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTE5Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 539,
      "original_position" : 507,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465811581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestions.",
      "created_at" : "2020-08-12T11:09:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-672807867",
      "id" : 672807867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgwNzg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T11:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672807867",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469195737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(there's nuance to be sure; if helpful:)\n\nhttps://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es20-always-initialize-an-object\n\nSome history and reading on uninitialized reads in Bitcoin Core: https://bitcoincore.reviews/17639\n\nSee also this comment and thread https://github.com/bitcoin/bitcoin/pull/17627#issuecomment-559421439",
      "commit_id" : "0004f80dabbe211eb12b8a06aaa189ef78ba6f0b",
      "created_at" : "2020-08-12T11:40:27Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469195737",
      "id" : 469195737,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5NTczNw==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465829861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T13:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
