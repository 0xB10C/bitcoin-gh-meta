[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR was suggested by @hebasto https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-669658597 (thank you!)",
      "created_at" : "2020-08-10T03:50:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671150925",
      "id" : 671150925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTE1MDkyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T03:50:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671150925",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r467746632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467746632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, join with above line.",
      "commit_id" : "8b07e17cb2a20db8c803cfbb8491ae51a75bd450",
      "created_at" : "2020-08-10T08:09:41Z",
      "diff_hunk" : "@@ -832,12 +832,21 @@ class CBufferedFile\n \n     //! search for a given byte in the stream, and remain positioned on it\n     void FindByte(char ch) {\n+        // start is the index into vchBuf[] at which to start searching\n+        size_t start = nReadPos % vchBuf.size();\n         while (true) {\n             if (nReadPos == nSrcPos)\n                 Fill();\n-            if (vchBuf[nReadPos % vchBuf.size()] == ch)\n-                break;\n-            nReadPos++;\n+            size_t n = vchBuf.size() - start;\n+            if (n > nSrcPos - nReadPos)\n+                n = nSrcPos - nReadPos;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r467746632",
      "id" : 467746632,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0NjYzMg==",
      "original_commit_id" : "ab412ec3071dd056bad362aa78c88d02d5a46c3b",
      "original_line" : 842,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 464028727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-10T21:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467746632",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane \r\n> ... improving its CPU runtime by a factor of about 25 in typical use.\r\n\r\nHow was it measured?\r\n\r\n",
      "created_at" : "2020-08-10T11:10:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671293857",
      "id" : 671293857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTI5Mzg1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T11:10:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671293857",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Any idea *why* this is so much faster? As far as I know, there is no faster algorithm to look for the first occurrence of a single byte in a memory array than a linear iteration over it. I'd expect `std::find` of a byte to simply unroll into a loop.",
      "created_at" : "2020-08-10T11:38:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671305132",
      "id" : 671305132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTMwNTEzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T11:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671305132",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> How was it measured?\r\n\r\nI ran:\r\n```\r\ntime src/test/test_bitcoin --run_test=streams_tests/streams_findbyte\r\n```\r\nwith master (1m20s) and with master + PR (3s).\r\n\r\n> Any idea _why_ this is so much faster? \r\n\r\nI think you're correct that there's no faster way than a loop with runtime proportional to the number of bytes to scan, but I assume `std::find()` on a char vector is highly optimized, probably using `memchr()` or `memcmp()`, which are implemented in assembly language. Also, the master version does a few things each byte (testing `nReadPos == nSrcPos`, remainder calculation (`%`), incrementing `nReadPos`) that the PR does once for each large run of bytes.\r\n\r\nI just noticed that the repetition count on the test is set to a large number (50000000) and I meant to reduce it for the commit (3 seconds is too long to add to the unit test suite). I'll reduce that number in force push in a minute. This test doesn't really need to be in this PR (`FindByte()`'s functionality is tested very well in another test), but it helps reviewers verify the performance improvement.",
      "created_at" : "2020-08-10T14:38:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671395708",
      "id" : 671395708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTM5NTcwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T14:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671395708",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-push ([diff](https://github.com/bitcoin/bitcoin/compare/ab412ec3071dd056bad362aa78c88d02d5a46c3b..a31aa3255499ba8878ba98e4ac5a22a408c68da0)) small fix to the test, so it doesn't take 3 seconds to run.",
      "created_at" : "2020-08-10T14:46:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671400344",
      "id" : 671400344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTQwMDM0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T14:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671400344",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> but I assume std::find() on a char vector is highly optimized, probably using memchr() or memcmp(), which are implemented in assembly language\r\n\r\nThat's true, it's possible to optimize that with assembly language (definitely with specific instruction sets).\r\n\r\nit still surprises me because you'd expect the I/O, to read the data from disk, to dominate greatly in the block importing. Not looking for a character already in memory! It just seems out of proportion.\r\n",
      "created_at" : "2020-08-10T16:43:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671464582",
      "id" : 671464582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTQ2NDU4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T16:43:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671464582",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468123489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468123489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't fully understand how the performance increase is so significant, but why not a bench if you're worried about burdening the unit tests? I [tried](https://github.com/gzhao408/bitcoin/blob/c3f7075f538cca89f44923d9489403581650edc8/src/bench/streams_findbyte.cpp) to do this but I must be doing something wrong because I can't seem to reproduce the speedup. ð ",
      "commit_id" : "8b07e17cb2a20db8c803cfbb8491ae51a75bd450",
      "created_at" : "2020-08-10T19:19:00Z",
      "diff_hunk" : "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468123489",
      "id" : 468123489,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyMzQ4OQ==",
      "original_commit_id" : "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
      "original_line" : 463,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 464505498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-10T21:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468123489",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> it still surprises me because you'd expect the I/O, to read the data from disk, to dominate greatly in the block importing.\r\n\r\n`FindByte()` only reads from disk by calling `Fill()` (when the buffer is empty), which is rare. In this test, `Fill()` gets called only once, the first time `FindByte()` runs, because I wanted to isolate the modified part of the code.",
      "created_at" : "2020-08-10T20:08:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671562959",
      "id" : 671562959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTU2Mjk1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T20:08:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671562959",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468154617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468154617"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The performance impact may be very compiler/architecture/stdlib dependent. I'm kind of surprised std::find has optimizations beyond the naive loop implementation in the first place on some platforms, so I certainly wouldn't be surprised if others don't have it.",
      "commit_id" : "8b07e17cb2a20db8c803cfbb8491ae51a75bd450",
      "created_at" : "2020-08-10T20:12:43Z",
      "diff_hunk" : "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468154617",
      "id" : 468154617,
      "in_reply_to_id" : 468123489,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1NDYxNw==",
      "original_commit_id" : "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
      "original_line" : 463,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 464554332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-10T21:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468154617",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468201206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468201206"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@gzhao408, thank you, I wasn't aware of `bench`. I suspect the iteration count, 100, is far too low and the difference is swamped by the noise. I increased the iteration count to 10m (`1e7`) and it showed the expected difference, master: 1,659.30 ns/op, PR: 52.66 ns/op (ratio is about 31).\r\n\r\nI just force-pushed ([diff](https://github.com/bitcoin/bitcoin/compare/a31aa3255499ba8878ba98e4ac5a22a408c68da0..8b07e17cb2a20db8c803cfbb8491ae51a75bd450)) to remove the unit test (which was only for benchmarking, not really testing anything) and cherry-pick Gloria's benchmark. I added one more commit to increase the iteration count.",
      "commit_id" : "8b07e17cb2a20db8c803cfbb8491ae51a75bd450",
      "created_at" : "2020-08-10T21:39:25Z",
      "diff_hunk" : "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468201206",
      "id" : 468201206,
      "in_reply_to_id" : 468123489,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMTIwNg==",
      "original_commit_id" : "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
      "original_line" : 463,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 464606792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-10T21:39:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468201206",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell pointed out to me why this is so much faster: it's not that std::find is amazing, but that the original code (which I wrote in 2012, it seems!) is doing a modulus operation for every character (which is often orders of magnitude slower than the byte comparison or addition/subtraction).\r\n\r\nThinking about this a bit more high level: the end goal is just to scan quickly for the 4-byte network magic in a file. If this is relevant for performance (and it seems it may be), it may be better to have a function that does exactly that in CBufferedFile, rather than a search for one byte + memcmp. `std::search` is probably what you want.\r\n\r\n",
      "created_at" : "2020-08-11T00:42:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671659440",
      "id" : 671659440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTY1OTQ0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T00:42:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671659440",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
