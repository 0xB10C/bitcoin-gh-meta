[
   {
      "author_association" : "MEMBER",
      "body" : "I need to test this still myself, but I wanted to open this as a potential alternative to feeling the need to backport #18044 (as @jnewbery has proposed in #19606) in order to protect older software from wasting bandwidth in the event of taproot activation in the future.\r\n\r\nI have a branch where I backported this patch to 0.20 here: https://github.com/sdaftuar/bitcoin/tree/2020-07-reject-unknown-wit-0.20.  \r\n\r\nNote that this PR should be independently useful to mitigate an issue @ariard brought up here: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r457768442",
      "created_at" : "2020-07-29T15:46:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665743887",
      "id" : 665743887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTc0Mzg4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T15:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665743887",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462433102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462433102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Strictly speaking, do we want to move this check above any other check that could return TX_NOT_STANDARD, so transactions with non-standard inputs are guaranteed to be put in the recentrejects filter? I don't think it matters, since upgraded peers won't relay transactions that fail other standardness checks, unless we loosen those checks for some other reason.",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-29T16:33:28Z",
      "diff_hunk" : "@@ -690,7 +690,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     // Check for non-standard pay-to-script-hash in inputs\n     if (fRequireStandard && !AreInputsStandard(tx, m_view))\n-        return state.Invalid(TxValidationResult::TX_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\n+        return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462433102",
      "id" : 462433102,
      "line" : 693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMzEwMg==",
      "original_commit_id" : "be23c2af9fb3b7d571e62ae1045941a1724a3e35",
      "original_line" : 693,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 457695196,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T21:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462433102",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462442871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462442871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I agree.  It doesn't seem worth the effort to figure out how to make it so that a tx that would fail in `AreInputsStandard()` will always have its txid go into the rejects filter -- there are a lot of checks that happen before that (including checks that don't depend on looking up the inputs first), which we'd have to move around somehow and complicate the logic.  But, if this proves to be insufficient for some reason we can always try to revisit.",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-29T16:50:06Z",
      "diff_hunk" : "@@ -690,7 +690,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     // Check for non-standard pay-to-script-hash in inputs\n     if (fRequireStandard && !AreInputsStandard(tx, m_view))\n-        return state.Invalid(TxValidationResult::TX_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\n+        return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462442871",
      "id" : 462442871,
      "in_reply_to_id" : 462433102,
      "line" : 693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0Mjg3MQ==",
      "original_commit_id" : "be23c2af9fb3b7d571e62ae1045941a1724a3e35",
      "original_line" : 693,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 457707738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T21:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462442871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK and lite code review ACK.\r\n\r\nIt seems to me that this change won't help that much in the future upgrade case because even though this fixes witness versions things like leaf versions in taproot (which may be upgraded more often) will require a witness dependent check, and can't be txid reject filtered, unless we made it a policy that transactions spending taproots that mix and match leaf versions are non-standard (but only detectable in the case where an previous attempted witness is nonstandard).",
      "created_at" : "2020-07-29T17:44:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665805640",
      "id" : 665805640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTgwNTY0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T17:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665805640",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It seems to me that this change won't help that much in the future upgrade case [...]\r\n\r\n@JeremyRubin I agree, this is a bandaid to help this particular scenario.  Going forward, wtxid-relay + a change to the p2p protocol for announcing/requesting unconfirmed ancestors of a transaction by wtxid seems like the right way to solve this type of problem more generally.",
      "created_at" : "2020-07-29T19:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665867016",
      "id" : 665867016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTg2NzAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T19:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665867016",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar @naumenkogs Random idea about this: post-Erlay it may make sense to have a message \"i do not have have dependencies of txid `txid`\", at which point both sides add all known direct and indirect unconfirmed parents of txid they know of to their to-be-broadcast set; if erlay is in effect, the overlap will get cancelled out automatically.",
      "created_at" : "2020-07-29T19:55:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665874178",
      "id" : 665874178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTg3NDE3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T17:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665874178",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated some comments and also used this same logic when processing orphans. ",
      "created_at" : "2020-07-30T21:33:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-666717871",
      "id" : 666717871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjcxNzg3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T21:33:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666717871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463286444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463286444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to call this TX_NOWIT_NON_STANDARD instead or so, so that perhaps later it could be extended to cover other forms of nonstandardness that we know are not due to witness data?",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-30T21:38:56Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463286444",
      "id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NjQ0NA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 458775028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T21:39:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463286444",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463288772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463288772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I didn't expect that we'd ever go to the trouble of even doing this step (wtxid-relay was always the right solution, rather than trying to scatter detection of txid-is-definitely-bad failures through transaction validation), but if you think it's plausible that we would repeat this type of thing in the future, then I agree this would make sense.\r\n\r\nWe could also just as easily change this enum at that point though...",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-30T21:43:55Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463288772",
      "id" : 463288772,
      "in_reply_to_id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4ODc3Mg==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 458777756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T21:43:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463288772",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-31T04:06:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-666904390",
      "id" : 666904390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjkwNDM5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T04:06:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666904390",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463510698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463510698"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be 'via txid'",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-31T09:39:16Z",
      "diff_hunk" : "@@ -196,6 +196,12 @@ namespace {\n      * the reject filter store wtxids is exactly what we want to avoid\n      * redownload of a rejected transaction.\n      *\n+     * In cases where we can tell that a segwit transaction will fail\n+     * validation no matter the witness, we may add the txid of such\n+     * transaction to the filter as well. This can be helpful when\n+     * communicating with txid-relay peers or if we were to fetch a transaction\n+     * via wtxid (eg in our orphan handling).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463510698",
      "id" : 463510698,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxMDY5OA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 203,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 459045305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-31T10:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463510698",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463744988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463744988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, of course. The name can be changed later if it becomes more expansive.",
      "commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "created_at" : "2020-07-31T17:44:11Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463744988",
      "id" : 463744988,
      "in_reply_to_id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0NDk4OA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 459350376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-31T17:44:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463744988",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
