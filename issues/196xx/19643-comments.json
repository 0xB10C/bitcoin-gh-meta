[
   {
      "author_association" : "MEMBER",
      "body" : "@sumBTC you might find this useful--I've been using it to observe your issue https://github.com/bitcoin/bitcoin/issues/19500.",
      "created_at" : "2020-08-02T17:51:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667704787",
      "id" : 667704787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcwNDc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T17:51:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667704787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jonatack Ah was wondering what you were using. Nice to know this kind of information will soon be part of bitcoin-cli.",
      "created_at" : "2020-08-02T18:21:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667707855",
      "id" : 667707855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcwNzg1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T18:21:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667707855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6618131?v=4",
         "events_url" : "https://api.github.com/users/sumBTC/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sumBTC/followers",
         "following_url" : "https://api.github.com/users/sumBTC/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sumBTC/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sumBTC",
         "id" : 6618131,
         "login" : "sumBTC",
         "node_id" : "MDQ6VXNlcjY2MTgxMzE=",
         "organizations_url" : "https://api.github.com/users/sumBTC/orgs",
         "received_events_url" : "https://api.github.com/users/sumBTC/received_events",
         "repos_url" : "https://api.github.com/users/sumBTC/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sumBTC/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sumBTC/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sumBTC"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added an `asmap` column to the detailed peers report after a [tweet by @wtogami](https://twitter.com/jonatack/status/1290004560606457858) reminded me of it.",
      "created_at" : "2020-08-02T20:06:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667718507",
      "id" : 667718507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcxODUwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T20:06:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667718507",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19687 (refactor: make EncodeBase{32,64} consume Spans by theStack)\n* #19628 (net: change CNetAddr::ip to have flexible size by vasild)\n* #19064 (refactor: Cleanup thread ctor calls by hebasto)\n* #19043 (torcontrol: add -tortarget config by MDrollette)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-02T20:13:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667719280",
      "id" : 667719280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcxOTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-08T21:25:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667719280",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Especially on the _detailed peers listing_ as `getpeerinfo` formatted for humans.",
      "created_at" : "2020-08-03T10:00:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667932302",
      "id" : 667932302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzkzMjMwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T10:00:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667932302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Wow, this is really neat!\r\n\r\nAs a pure terminal user I love the `bitcoin-cli -netinfo t` output -- that is terminal usability at its finest!\r\n\r\nConcept ACK\r\n",
      "created_at" : "2020-08-03T15:51:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-668098753",
      "id" : 668098753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODA5ODc1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T15:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668098753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465344036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465344036"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "just for me to understand: Why do you check if the address **contains** \".onion\" and not **ends with** it (as it's done in `src/netaddress.cpp`)?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T21:36:04Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465344036",
      "id" : 465344036,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0NDAzNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 329,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465344036",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465368500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465368500"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: This is only the IPv4 localhost. Maybe:\r\n\r\n```suggestion\r\nstatic const std::string LOCALHOST_IPV4{\"127.0.0.1\"};\r\n```\r\n\r\n",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T22:36:30Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};\n+static const std::string LOCALHOST{\"127.0.0.1\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465368500",
      "id" : 465368500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2ODUwMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 20,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465368500",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465369430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465369430"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it make sense to use a `LOCALHOST_IPV6` constant here as well? (even if you would otherwise not touch it)",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T22:39:27Z",
      "diff_hunk" : "@@ -167,7 +168,7 @@ static bool InitHTTPAllowList()\n     rpc_allow_subnets.clear();\n     CNetAddr localv4;\n     CNetAddr localv6;\n-    LookupHost(\"127.0.0.1\", localv4, false);\n+    LookupHost(LOCALHOST, localv4, false);\n     LookupHost(\"::1\", localv6, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465369430",
      "id" : 465369430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2OTQzMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 171,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465369430",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465378252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465378252"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably needs a unit behind the `min ping` and `ping` values.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T23:05:07Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465378252",
      "id" : 465378252,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3ODI1Mg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465378252",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465379408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465379408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I found ping times displayed in seconds to be somewhat uninutive. I'd personally prefer milliseconds.\r\n\r\n(Had pings under one second to most of my peers. This might be different for other users.)",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T23:08:48Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465379408",
      "id" : 465379408,
      "line" : 415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3OTQwOA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 128,
      "original_start_line" : 403,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 132,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : 414,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465379408",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465394468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465394468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Longer peer ids as found on long running nodes cause the table columns to become misaligned.  \r\n\r\n```\r\nPeer connections sorted by direction and min ping\r\n  id  <->  relay   conn  min ping    ping     asmap  address\r\n13417   in   full   ipv4  0.005165  0.005495          XXX.XXX.XX.XX:XXXXX\r\n13715  out  block   ipv4  0.011632  0.013025          XX.XXX.XX.XXX:XXXX\r\n   5  out   full   ipv4  0.014787  0.016915          XXX.XX.XX.XX:XXXX\r\n```\r\n\r\n\r\n",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-04T23:57:56Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465394468",
      "id" : 465394468,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NDQ2OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 461252635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465394468",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466315958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466315958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no need for this inline comment",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:24:31Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466315958",
      "id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNTk1OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462394409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466315958",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466317336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466317336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "remove inline comment",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:27:10Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466317336",
      "id" : 466317336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzMzNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : null,
      "pull_request_review_id" : 462394409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466317336",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:33:18Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320226",
      "id" : 466320226,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMDIyNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462399712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320226",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:33:28Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320295",
      "id" : 466320295,
      "in_reply_to_id" : 466317336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMDI5NQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : null,
      "pull_request_review_id" : 462399805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320295",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322601"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7e0727b73841d5f2abc96cd2fac50de74546a281\r\n\r\nFor Bitcoin Core it seems conventional to use `-netinfo=<...>`, no?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:38:17Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional boolean argument can be passed for a detailed peers listing (default: false).\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322601",
      "id" : 466322601,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMjYwMQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 61,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322601",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322757"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jnewbery agreed, I added it for reviewers so they wouldn't wonder why this was added ;) will remove\r\n\r\n@hebasto if you are referring to *Every .cpp and .h file should #include every header file it directly uses classes, functions or other definitions from, even if those headers are already included indirectly through other headers.*... yes, this is why I added the #include. Are you posting the link for a different reason?\r\n\r\n",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:38:37Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322757",
      "id" : 466322757,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMjc1Nw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462402928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322757",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466323888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7e0727b73841d5f2abc96cd2fac50de74546a281\r\n\r\nMind following [convention](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures) about `switch` statement on an enumeration?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:40:53Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466323888",
      "id" : 466323888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMzg4OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 342,
      "original_position" : 66,
      "original_start_line" : 337,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323888",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466324599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466324599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I added it for reviewers so they wouldn't wonder why this was added\r\n\r\nYou can leave github comments on your own PR for that. If we added a code comment \"// already included via .... \" to all includes that were already included indirectly, then most of the includes would have that comment.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:42:19Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466324599",
      "id" : 466324599,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNDU5OQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462405106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466324599",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466325434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466325434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "56b156dc161b766e4aaae1ca07c719a3c599c4cb\r\n\r\n```suggestion\r\nstatic const std::string ONION_DOMAIN{\".onion\"};\r\n```",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:43:55Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466325434",
      "id" : 466325434,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTQzNA==",
      "original_commit_id" : "56b156dc161b766e4aaae1ca07c719a3c599c4cb",
      "original_line" : 19,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466325434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326730"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:46:31Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326730",
      "id" : 466326730,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNjczMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462407627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326730",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Are you posting the link for a different reason?\r\n\r\nNo, you point the reason exactly :)",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T10:46:39Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326813",
      "id" : 466326813,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNjgxMw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 462407730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326813",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK, but not sure about `min ping` data usefulness though.\r\n\r\nThanks for having a look. `min ping` is an inbound eviction criterium and I look at it more than `ping`; also mulling adding a human-readable `conntime` column and maybe a couple others (last send/recv, addnode).",
      "created_at" : "2020-08-06T10:54:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-669858187",
      "id" : 669858187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg1ODE4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669858187",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Concept ACK, but not sure about `min ping` data usefulness though.\r\n> \r\n> Thanks for having a look. `min ping` is an inbound eviction criterium and I look at it more than `ping`; also mulling adding a human-readable `conntime` column and maybe a couple others (last send/recv, addnode).\r\n\r\nGreat!",
      "created_at" : "2020-08-06T10:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-669858787",
      "id" : 669858787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg1ODc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669858787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466502794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466502794"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems `netaddress.cpp` is part of `LIBBITCOIN_COMMON`, which is not linked into `bitcoin-cli`. So you're not currently allowed to use this here.\r\n\r\nAs you are only including this header to get a few constants, `ONION` and `LOCALHOST`, might make sense to factor them out to another header? or even just duplicate them?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T15:37:35Z",
      "diff_hunk" : "@@ -9,6 +9,7 @@\n \n #include <chainparamsbase.h>\n #include <clientversion.h>\n+#include <netaddress.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466502794",
      "id" : 466502794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwMjc5NA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 12,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 462638484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466502794",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept and functionality ACK",
      "created_at" : "2020-08-06T15:38:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-670005797",
      "id" : 670005797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDAwNTc5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T15:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670005797",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466574579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466574579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think adding user agent in verbose mode is worthy. Beyond mode of display, how do you see the data split between this new RPC and `getpeerinfo` ? Static-set-at-once-at-connection-opening versus dynamic-messages-processed ?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-06T17:32:08Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466574579",
      "id" : 466574579,
      "line" : 335,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NDU3OQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 335,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 52,
      "pull_request_review_id" : 462733775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466574579",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK :+1: ",
      "created_at" : "2020-08-07T12:09:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-670485225",
      "id" : 670485225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDQ4NTIyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T12:09:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670485225",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467568717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467568717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "By user agent, do you mean getpeerinfo.subver? aka `cleanSubVer` in net.h",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T10:58:24Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467568717",
      "id" : 467568717,
      "in_reply_to_id" : 466574579,
      "line" : 335,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2ODcxNw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 335,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 52,
      "pull_request_review_id" : 463863953,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467568717",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! I forgot to look at the makefile. Moved them to `httpserver.h`, which seems to be allowed, IIUC.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:03:15Z",
      "diff_hunk" : "@@ -9,6 +9,7 @@\n \n #include <chainparamsbase.h>\n #include <clientversion.h>\n+#include <netaddress.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594332",
      "id" : 467594332,
      "in_reply_to_id" : 466502794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDMzMg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 12,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881214,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594332",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "AFAICT the outbound onion addrs returned by getpeerinfo don't end with `.onion` but with `.onion:<port id>`",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:03:33Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594357",
      "id" : 467594357,
      "in_reply_to_id" : 465344036,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDM1Nw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 329,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594357",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:03:39Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};\n+static const std::string LOCALHOST{\"127.0.0.1\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594362",
      "id" : 467594362,
      "in_reply_to_id" : 465368500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDM2Mg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 20,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 463881241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594362",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:03:45Z",
      "diff_hunk" : "@@ -167,7 +168,7 @@ static bool InitHTTPAllowList()\n     rpc_allow_subnets.clear();\n     CNetAddr localv4;\n     CNetAddr localv6;\n-    LookupHost(\"127.0.0.1\", localv4, false);\n+    LookupHost(LOCALHOST, localv4, false);\n     LookupHost(\"::1\", localv6, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594375",
      "id" : 467594375,
      "in_reply_to_id" : 465369430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDM3NQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 171,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 463881249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594375",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done by adding units in a line at the bottom to save on horizontal space",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:04:23Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594437",
      "id" : 467594437,
      "in_reply_to_id" : 465378252,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDQzNw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594460"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done for min ping and ping",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:04:34Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594460",
      "id" : 467594460,
      "in_reply_to_id" : 465379408,
      "line" : 415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDQ2MA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 128,
      "original_start_line" : 403,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 132,
      "pull_request_review_id" : 463881306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : 414,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594460",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done; the spacing is now dynamically based on the size of the largest peer id",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:04:46Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594508",
      "id" : 467594508,
      "in_reply_to_id" : 465394468,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDUwOA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594508",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "also moved the id column next to the version and address ones",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:05:22Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594611",
      "id" : 467594611,
      "in_reply_to_id" : 465394468,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDYxMQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594611",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594662"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:05:42Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594662",
      "id" : 467594662,
      "in_reply_to_id" : 466315958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDY2Mg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 463881417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594662",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:05:50Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594671",
      "id" : 467594671,
      "in_reply_to_id" : 466317336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDY3MQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : null,
      "pull_request_review_id" : 463881428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594671",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594696"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unless I'm confused, I think `-option=<...>` would be for config args, not CLI ones. See `-generate`.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:06:02Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional boolean argument can be passed for a detailed peers listing (default: false).\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594696",
      "id" : 467594696,
      "in_reply_to_id" : 466322601,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDY5Ng==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 61,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881441,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594696",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594703"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! -- done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:06:13Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594703",
      "id" : 467594703,
      "in_reply_to_id" : 466323888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDcwMw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 342,
      "original_position" : 66,
      "original_start_line" : 337,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594703",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:06:19Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594708",
      "id" : 467594708,
      "in_reply_to_id" : 466325434,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDcwOA==",
      "original_commit_id" : "56b156dc161b766e4aaae1ca07c719a3c599c4cb",
      "original_line" : 19,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 463881457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594708",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594740"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added version+subver together in a column",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:06:39Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467594740",
      "id" : 467594740,
      "in_reply_to_id" : 466574579,
      "line" : 335,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDc0MA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 335,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 52,
      "pull_request_review_id" : 463881484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467594740",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467595062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467595062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, *A new circular dependency in the form of \"httpserver -> netbase -> netaddress -> httpserver appears to have been introduced.* Will create a header, I guess.\r\n\r\nEdit: placed them in `util/url.h`\r\n\r\nEdit 2: removed the constants.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-09T15:10:08Z",
      "diff_hunk" : "@@ -9,6 +9,7 @@\n \n #include <chainparamsbase.h>\n #include <clientversion.h>\n+#include <netaddress.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r467595062",
      "id" : 467595062,
      "in_reply_to_id" : 466502794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NTA2Mg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 12,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 463881730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467595062",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @sumBTC you might find this useful--I've been using it to observe your issue #19500.\r\n\r\n",
      "created_at" : "2020-08-09T15:25:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-671065280",
      "id" : 671065280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTA2NTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T15:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671065280",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/69403487?v=4",
         "events_url" : "https://api.github.com/users/yufi1213/events{/privacy}",
         "followers_url" : "https://api.github.com/users/yufi1213/followers",
         "following_url" : "https://api.github.com/users/yufi1213/following{/other_user}",
         "gists_url" : "https://api.github.com/users/yufi1213/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/yufi1213",
         "id" : 69403487,
         "login" : "yufi1213",
         "node_id" : "MDQ6VXNlcjY5NDAzNDg3",
         "organizations_url" : "https://api.github.com/users/yufi1213/orgs",
         "received_events_url" : "https://api.github.com/users/yufi1213/received_events",
         "repos_url" : "https://api.github.com/users/yufi1213/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/yufi1213/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/yufi1213/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/yufi1213"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Took most all of the feedback and also added `lastsend` and `lastrecv` in addition to the requested `version` column.",
      "created_at" : "2020-08-09T15:51:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-671068195",
      "id" : 671068195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTA2ODE5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T15:51:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671068195",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Did not see anything in the `asmap` column. Guess that's due to me not using the asmap feature.\r\n\r\nUpdated to not display the `asmap` column unless it is being used.\r\n",
      "created_at" : "2020-08-09T15:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-671068570",
      "id" : 671068570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTA2ODU3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T15:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671068570",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What I am using at the moment is this version with additional columns for the time since the last tx (in sec) and the last block (in min), done by adding `nLastBlockTime` and `nLastTXTime` to `getpeerinfo`, because these are possible criteria for inbound peer evictions. Maybe for a follow-up.\r\n\r\n<details><summary>code diff</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\nindex 32d9cb9d3d..3b14806bea 100644\r\n--- a/src/bitcoin-cli.cpp\r\n+++ b/src/bitcoin-cli.cpp\r\n@@ -307,8 +307,10 @@ private:\r\n         int mapped_as;\r\n         int version;\r\n         int64_t conn_time;\r\n+        int64_t last_block;\r\n         int64_t last_recv;\r\n         int64_t last_send;\r\n+        int64_t last_tx;\r\n         double min_ping;\r\n         double ping;\r\n         std::string addr;\r\n@@ -410,11 +412,13 @@ public:\r\n                 const int version{peer[\"version\"].get_int()};\r\n                 const std::string sub_version{peer[\"subver\"].get_str()};\r\n                 const int64_t conn_time{peer[\"conntime\"].get_int64()};\r\n+                const int64_t last_block{peer[\"last_block\"].get_int64()};\r\n                 const int64_t last_recv{peer[\"lastrecv\"].get_int64()};\r\n                 const int64_t last_send{peer[\"lastsend\"].get_int64()};\r\n+                const int64_t last_tx{peer[\"last_tx\"].get_int64()};\r\n                 const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\r\n                 const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\r\n-                peers.push_back({peer_id, mapped_as, version, conn_time, last_recv, last_send, min_ping, ping, addr, sub_version, conn_type, is_block_relay, !is_inbound});\r\n+                peers.push_back({peer_id, mapped_as, version, conn_time, last_block, last_recv, last_send, last_tx, min_ping, ping, addr, sub_version, conn_type, is_block_relay, !is_inbound});\r\n                 is_asmap_on |= (mapped_as != 0);\r\n                 max_peer_id_length = std::max(int(ToString(peer_id).length()), max_peer_id_length);\r\n                 max_version_length = std::max(int((ToString(version) + sub_version).length()), max_version_length);\r\n@@ -425,12 +429,12 @@ public:\r\n         // Report 1: detailed peer connections sorted by direction and minimum ping time\r\n         if (m_verbose) {\r\n             std::sort(peers.begin(), peers.end());\r\n-            result += \"Peer connections sorted by direction and min ping\\n<-> relay  conn   time minping   ping lastsend lastrecv \";\r\n+            result += \"Peer connections sorted by direction and min ping\\n<-> relay  conn   time minping   ping lastsend lastrecv lasttx lastblk \";\r\n             if (is_asmap_on) result += \"asmap \";\r\n             result += strprintf(\"%*s %-*s address\\n\", max_peer_id_length, \"id\", max_version_length, \"version\");\r\n             for (const m_peer& peer : peers) {\r\n                 result += strprintf(\r\n-                    \"%3s %5s %5s%7s%8d%7d %8s %8s%*i %*s %-*s %s\\n\",\r\n+                    \"%3s %5s %5s%7s%8d%7d %8s %8s%7s%8s%*i %*s %-*s %s\\n\",\r\n                     peer.is_outbound ? \"out\" : \"in\",\r\n                     peer.is_block_relay ? \"block\" : \"full\",\r\n                     ConnTypeEnumToString(peer.conn_type),\r\n@@ -439,6 +443,8 @@ public:\r\n                     round(1000 * peer.ping),\r\n                     peer.last_send == 0 ? \"\" : ToString(time_now - peer.last_send),\r\n                     peer.last_recv == 0 ? \"\" : ToString(time_now - peer.last_recv),\r\n+                    peer.last_tx == 0 ? \"\" : ToString(time_now - peer.last_tx),\r\n+                    peer.last_block == 0 ? \"\" : ToString(time_now - peer.last_block),\r\n                     is_asmap_on ? 6 : 0, // variable spacing\r\n                     is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\r\n                     max_peer_id_length, // variable spacing\r\n@@ -447,7 +453,7 @@ public:\r\n                     ToString(peer.version) + peer.sub_version,\r\n                     peer.addr);\r\n             }\r\n-            result += \"                   min      ms     ms      sec      sec\\n\\n\";\r\n+            result += \"                   min      ms     ms      sec      sec    sec     sec\\n\\n\";\r\n         }\r\n         // Report 2: peer connections summary\r\n         total_i = ipv4_i + ipv6_i + onion_i;\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 0c56cddbdc..15f2b6044c 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -530,6 +530,8 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\r\n     X(nLastRecv);\r\n     X(nTimeConnected);\r\n     X(nTimeOffset);\r\n+    X(nLastBlockTime);\r\n+    X(nLastTXTime);\r\n     stats.addrName = GetAddrName();\r\n     X(nVersion);\r\n     {\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 17d8fda372..4ecfcce223 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -594,6 +594,8 @@ public:\r\n     int64_t m_ping_usec;\r\n     int64_t m_ping_wait_usec;\r\n     int64_t m_min_ping_usec;\r\n+    int64_t nLastBlockTime;\r\n+    int64_t nLastTXTime;\r\n     CAmount minFeeFilter;\r\n     // Our address, as reported by the peer\r\n     std::string addrLocal;\r\ndiff --git a/src/rpc/net.cpp b/src/rpc/net.cpp\r\nindex 9981ea35df..533d424611 100644\r\n--- a/src/rpc/net.cpp\r\n+++ b/src/rpc/net.cpp\r\n@@ -169,10 +169,13 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\r\n         obj.pushKV(\"relaytxes\", stats.fRelayTxes);\r\n         obj.pushKV(\"lastsend\", stats.nLastSend);\r\n         obj.pushKV(\"lastrecv\", stats.nLastRecv);\r\n+        obj.pushKV(\"last_block\", stats.nLastBlockTime);\r\n+        obj.pushKV(\"last_tx\", stats.nLastTXTime);\r\n         obj.pushKV(\"bytessent\", stats.nSendBytes);\r\n         obj.pushKV(\"bytesrecv\", stats.nRecvBytes);\r\n         obj.pushKV(\"conntime\", stats.nTimeConnected);\r\n         obj.pushKV(\"timeoffset\", stats.nTimeOffset);\r\n```\r\n</p></details>\r\n\r\nOutput\r\n```\r\nPeer connections sorted by direction and min ping\r\n<-> relay  conn   time minping   ping lastsend lastrecv lasttx lastblk  asmap   id version                                    address\r\n in  full  ipv6    902      47     58        4       25                 14061   11 70015/bitnodes.earn.com:0.1/               [2a03:b0c0:2:d0::4bc:2001]:21160\r\n in  full  ipv6    492      53     66        4       49                 34878  995 70002/dsn.tm.kit.edu/bitcoin:0.9.99/       [2a00:1398:4:2a03:921b:eff:fe35:aed9]:41110\r\n in block  ipv6     55      53     69        1        1                 14061 2092 70012/bitcoinj:0.15.6/                     [2a03:b0c0:3:f0::3a:8000]:38318\r\n in  full  ipv6    902      54    120        4       25                 34878   12 70002/dsn.tm.kit.edu/bitcoin:0.9.99/       [2a00:1398:4:2a03:4e52:62ff:fe22:6c13]:41222\r\n in  full  ipv6    900      57     74        4       27                 24940   28 70015/bitnodes.io:0.1/                     [2a01:4f8:10a:37ee::2]:60418\r\n in  full  ipv6    839     131    239        4        2    188          12637  154 70015/Satoshi:0.18.1/                      [2a0b:f4c2:2::1]:4237\r\n in  full  ipv6      1     214    214        5       72                 16509 2240 70015/Satoshi:0.19.1/                      [2600:1f16:625:e00:ab19:5fe3:f155:1371]:53146\r\n in  full  ipv6      1     226    226        5        7                 16509 2239 70015/Satoshi:0.19.1/                      [2406:da18:f7c:4351:5729:102:998c:d41a]:35564\r\n in  full  ipv6      9     239    273        5       92                 54098 2204 70015/bitcoinj:0.15-SNAPSHOT/              [2604:d500:4:1::2]:29044\r\n in  full  ipv6      2     262    322        5       25                 54098 2237 70015/bitcoinj:0.13.4/Bitcoin Wallet:4.46/ [2604:d500:4:1::2]:37601\r\n in  full  ipv6      0     277    277        5       15                 54098 2241 70015/Satoshi:0.10.1/                      [2604:d500:4:1::2]:36310\r\n in  full  ipv6      2     286    286        5       25                 54098 2236 70015/bitcoinj:0.14.4/Bitcoin:1.075/       [2604:d500:4:1::2]:41908\r\n in  full onion    783     297   1357        4       50                        286 70015/bitnodes.io:0.1/                     127.0.0.1:59452\r\n in block onion    614     616    998       19       19                        702 70015/Satoshi:0.20.0/                      127.0.0.1:37594\r\n in  full onion     77   58745 157842        5       23                       2038 70015/Satoshi:0.19.1/                      127.0.0.1:33374\r\nout  full  ipv4     92      57     99        2        9     13          43350 2006 70015/Satoshi:0.18.0/                      109.201.140.9:8333\r\nout  full  ipv4    901      67    249        2        7     10      18  24940   21 70015/Satoshi:0.19.99/                     94.130.10.158:8333\r\nout  full  ipv4    352      68    130        2        2      2     105  12876 1357 70015/Satoshi:0.19.0.1/                    51.158.27.215:8333\r\nout block  ipv4    901     129    201       76       76            277  13768   22 70015/Satoshi:0.19.1/                      64.227.13.20:8333\r\nout block  ipv4    901     203    280       67       67            839  14061   25 70015/Satoshi:0.17.2/                      165.22.223.100:8333\r\nout  full  ipv4    281     211    248        3        3      3          63949 1527 70015/Satoshi:0.17.1/                      173.230.157.253:8333\r\nout  full  ipv4    638     309    391        2       30     30     247 132203  637 70015/Satoshi:0.18.0/                      129.226.125.10:8333\r\nout  full onion     23     461    789        2       13     13                2163 70015/Satoshi:0.20.99/                     XXXXXXXXy7q47OID.onion:8333\r\nout  full onion    902     545   1003        3        5     35                  20 70015/Satoshi:0.19.0.1/                    XXXXXXXXuomUx6ln.onion:8333\r\nout  full onion    223     705   1261        1        1    327                1706 70015/Satoshi:0.19.1/                      XXXXXXXXmexaT7zd.onion:8333\r\nout  full onion    903     724   1267        4        4   2414                   8 70015/Satoshi:0.20.0/                      XXXXXXXX5pans2i4.onion:8333\r\n                   min      ms     ms      sec      sec    sec     min\r\n\r\nInbound and outbound peer connections\r\nin:  ipv4   0  |  ipv6  12  |  onion   3  |  total  15  (2 block-relay)\r\nout: ipv4   7  |  ipv6   0  |  onion   4  |  total  11  (2 block-relay)\r\nall: 26\r\n\r\nLocal addresses\r\nXXXX:XXX:53c:a200:bb54:3be5:c3d0:9ce5  |  port  8333  |  score   1505\r\nXXXXXXXXrn5pknnd.onion                 |  port  8333  |  score    235\r\n```\r\n",
      "created_at" : "2020-08-09T19:48:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-671093420",
      "id" : 671093420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTA5MzQyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T10:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671093420",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468039429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468039429"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`ONION_EXTENSION` or `ONION_SUFFIX` would be a more accurate name here imo",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-10T16:45:11Z",
      "diff_hunk" : "@@ -102,7 +103,7 @@ bool CNetAddr::SetInternal(const std::string &name)\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n+    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == ONION_DOMAIN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468039429",
      "id" : 468039429,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzOTQyOQ==",
      "original_commit_id" : "5cdce7a07547f90ae5ea81c7ea8cc9314717d5b2",
      "original_line" : 106,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 464400314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468039429",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468042236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468042236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think a comment should recite the implementation details of the code. For this level of detail, ppl can read the code. Same with the two functions below.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-10T16:50:07Z",
      "diff_hunk" : "@@ -291,6 +292,180 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        m_conn_type conn_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468042236",
      "id" : 468042236,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0MjIzNg==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 325,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 464400314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468042236",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468068980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468068980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think agreement is now to not allow \"1\" instead of \"true\" if it can be avoided. Came up here: https://github.com/bitcoin/bitcoin/pull/19544#discussion_r458695235",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-10T17:38:17Z",
      "diff_hunk" : "@@ -291,6 +292,180 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        m_conn_type conn_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION_DOMAIN) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST_IPV4) == 0 && addr_local.find(ONION_DOMAIN) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        } // no default case, so the compiler can warn about missing cases\n+        assert(false);\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468068980",
      "id" : 468068980,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2ODk4MA==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 357,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 464400314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468068980",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468075252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468075252"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would expect something like this instead:\r\n```suggestion\r\n     * @returns true if addr is identified as IPv6. */\r\n```",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-10T17:49:11Z",
      "diff_hunk" : "@@ -291,6 +292,180 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        m_conn_type conn_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468075252",
      "id" : 468075252,
      "in_reply_to_id" : 468042236,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3NTI1Mg==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 325,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 464446233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468075252",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468834976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468834976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure about initialisation order here.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-11T20:08:30Z",
      "diff_hunk" : "@@ -28,7 +29,7 @@\n #include <event2/thread.h>\n \n /** Default control port */\n-const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+const std::string DEFAULT_TOR_CONTROL = LOCALHOST_IPV4 + \":9051\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468834976",
      "id" : 468834976,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzNDk3Ng==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 32,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : null,
      "pull_request_review_id" : 465390818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468834976",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468835327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468835327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`ONION_TLD`?",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-11T20:09:14Z",
      "diff_hunk" : "@@ -102,7 +103,7 @@ bool CNetAddr::SetInternal(const std::string &name)\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n+    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == ONION_DOMAIN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r468835327",
      "id" : 468835327,
      "in_reply_to_id" : 468039429,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzNTMyNw==",
      "original_commit_id" : "5cdce7a07547f90ae5ea81c7ea8cc9314717d5b2",
      "original_line" : 106,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465390818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468835327",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470081234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470081234"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting, thanks. That may possibly apply more to the RPC API than to the CLI, but ok, done.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-13T16:36:55Z",
      "diff_hunk" : "@@ -291,6 +292,180 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        m_conn_type conn_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION_DOMAIN) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST_IPV4) == 0 && addr_local.find(ONION_DOMAIN) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        } // no default case, so the compiler can warn about missing cases\n+        assert(false);\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470081234",
      "id" : 470081234,
      "in_reply_to_id" : 468068980,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4MTIzNA==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 357,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 466931399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470081234",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470084772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470084772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped the commit adding the constants.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-13T16:42:52Z",
      "diff_hunk" : "@@ -102,7 +103,7 @@ bool CNetAddr::SetInternal(const std::string &name)\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n+    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == ONION_DOMAIN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470084772",
      "id" : 470084772,
      "in_reply_to_id" : 468039429,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4NDc3Mg==",
      "original_commit_id" : "5cdce7a07547f90ae5ea81c7ea8cc9314717d5b2",
      "original_line" : 106,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 466935954,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470084772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470084976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470084976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed the Doxygen comments.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-13T16:43:13Z",
      "diff_hunk" : "@@ -291,6 +292,180 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        m_conn_type conn_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470084976",
      "id" : 470084976,
      "in_reply_to_id" : 468042236,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4NDk3Ng==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 325,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 466936232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470084976",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470085563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470085563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Not sure about initialisation order here.\r\n\r\nWas working fine for me the past weeks, but point taken. Dropped the commit adding the constants to simplify things.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-13T16:44:16Z",
      "diff_hunk" : "@@ -28,7 +29,7 @@\n #include <event2/thread.h>\n \n /** Default control port */\n-const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+const std::string DEFAULT_TOR_CONTROL = LOCALHOST_IPV4 + \":9051\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470085563",
      "id" : 470085563,
      "in_reply_to_id" : 468834976,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4NTU2Mw==",
      "original_commit_id" : "324aa5eaf9b1790f275d2af75bc821f70ff53a5f",
      "original_line" : 32,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : null,
      "pull_request_review_id" : 466937028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470085563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks everyone for reviewing and the 9-10 Concept ACKs.\r\n\r\nTo simplify things, I dropped the commit that added the constants, took the other feedback, and made a number of further improvements. As there were no full ACKs and almost no feedback on the code itself, and to make the changes easy to review, I organised the 200 lines of changes into step-by-step hygienic commits to hopefully garner some final ACKs.\r\n\r\nAt this point, I'd like to defer any further changes to follow-ups, as there are more improvements I'd propose as well as a release note and maybe some test coverage if this is merged. So looking for ACKs now and hoping to see this in master soon.",
      "created_at" : "2020-08-13T16:56:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-673591921",
      "id" : 673591921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzU5MTkyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T07:57:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673591921",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470583883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470583883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is undefined behavior if `addr` is empty, you might want to guard against that.",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-14T12:06:08Z",
      "diff_hunk" : "@@ -291,6 +293,184 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    bool IsAddrIPv6(const std::string& addr) const\n+    {\n+        return addr.front() == '[';",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470583883",
      "id" : 470583883,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4Mzg4Mw==",
      "original_commit_id" : "bf1c49a2a06d0ff94123ca2131aea0517423c0dd",
      "original_line" : 302,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 467522715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470583883",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470586065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470586065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This is undefined behavior if `addr` is empty, you might want to guard against that.\r\n\r\nThanks! will fix",
      "commit_id" : "f63ceccca31aa624819b429d015f8f1bf2daf49f",
      "created_at" : "2020-08-14T12:11:22Z",
      "diff_hunk" : "@@ -291,6 +293,184 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    bool IsAddrIPv6(const std::string& addr) const\n+    {\n+        return addr.front() == '[';",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r470586065",
      "id" : 470586065,
      "in_reply_to_id" : 470583883,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NjA2NQ==",
      "original_commit_id" : "bf1c49a2a06d0ff94123ca2131aea0517423c0dd",
      "original_line" : 302,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 467525408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-14T12:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470586065",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated with a non-empty check per `git diff bf1c49a f63cecc` (thanks!)",
      "created_at" : "2020-08-14T12:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-674053200",
      "id" : 674053200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDA1MzIwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T12:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674053200",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
