[
   {
      "author_association" : "MEMBER",
      "body" : "@sumBTC you might find this useful--I've been using it to observe your issue https://github.com/bitcoin/bitcoin/issues/19500.",
      "created_at" : "2020-08-02T17:51:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667704787",
      "id" : 667704787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcwNDc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T17:51:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667704787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jonatack Ah was wondering what you were using. Nice to know this kind of information will soon be part of bitcoin-cli.",
      "created_at" : "2020-08-02T18:21:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667707855",
      "id" : 667707855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcwNzg1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T18:21:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667707855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6618131?v=4",
         "events_url" : "https://api.github.com/users/sumBTC/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sumBTC/followers",
         "following_url" : "https://api.github.com/users/sumBTC/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sumBTC/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sumBTC",
         "id" : 6618131,
         "login" : "sumBTC",
         "node_id" : "MDQ6VXNlcjY2MTgxMzE=",
         "organizations_url" : "https://api.github.com/users/sumBTC/orgs",
         "received_events_url" : "https://api.github.com/users/sumBTC/received_events",
         "repos_url" : "https://api.github.com/users/sumBTC/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sumBTC/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sumBTC/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sumBTC"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added an `asmap` column to the detailed peers report after a [tweet by @wtogami](https://twitter.com/jonatack/status/1290004560606457858) reminded me of it.",
      "created_at" : "2020-08-02T20:06:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667718507",
      "id" : 667718507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcxODUwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T20:06:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667718507",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19628 (net: change CNetAddr::ip to have flexible size by vasild)\n* #19064 (refactor: Cleanup thread ctor calls by hebasto)\n* #19043 (torcontrol: add -tortarget config by MDrollette)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-02T20:13:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667719280",
      "id" : 667719280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcxOTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T00:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667719280",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Especially on the _detailed peers listing_ as `getpeerinfo` formatted for humans.",
      "created_at" : "2020-08-03T10:00:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-667932302",
      "id" : 667932302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzkzMjMwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T10:00:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667932302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Wow, this is really neat!\r\n\r\nAs a pure terminal user I love the `bitcoin-cli -netinfo t` output -- that is terminal usability at its finest!\r\n\r\nConcept ACK\r\n",
      "created_at" : "2020-08-03T15:51:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-668098753",
      "id" : 668098753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODA5ODc1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T15:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668098753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465344036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465344036"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "just for me to understand: Why do you check if the address **contains** \".onion\" and not **ends with** it (as it's done in `src/netaddress.cpp`)?",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T21:36:04Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465344036",
      "id" : 465344036,
      "line" : 325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0NDAzNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 325,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 49,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T23:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465344036",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465368500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465368500"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: This is only the IPv4 localhost. Maybe:\r\n\r\n```suggestion\r\nstatic const std::string LOCALHOST_IPV4{\"127.0.0.1\"};\r\n```\r\n\r\n",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T22:36:30Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};\n+static const std::string LOCALHOST{\"127.0.0.1\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465368500",
      "id" : 465368500,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2ODUwMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 20,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 5,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T23:51:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465368500",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465369430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465369430"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it make sense to use a `LOCALHOST_IPV6` constant here as well? (even if you would otherwise not touch it)",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T22:39:27Z",
      "diff_hunk" : "@@ -167,7 +168,7 @@ static bool InitHTTPAllowList()\n     rpc_allow_subnets.clear();\n     CNetAddr localv4;\n     CNetAddr localv6;\n-    LookupHost(\"127.0.0.1\", localv4, false);\n+    LookupHost(LOCALHOST, localv4, false);\n     LookupHost(\"::1\", localv6, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465369430",
      "id" : 465369430,
      "line" : 172,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2OTQzMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 172,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 14,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T23:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465369430",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465378252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465378252"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably needs a unit behind the `min ping` and `ping` values.",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T23:05:07Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465378252",
      "id" : 465378252,
      "line" : 415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3ODI1Mg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 139,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T23:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465378252",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465379408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465379408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I found ping times displayed in seconds to be somewhat uninutive. I'd personally prefer milliseconds.\r\n\r\n(Had pings under one second to most of my peers. This might be different for other users.)",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T23:08:48Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465379408",
      "id" : 465379408,
      "line" : 404,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3OTQwOA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 404,
      "original_position" : 128,
      "original_start_line" : 403,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 128,
      "pull_request_review_id" : 461191719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : 403,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-04T23:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465379408",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465394468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465394468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Longer peer ids as found on long running nodes cause the table columns to become misaligned.  \r\n\r\n```\r\nPeer connections sorted by direction and min ping\r\n  id  <->  relay   conn  min ping    ping     asmap  address\r\n13417   in   full   ipv4  0.005165  0.005495          XXX.XXX.XX.XX:XXXXX\r\n13715  out  block   ipv4  0.011632  0.013025          XX.XXX.XX.XXX:XXXX\r\n   5  out   full   ipv4  0.014787  0.016915          XXX.XX.XX.XX:XXXX\r\n```\r\n\r\n\r\n",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-04T23:57:56Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };\n+    }\n+\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\" || arg == \"1\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        std::vector<m_peer> peers;\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            m_conn_type conn_type{m_conn_type::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_i += 1;\n+                } else if (IsInboundOnion(mapped_as, addr, addr_local)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_i += 1;\n+                } else {\n+                    ipv4_i += 1;\n+                }\n+                if (is_block_relay) block_relay_i += 1;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    conn_type = m_conn_type::ipv6;\n+                    ipv6_o += 1;\n+                } else if (IsOutboundOnion(addr)) {\n+                    conn_type = m_conn_type::onion;\n+                    onion_o += 1;\n+                } else {\n+                    ipv4_o += 1;\n+                }\n+                if (is_block_relay) block_relay_o += 1;\n+            }\n+            if (m_verbose) {\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const double min_ping{peer[\"minping\"].isNull() ? 0 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? 0 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, min_ping, ping, addr, conn_type, !is_inbound, is_block_relay});\n+            }\n+        }\n+        // Generate reports\n+        std::string result;\n+        // Report 1: peer connections sorted by direction and minimum ping time\n+        if (m_verbose) {\n+            result += \"Peer connections sorted by direction and min ping\\n  id  <->  relay   conn  min ping    ping     asmap  address\\n\";\n+            std::sort(peers.begin(), peers.end());\n+            for (const m_peer& peer : peers) {\n+                result += strprintf(\"%4i  %3s  %5s  %5s  %-8d  %-8d  %6s  %s\\n\", peer.id, peer.is_outbound ? \"out\" : \"in\", peer.is_block_relay ? \"block\" : \"full\", ConnTypeEnumToString(peer.conn_type), peer.min_ping, peer.ping, peer.mapped_as == 0 ? \"\" : ToString(peer.mapped_as), peer.addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r465394468",
      "id" : 465394468,
      "line" : 415,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NDQ2OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 415,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 139,
      "pull_request_review_id" : 461252635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T23:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465394468",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466315958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466315958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no need for this inline comment",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:24:31Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466315958",
      "id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNTk1OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462394409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466315958",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466317336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466317336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "remove inline comment",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:27:10Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466317336",
      "id" : 466317336,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzMzNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : 4,
      "pull_request_review_id" : 462394409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466317336",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:33:18Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320226",
      "id" : 466320226,
      "in_reply_to_id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMDIyNg==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462399712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:33:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320226",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:33:28Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466320295",
      "id" : 466320295,
      "in_reply_to_id" : 466317336,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMDI5NQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/torcontrol.cpp",
      "position" : 4,
      "pull_request_review_id" : 462399805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466320295",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322601"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7e0727b73841d5f2abc96cd2fac50de74546a281\r\n\r\nFor Bitcoin Core it seems conventional to use `-netinfo=<...>`, no?",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:38:17Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional boolean argument can be passed for a detailed peers listing (default: false).\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322601",
      "id" : 466322601,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMjYwMQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 12,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322601",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322757"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jnewbery agreed, I added it for reviewers so they wouldn't wonder why this was added ;) will remove\r\n\r\n@hebasto if you are referring to *Every .cpp and .h file should #include every header file it directly uses classes, functions or other definitions from, even if those headers are already included indirectly through other headers.*... yes, this is why I added the #include. Are you posting the link for a different reason?\r\n\r\n",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:38:37Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466322757",
      "id" : 466322757,
      "in_reply_to_id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMjc1Nw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462402928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466322757",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466323888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7e0727b73841d5f2abc96cd2fac50de74546a281\r\n\r\nMind following [convention](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures) about `switch` statement on an enumeration?",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:40:53Z",
      "diff_hunk" : "@@ -291,6 +293,146 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    enum struct m_conn_type {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+\n+    struct m_peer {\n+        int id;\n+        int mapped_as;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        m_conn_type conn_type;\n+        bool is_outbound;\n+        bool is_block_relay;\n+        bool operator<(const m_peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+\n+    /** Whether a peer is an IPv6 connection.\n+     * @returns true if addr starts with '['. */\n+    bool IsAddrIPv6(const std::string& addr) const { return addr.front() == '['; }\n+\n+    /** Whether a peer is an outbound onion connection.\n+     * @returns true if addr contains \".onion\". */\n+    bool IsOutboundOnion(const std::string& addr) const { return addr.find(ONION) != std::string::npos; }\n+\n+    /** Whether a peer is an inbound onion connection.\n+     * @returns true if mapped_as == 0, addr starts with \"127.0.0.1\", and addr_local contains \".onion\". */\n+    bool IsInboundOnion(int mapped_as, const std::string& addr, const std::string& addr_local) const\n+    {\n+        return mapped_as == 0 && addr.find(LOCALHOST) == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+\n+    std::string ConnTypeEnumToString(m_conn_type t)\n+    {\n+        switch (t) {\n+        case m_conn_type::ipv4: return \"ipv4\";\n+        case m_conn_type::ipv6: return \"ipv6\";\n+        case m_conn_type::onion: return \"onion\";\n+        default: return \"invalid\";\n+        };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466323888",
      "id" : 466323888,
      "line" : 342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMzg4OA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 342,
      "original_position" : 66,
      "original_start_line" : 337,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 66,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : 337,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-06T10:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323888",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466324599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466324599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I added it for reviewers so they wouldn't wonder why this was added\r\n\r\nYou can leave github comments on your own PR for that. If we added a code comment \"// already included via .... \" to all includes that were already included indirectly, then most of the includes would have that comment.",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:42:19Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466324599",
      "id" : 466324599,
      "in_reply_to_id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNDU5OQ==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462405106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466324599",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466325434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466325434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "56b156dc161b766e4aaae1ca07c719a3c599c4cb\r\n\r\n```suggestion\r\nstatic const std::string ONION_DOMAIN{\".onion\"};\r\n```",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:43:55Z",
      "diff_hunk" : "@@ -16,6 +16,9 @@\n #include <string>\n #include <vector>\n \n+static const std::string ONION{\".onion\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466325434",
      "id" : 466325434,
      "line" : 19,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTQzNA==",
      "original_commit_id" : "56b156dc161b766e4aaae1ca07c719a3c599c4cb",
      "original_line" : 19,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 4,
      "pull_request_review_id" : 462401586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466325434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326730"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:46:31Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326730",
      "id" : 466326730,
      "in_reply_to_id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNjczMA==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462407627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:46:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326730",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Are you posting the link for a different reason?\r\n\r\nNo, you point the reason exactly :)",
      "commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "created_at" : "2020-08-06T10:46:39Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <netaddress.h> // For explicitness; already included via netbase.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#discussion_r466326813",
      "id" : 466326813,
      "in_reply_to_id" : 466315958,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNjgxMw==",
      "original_commit_id" : "7e0727b73841d5f2abc96cd2fac50de74546a281",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 4,
      "pull_request_review_id" : 462407730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19643",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:46:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466326813",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK, but not sure about `min ping` data usefulness though.\r\n\r\nThanks for having a look. `min ping` is an inbound eviction criterium and I look at it more than `ping`; also mulling adding a human-readable `conntime` column and maybe a couple others (last send/recv, addnode).",
      "created_at" : "2020-08-06T10:54:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-669858187",
      "id" : 669858187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg1ODE4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669858187",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Concept ACK, but not sure about `min ping` data usefulness though.\r\n> \r\n> Thanks for having a look. `min ping` is an inbound eviction criterium and I look at it more than `ping`; also mulling adding a human-readable `conntime` column and maybe a couple others (last send/recv, addnode).\r\n\r\nGreat!",
      "created_at" : "2020-08-06T10:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19643#issuecomment-669858787",
      "id" : 669858787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19643",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg1ODc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669858787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
