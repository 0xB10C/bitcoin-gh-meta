[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/28113#pullrequestreview-1544154683) |\n| Concept ACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1645764514) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28113#pullrequestreview-1543209382) |\n| Stale ACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/28113#pullrequestreview-1539670029), [jonatack](https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646964712), [hebasto](https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1647528259) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28134](https://github.com/bitcoin/bitcoin/pull/28134) (rpc, util: deduplicate AmountFromValue() using util::Result by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-07-20T14:06:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1643992614",
      "id" : 1643992614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585h_VYm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643992614/reactions"
      },
      "updated_at" : "2023-07-24T19:51:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643992614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2023-07-20T14:08:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1643996052",
      "id" : 1643996052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585h_WOU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643996052/reactions"
      },
      "updated_at" : "2023-07-20T14:08:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643996052",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-07-20T14:10:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1643999326",
      "id" : 1643999326,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585h_XBe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643999326/reactions"
      },
      "updated_at" : "2023-07-20T14:10:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643999326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269708017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269708017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing self-include?",
      "commit_id" : "03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d",
      "created_at" : "2023-07-20T16:32:32Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269708017",
      "id" : 1269708017,
      "line" : 4,
      "node_id" : "PRRC_kwDOABII585LrjTx",
      "original_commit_id" : "03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/common/univalue_helpers.cpp",
      "position" : 4,
      "pull_request_review_id" : 1539670029,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269708017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T16:37:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269708017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269712862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269712862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "it may be nice to include univalue.h and then mark it as `export` for iwyu. This would allow include-sites to drop the univalue.h include, since it should be obvious that there is a univalue dependency with the `univalue_helpers.h` include already.\r\n\r\nAlso, this shouldn't increase compile cost, because it would be rare (in this case) for a call-site to include this header, but not need the univalue header.",
      "commit_id" : "03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d",
      "created_at" : "2023-07-20T16:37:42Z",
      "diff_hunk" : "@@ -0,0 +1,17 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_UNIVALUE_HELPERS_H\n+#define BITCOIN_COMMON_UNIVALUE_HELPERS_H\n+\n+#include <string>\n+#include <vector>\n+\n+class UniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269712862",
      "id" : 1269712862,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585Lrkfe",
      "original_commit_id" : "03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/common/univalue_helpers.h",
      "position" : 11,
      "pull_request_review_id" : 1539670029,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269712862/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T16:37:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269712862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269745657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269745657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't really find this fn to be a `UniValue` helper, pretty much all the logic is sighash specific. While thinking for a better place to sit, I ended up thinking the better solution may be to keep it where it is but just remove the (imo unnecessary) dependency on UV? Offloading the default value and type check to a helper function like `ParseSighashString` is opaque, and even though my approach here is slightly more verbose in the callsite, I find the clarity of what's happening to be worth it (different callsites may require different behaviour in case of wrong types or `sighash_str`).\r\n\r\nWhat do you think?\r\n\r\n_(I think returning a `std::optional` instead of throwing is probably even better, but orthogonal to this pull)_\r\n\r\n<details>\r\n<summary>git diff on master</summary>\r\n\r\n```diff\r\ndiff --git a/src/core_io.h b/src/core_io.h\r\nindex 997f3bfd5b..ea07042b82 100644\r\n--- a/src/core_io.h\r\n+++ b/src/core_io.h\r\n@@ -46,7 +46,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\r\n  */\r\n bool ParseHashStr(const std::string& strHex, uint256& result);\r\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\r\n-int ParseSighashString(const UniValue& sighash);\r\n+int ParseSighashString(const std::string& sighash);\r\n \r\n // core_write.cpp\r\n UniValue ValueFromAmount(const CAmount amount);\r\ndiff --git a/src/core_read.cpp b/src/core_read.cpp\r\nindex 84cd559b7f..31f121206c 100644\r\n--- a/src/core_read.cpp\r\n+++ b/src/core_read.cpp\r\n@@ -252,26 +252,20 @@ std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strN\r\n     return ParseHex(strHex);\r\n }\r\n \r\n-int ParseSighashString(const UniValue& sighash)\r\n+int ParseSighashString(const std::string& sighash_str)\r\n {\r\n-    int hash_type = SIGHASH_DEFAULT;\r\n-    if (!sighash.isNull()) {\r\n-        static std::map<std::string, int> map_sighash_values = {\r\n-            {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n-            {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n-            {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n-            {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n-            {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n-            {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n-            {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n-        };\r\n-        const std::string& strHashType = sighash.get_str();\r\n-        const auto& it = map_sighash_values.find(strHashType);\r\n-        if (it != map_sighash_values.end()) {\r\n-            hash_type = it->second;\r\n-        } else {\r\n-            throw std::runtime_error(strHashType + \" is not a valid sighash parameter.\");\r\n-        }\r\n+    static std::map<std::string, int> map_sighash_values = {\r\n+        {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n+        {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n+        {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n+        {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n+        {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n+        {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n+        {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n+    };\r\n+    const auto& it{map_sighash_values.find(sighash_str)};\r\n+    if (it != map_sighash_values.end()) {\r\n+        return it->second;\r\n     }\r\n-    return hash_type;\r\n+    throw std::runtime_error(sighash_str + \" is not a valid sighash parameter.\");\r\n }\r\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\r\nindex eb0200ccf5..e0e30b2d9e 100644\r\n--- a/src/rpc/rawtransaction.cpp\r\n+++ b/src/rpc/rawtransaction.cpp\r\n@@ -1964,7 +1964,7 @@ RPCHelpMan descriptorprocesspsbt()\r\n         EvalDescriptorStringOrObject(descs[i], provider, /*expand_priv=*/true);\r\n     }\r\n \r\n-    int sighash_type = ParseSighashString(request.params[2]);\r\n+    int sighash_type{request.params[2].isNull() ? SIGHASH_DEFAULT: ParseSighashString(request.params[2].get_str())};\r\n     bool bip32derivs = request.params[3].isNull() ? true : request.params[3].get_bool();\r\n     bool finalize = request.params[4].isNull() ? true : request.params[4].get_bool();\r\n \r\ndiff --git a/src/rpc/rawtransaction_util.cpp b/src/rpc/rawtransaction_util.cpp\r\nindex 3a6fa39e4d..7272cca1c5 100644\r\n--- a/src/rpc/rawtransaction_util.cpp\r\n+++ b/src/rpc/rawtransaction_util.cpp\r\n@@ -289,7 +289,7 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\r\n \r\n void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result)\r\n {\r\n-    int nHashType = ParseSighashString(hashType);\r\n+    int nHashType{hashType.isNull() ? SIGHASH_DEFAULT : ParseSighashString(hashType.get_str())};\r\n \r\n     // Script verification errors\r\n     std::map<int, bilingual_str> input_errors;\r\ndiff --git a/src/test/fuzz/parse_univalue.cpp b/src/test/fuzz/parse_univalue.cpp\r\nindex bfa856211d..5cb2c64f26 100644\r\n--- a/src/test/fuzz/parse_univalue.cpp\r\n+++ b/src/test/fuzz/parse_univalue.cpp\r\n@@ -73,10 +73,6 @@ FUZZ_TARGET(parse_univalue, .init = initialize_parse_univalue)\r\n     } catch (const UniValue&) {\r\n     } catch (const std::runtime_error&) {\r\n     }\r\n-    try {\r\n-        (void)ParseSighashString(univalue);\r\n-    } catch (const std::runtime_error&) {\r\n-    }\r\n     try {\r\n         (void)AmountFromValue(univalue);\r\n     } catch (const UniValue&) {\r\ndiff --git a/src/wallet/rpc/spend.cpp b/src/wallet/rpc/spend.cpp\r\nindex b695d4bed3..3d74b12ef7 100644\r\n--- a/src/wallet/rpc/spend.cpp\r\n+++ b/src/wallet/rpc/spend.cpp\r\n@@ -943,7 +943,7 @@ RPCHelpMan signrawtransactionwithwallet()\r\n     // Parse the prevtxs array\r\n     ParsePrevouts(request.params[1], nullptr, coins);\r\n \r\n-    int nHashType = ParseSighashString(request.params[2]);\r\n+    int nHashType{request.params[2].isNull() ? SIGHASH_DEFAULT: ParseSighashString(request.params[2].get_str())};\r\n \r\n     // Script verification errors\r\n     std::map<int, bilingual_str> input_errors;\r\n@@ -1587,7 +1587,7 @@ RPCHelpMan walletprocesspsbt()\r\n     }\r\n \r\n     // Get the sighash type\r\n-    int nHashType = ParseSighashString(request.params[2]);\r\n+    int nHashType{request.params[2].isNull() ? SIGHASH_DEFAULT: ParseSighashString(request.params[2].get_str())};\r\n \r\n     // Fill transaction with our data and also sign\r\n     bool sign = request.params[1].isNull() ? true : request.params[1].get_bool();\r\n\r\n```\r\n</details>",
      "commit_id" : "05477b5566dc6f9c3d5c9609268002c0fbe1e1aa",
      "created_at" : "2023-07-20T17:09:58Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/interpreter.h>\n+#include <univalue.h>\n+#include <util/strencodings.h>\n+\n+#include <map>\n+#include <stdexcept>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName)\n+{\n+    std::string strHex;\n+    if (v.isStr())\n+        strHex = v.getValStr();\n+    if (!IsHex(strHex))\n+        throw std::runtime_error(strName + \" must be hexadecimal string (not '\" + strHex + \"')\");\n+    return ParseHex(strHex);\n+}\n+\n+int ParseSighashString(const UniValue& sighash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269745657",
      "id" : 1269745657,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585Lrsf5",
      "original_commit_id" : "03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d",
      "original_line" : 26,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/common/univalue_helpers.cpp",
      "position" : 26,
      "pull_request_review_id" : 1539728494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269745657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T18:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269745657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 03e06e589a24f0bcb7dbd28a0aaa925b18b87b9d -> 0498ea61f4ce1d73e84f866f420a2afb209fb01c ([kernelRmUnivalue_0](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_0) -> [kernelRmUnivalue_1](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_1),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_0..kernelRmUnivalue_1))\r\n\r\n* Addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269708017), fixed include\r\n* Addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269712862), exported `univalue.h` include\r\n* Followed up on @stickies-v's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1269745657), implemented an alternative to the comment by splitting the implementation between `univalue_helpers` and `core_read` functions. Changed the return type of the function in `core_read` to return a `util::Result` instead of throwing. Since other `UniValue` calls may throw already in the `univalue_helpers` function, it seems more appropriate to throw there though.",
      "created_at" : "2023-07-21T14:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1645705020",
      "id" : 1645705020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iF3c8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645705020/reactions"
      },
      "updated_at" : "2023-07-21T14:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645705020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1270790467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270790467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing newline after self-include?",
      "commit_id" : "05477b5566dc6f9c3d5c9609268002c0fbe1e1aa",
      "created_at" : "2023-07-21T15:09:37Z",
      "diff_hunk" : "@@ -0,0 +1,35 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/univalue_helpers.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1270790467",
      "id" : 1270790467,
      "line" : 5,
      "node_id" : "PRRC_kwDOABII585LvrlD",
      "original_commit_id" : "0498ea61f4ce1d73e84f866f420a2afb209fb01c",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/common/univalue_helpers.cpp",
      "position" : 5,
      "pull_request_review_id" : 1541342228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270790467/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-21T15:09:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270790467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1270799400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270799400"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ups, done.",
      "commit_id" : "05477b5566dc6f9c3d5c9609268002c0fbe1e1aa",
      "created_at" : "2023-07-21T15:18:23Z",
      "diff_hunk" : "@@ -0,0 +1,35 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/univalue_helpers.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1270799400",
      "id" : 1270799400,
      "in_reply_to_id" : 1270790467,
      "line" : 5,
      "node_id" : "PRRC_kwDOABII585Lvtwo",
      "original_commit_id" : "0498ea61f4ce1d73e84f866f420a2afb209fb01c",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/common/univalue_helpers.cpp",
      "position" : 5,
      "pull_request_review_id" : 1541356410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270799400/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-21T15:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270799400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 0498ea61f4ce1d73e84f866f420a2afb209fb01c -> 05477b5566dc6f9c3d5c9609268002c0fbe1e1aa ([kernelRmUnivalue_1](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_1) -> [kernelRmUnivalue_2](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_2),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_1..kernelRmUnivalue_2))\r\n\r\n* Addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1270790467), fixed include spacing.",
      "created_at" : "2023-07-21T15:23:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1645757452",
      "id" : 1645757452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iGEQM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645757452/reactions"
      },
      "updated_at" : "2023-07-21T15:23:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645757452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. cc @theuni ",
      "created_at" : "2023-07-21T15:29:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1645764514",
      "id" : 1645764514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iGF-i",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645764514/reactions"
      },
      "updated_at" : "2023-07-21T15:29:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645764514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Putting new parsing helpers into the `libbitcoin_common` library is a bit questionable for me.\r\n\r\nI was expecting to see them in the `libbitcoin_util`. However, it is not possible with the suggested approach as the `univalue_helpers.cpp` depends on `SIGHASH_DEFAULT`.\r\n\r\nUPD. However, we put to the `libbitcoin_common` the code that is not used in the kernel.",
      "created_at" : "2023-07-21T16:02:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1645806444",
      "id" : 1645806444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iGQNs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645806444/reactions"
      },
      "updated_at" : "2023-07-21T19:02:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645806444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The `ParseHexUV` function is used in `bitcoin-tx.cpp` only. Why not make it `static`/`namespace`d in there?\r\n\r\nSee: https://github.com/hebasto/bitcoin/commit/6d0fcfe3abc8b944d296d2033b9fd2e444d85ce4",
      "created_at" : "2023-07-21T20:36:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646212942",
      "id" : 1646212942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iHzdO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646212942/reactions"
      },
      "updated_at" : "2023-07-21T20:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646212942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The ParseHexUV function is used in bitcoin-tx.cpp only. Why not make it static/namespaced in there?\r\n\r\nSacrificing the fuzz test seems unfortunate. but we already don't fuzz a similar function in `bitcoin-tx` `AmountFromValue`. I guess we have poor coverage of `bitcoin-tx` in general though.",
      "created_at" : "2023-07-21T20:43:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646218170",
      "id" : 1646218170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iH0u6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646218170/reactions"
      },
      "updated_at" : "2023-07-21T20:43:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646218170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Sacrificing the fuzz test seems unfortunate.\r\n\r\nMaybe more fuzzing for `ParseHex` and `IsHex` is a better way?",
      "created_at" : "2023-07-21T21:15:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646246065",
      "id" : 1646246065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iH7ix",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646246065/reactions"
      },
      "updated_at" : "2023-07-21T21:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646246065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Suggesting an alternative implementation that  is based on the following idea:\r\n```diff\r\n--- a/src/core_read.cpp\r\n+++ b/src/core_read.cpp\r\n@@ -242,10 +242,10 @@ bool ParseHashStr(const std::string& strHex, uint256& result)\r\n     return true;\r\n }\r\n \r\n-int ParseSighashString(const UniValue& sighash)\r\n+int ParseSighashString(const std::optional<std::string>& sighash)\r\n {\r\n     int hash_type = SIGHASH_DEFAULT;\r\n-    if (!sighash.isNull()) {\r\n+    if (sighash.has_value()) {\r\n         static std::map<std::string, int> map_sighash_values = {\r\n             {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n             {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n@@ -255,7 +255,7 @@ int ParseSighashString(const UniValue& sighash)\r\n             {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n             {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n         };\r\n-        const std::string& strHashType = sighash.get_str();\r\n+        const std::string& strHashType = sighash.value();\r\n         const auto& it = map_sighash_values.find(strHashType);\r\n         if (it != map_sighash_values.end()) {\r\n             hash_type = it->second;\r\n```\r\n\r\nThe full branch is here: https://github.com/hebasto/bitcoin/tree/230721-univalue.3.\r\n\r\nDiffs are simpler and smaller. A new helper does not depend on symbols from the `libbitcoin_consensus` library.\r\n\r\nFeel free to take it :)",
      "created_at" : "2023-07-22T06:03:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646499733",
      "id" : 1646499733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iI5eV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646499733/reactions"
      },
      "updated_at" : "2023-07-22T06:03:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646499733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 05477b5566dc6f9c3d5c9609268002c0fbe1e1aa -> 67e172a7c0d82271a13f77f76ce72799faddd05c ([kernelRmUnivalue_2](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_2) -> [kernelRmUnivalue_3](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_3),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_2..kernelRmUnivalue_3))\r\n\r\n* Got rid of the new `univalue_helpers` file again.\r\n* Refactored the first commit to move the UniValue-specific code to `rpc/util`.\r\n* Moved the logic in the second commit to `bitcoin-tx.cpp`, sacrificing the fuzz test.",
      "created_at" : "2023-07-22T09:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646544970",
      "id" : 1646544970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iJEhK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646544970/reactions"
      },
      "updated_at" : "2023-07-22T09:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646544970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 67e172a7c0d82271a13f77f76ce72799faddd05c -> b89567f51ade926af8c918e4787046b7ccec8eb0 ([kernelRmUnivalue_3](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_3) -> [kernelRmUnivalue_4](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_4),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_3..kernelRmUnivalue_4))\r\n\r\n* Fixed fuzz test by catching the UniValue exception.",
      "created_at" : "2023-07-22T18:44:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646648548",
      "id" : 1646648548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iJdzk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646648548/reactions"
      },
      "updated_at" : "2023-07-22T18:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646648548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/28113#pullrequestreview-1542134637\r\n\r\n> Do I understand you correctly that your intention is to make the ParseSighash quite generic?\r\n\r\nMaybe, but I mostly thought it might be worthwhile to keep this utility around.",
      "created_at" : "2023-07-22T20:43:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646668269",
      "id" : 1646668269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iJint",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646668269/reactions"
      },
      "updated_at" : "2023-07-22T20:43:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646668269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271496876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271496876"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "29e31d8\r\n\r\n<details><summary><code>ParseSighash()</code> suggestions</summary><p>\r\n\r\n```diff\r\n--- a/src/core_io.h\r\n+++ b/src/core_io.h\r\n@@ -47,7 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& \r\n-util::Result<int> ParseSighash(const std::optional<std::string>& sighash);\r\n+[[nodiscard]] util::Result<int> ParseSighash(const std::optional<std::string>& sighash);\r\n\r\n--- a/src/core_read.cpp\r\n+++ b/src/core_read.cpp\r\n@@ -245,7 +245,7 @@ bool ParseHashStr(const std::string& strHex, uint256& result)\r\n util::Result<int> ParseSighash(const std::optional<std::string>& sighash)\r\n {\r\n     int hash_type = SIGHASH_DEFAULT;\r\n-    if (sighash) {\r\n+    if (sighash.has_value()) {\r\n         static std::map<std::string, int> map_sighash_values = {\r\n@@ -255,11 +255,11 @@ util::Result<int> ParseSighash(const std::optional<std::string>& sighash)\r\n         };\r\n-        const auto& it = map_sighash_values.find(*sighash);\r\n+        const auto& it = map_sighash_values.find(sighash.value());\r\n         if (it != map_sighash_values.end()) {\r\n             hash_type = it->second;\r\n         } else {\r\n-            return util::Error{Untranslated(*sighash + \" is not a valid sighash parameter.\")};\r\n+            return util::Error{Untranslated(sighash.value() + \" is not a valid sighash parameter.\")};\r\n         }\r\n     }\r\n```\r\n</p></details>\r\n\r\n<details><summary>or more straightforward, dropping the <code>hash_type</code> temporary, with less nesting</summary><p>\r\n\r\n```cpp\r\nutil::Result<int> ParseSighash(const std::optional<std::string>& sighash)\r\n{\r\n    if (!sighash.has_value()) return SIGHASH_DEFAULT;\r\n    const std::map<std::string, int> map_sighash_values = {\r\n        {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n        {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n        {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n        {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n        {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n        {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n        {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n    };\r\n    const auto& it = map_sighash_values.find(sighash.value());\r\n    if (it == map_sighash_values.end()) {\r\n        return util::Error{Untranslated(sighash.value() + \" is not a valid sighash parameter.\")};\r\n    }\r\n    return it->second;\r\n}\r\n```\r\n</p></details>\r\n",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-23T17:54:18Z",
      "diff_hunk" : "@@ -265,12 +255,11 @@ int ParseSighashString(const UniValue& sighash)\n             {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\n             {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\n         };\n-        const std::string& strHashType = sighash.get_str();\n-        const auto& it = map_sighash_values.find(strHashType);\n+        const auto& it = map_sighash_values.find(*sighash);\n         if (it != map_sighash_values.end()) {\n             hash_type = it->second;\n         } else {\n-            throw std::runtime_error(strHashType + \" is not a valid sighash parameter.\");\n+            return util::Error{Untranslated(*sighash + \" is not a valid sighash parameter.\")};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271496876",
      "id" : 1271496876,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LyYCs",
      "original_commit_id" : "b89567f51ade926af8c918e4787046b7ccec8eb0",
      "original_line" : 262,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/core_read.cpp",
      "position" : null,
      "pull_request_review_id" : 1542308295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271496876/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-23T19:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271496876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271533741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271533741"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/commit/29e31d894bd8bedb55c3a5a2d4d2681ba10a9b88 this ought to be added to `core_read.cpp` too; see full iwyu suggestions at https://cirrus-ci.com/task/4627440203464704?logs=ci#L1786",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-23T18:06:18Z",
      "diff_hunk" : "@@ -6,7 +6,9 @@\n #define BITCOIN_CORE_IO_H\n \n #include <consensus/amount.h>\n+#include <util/result.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271533741",
      "id" : 1271533741,
      "line" : 9,
      "node_id" : "PRRC_kwDOABII585LyhCt",
      "original_commit_id" : "b89567f51ade926af8c918e4787046b7ccec8eb0",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 4,
      "pull_request_review_id" : 1542308295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271533741/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-23T19:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271533741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271540053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271540053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/commit/29e31d894bd8bedb55c3a5a2d4d2681ba10a9b88 (feel free to ignore) I wouldn't find review harder if the missing brackets were added\r\n\r\n```cpp\r\n    if (v.isStr()) {\r\n        strHex = v.getValStr();\r\n    }\r\n    if (!IsHex(strHex)) {\r\n         throw std::runtime_error(strName + \" must be hexadecimal string (not '\" + strHex + \"')\");\r\n    }\r\n```\r\n",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-23T18:24:28Z",
      "diff_hunk" : "@@ -562,6 +562,16 @@ static CAmount AmountFromValue(const UniValue& value)\n     return amount;\n }\n \n+static std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName)\n+{\n+    std::string strHex;\n+    if (v.isStr())\n+        strHex = v.getValStr();\n+    if (!IsHex(strHex))\n+        throw std::runtime_error(strName + \" must be hexadecimal string (not '\" + strHex + \"')\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271540053",
      "id" : 1271540053,
      "line" : 571,
      "node_id" : "PRRC_kwDOABII585LyilV",
      "original_commit_id" : "b89567f51ade926af8c918e4787046b7ccec8eb0",
      "original_line" : 571,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/bitcoin-tx.cpp",
      "position" : 10,
      "pull_request_review_id" : 1542308295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271540053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-23T19:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271540053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271543977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271543977"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/commit/29e31d894bd8bedb55c3a5a2d4d2681ba10a9b88 When storing a `Result` type, I think it's clearer to name it `result` (seems to be becoming a convention). In particular, `util::ErrorString(parsed_sighash)` is a little confusing.\r\n\r\n```cpp\r\n    const auto result{ParseSighash(sighash.isNull() ? std::nullopt : std::make_optional(sighash.get_str()))};\r\n    if (!result) {\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, util::ErrorString(result).original);\r\n    }\r\n    return result.value();\r\n```\r\n",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-23T19:00:21Z",
      "diff_hunk" : "@@ -310,6 +312,15 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return std::visit(DescribeAddressVisitor(), dest);\n }\n \n+int ParseSighashString(const UniValue& sighash)\n+{\n+    auto parsed_sighash = ParseSighash(sighash.isNull() ? std::nullopt : std::make_optional(sighash.get_str()));\n+    if (!parsed_sighash) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, util::ErrorString(parsed_sighash).original);\n+    }\n+    return parsed_sighash.value();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271543977",
      "id" : 1271543977,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Lyjip",
      "original_commit_id" : "b89567f51ade926af8c918e4787046b7ccec8eb0",
      "original_line" : 321,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1542308295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271543977/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-23T19:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271543977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated b89567f51ade926af8c918e4787046b7ccec8eb0 -> a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240 ([kernelRmUnivalue_4](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_4) -> [kernelRmUnivalue_5](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_5),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_4..kernelRmUnivalue_5))\r\n\r\n* Addressed @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271533741), fixing IWYU.\r\n* Addressed @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271543977), renaming variable holding result type.\r\n* Addressed @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1271496876), applying suggestion on optional usage.\r\n\r\nDid not apply the suggestions that would make the code moves less pure.",
      "created_at" : "2023-07-23T21:21:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646962287",
      "id" : 1646962287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iKqZv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646962287/reactions"
      },
      "updated_at" : "2023-07-23T21:48:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646962287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240\r\n",
      "created_at" : "2023-07-23T21:33:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1646964712",
      "id" : 1646964712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iKq_o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646964712/reactions"
      },
      "updated_at" : "2023-07-23T21:33:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646964712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've restarted the \"Win64 native [vs2022]\" CI task due to a remote Chocolatey issue.",
      "created_at" : "2023-07-24T08:19:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1647437043",
      "id" : 1647437043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iMeTz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647437043/reactions"
      },
      "updated_at" : "2023-07-24T08:19:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647437043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240.\r\n\r\nShould throwing `RPC_INVALID_PARAMETER` be mentioned in the release notes?",
      "created_at" : "2023-07-24T09:15:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1647528259",
      "id" : 1647528259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iM0lD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647528259/reactions"
      },
      "updated_at" : "2023-07-24T09:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647528259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272088375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272088375"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: A bit confusing that `ParseSighashString` parses a `UniValue`, and `ParseSighash` parses a `string`. Naming other way around would be more logical imo? Larger diff but perhaps worth it?",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T10:44:31Z",
      "diff_hunk" : "@@ -100,6 +100,8 @@ CTxDestination AddAndGetMultisigDestination(const int required, const std::vecto\n \n UniValue DescribeAddress(const CTxDestination& dest);\n \n+int ParseSighashString(const UniValue& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272088375",
      "id" : 1272088375,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585L0oc3",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 103,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 4,
      "pull_request_review_id" : 1543209382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272088375/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T12:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272088375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272097256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272097256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Also, perhaps a docstring to document throwing behaviour and reference `ParseSighash`? (would be okay with an unstructured one-liner too)\r\n```\r\n/**\r\n * Parse a sighash string representation\r\n *\r\n * @throws RPC_INVALID_PARAMETER if `sighash` is null or does not represent a valid sighash type.\r\n * \r\n * @see util::Result<int> ParseSighash(const std::optional<std::string>& sighash) for a less\r\n *      opinionated alternative\r\n */\r\n```",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T10:52:51Z",
      "diff_hunk" : "@@ -100,6 +100,8 @@ CTxDestination AddAndGetMultisigDestination(const int required, const std::vecto\n \n UniValue DescribeAddress(const CTxDestination& dest);\n \n+int ParseSighashString(const UniValue& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272097256",
      "id" : 1272097256,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585L0qno",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 103,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 4,
      "pull_request_review_id" : 1543209382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272097256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T12:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272097256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272119307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272119307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Making `sighash` optional seems quite verbose and unintuitive for just the one callsite that needs the default sighash. It also makes the function behave quite ambiguously (imo), returning the default if no sighash is provided, but throwing if the sighash is not recognized. Would leave that logic to the callsite?\r\n\r\n<details>\r\n<summary>git diff on a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240</summary>\r\n\r\n```diff\r\ndiff --git a/src/core_io.h b/src/core_io.h\r\nindex 551d09e021..b61ce10777 100644\r\n--- a/src/core_io.h\r\n+++ b/src/core_io.h\r\n@@ -8,7 +8,6 @@\r\n #include <consensus/amount.h>\r\n #include <util/result.h>\r\n \r\n-#include <optional>\r\n #include <string>\r\n #include <vector>\r\n \r\n@@ -47,7 +46,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\r\n  * @see ParseHashV for an RPC-oriented version of this\r\n  */\r\n bool ParseHashStr(const std::string& strHex, uint256& result);\r\n-util::Result<int> ParseSighash(const std::optional<std::string>& sighash);\r\n+util::Result<int> ParseSighash(const std::string& sighash);\r\n \r\n // core_write.cpp\r\n UniValue ValueFromAmount(const CAmount amount);\r\ndiff --git a/src/core_read.cpp b/src/core_read.cpp\r\nindex 638cb23bf4..c08af827f9 100644\r\n--- a/src/core_read.cpp\r\n+++ b/src/core_read.cpp\r\n@@ -15,7 +15,6 @@\r\n #include <version.h>\r\n \r\n #include <algorithm>\r\n-#include <optional>\r\n #include <string>\r\n \r\n namespace {\r\n@@ -243,25 +242,21 @@ bool ParseHashStr(const std::string& strHex, uint256& result)\r\n     return true;\r\n }\r\n \r\n-util::Result<int> ParseSighash(const std::optional<std::string>& sighash)\r\n+util::Result<int> ParseSighash(const std::string& sighash)\r\n {\r\n-    int hash_type = SIGHASH_DEFAULT;\r\n-    if (sighash.has_value()) {\r\n-        static std::map<std::string, int> map_sighash_values = {\r\n-            {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n-            {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n-            {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n-            {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n-            {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n-            {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n-            {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n-        };\r\n-        const auto& it = map_sighash_values.find(sighash.value());\r\n-        if (it != map_sighash_values.end()) {\r\n-            hash_type = it->second;\r\n-        } else {\r\n-            return util::Error{Untranslated(sighash.value() + \" is not a valid sighash parameter.\")};\r\n-        }\r\n+    static std::map<std::string, int> map_sighash_values = {\r\n+        {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n+        {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n+        {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n+        {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n+        {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n+        {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n+        {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n+    };\r\n+    const auto& it = map_sighash_values.find(sighash);\r\n+    if (it != map_sighash_values.end()) {\r\n+        return it->second;\r\n+    } else {\r\n+        return util::Error{Untranslated(sighash + \" is not a valid sighash parameter.\")};\r\n     }\r\n-    return hash_type;\r\n }\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex d484c4de6d..998e968344 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -10,6 +10,7 @@\r\n #include <outputtype.h>\r\n #include <rpc/util.h>\r\n #include <script/descriptor.h>\r\n+#include <script/interpreter.h>\r\n #include <script/signingprovider.h>\r\n #include <tinyformat.h>\r\n #include <util/check.h>\r\n@@ -314,7 +315,8 @@ UniValue DescribeAddress(const CTxDestination& dest)\r\n \r\n int ParseSighashString(const UniValue& sighash)\r\n {\r\n-    const auto result{ParseSighash(sighash.isNull() ? std::nullopt : std::make_optional(sighash.get_str()))};\r\n+    if (sighash.isNull()) return SIGHASH_DEFAULT;\r\n+    const auto result{ParseSighash(sighash.get_str())};\r\n     if (!result) {\r\n         throw JSONRPCError(RPC_INVALID_PARAMETER, util::ErrorString(result).original);\r\n     }\r\n\r\n```\r\n</details>",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T11:12:35Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272119307",
      "id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L0wAL",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543209382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272119307/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T12:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272119307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272207260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272207260"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The optional behavior was requested by @hebasto to isolate the sighash-specific logic from the univalue-specific logic. Could just add a docstring instead to the `ParseSighash` function?",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T12:38:41Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272207260",
      "id" : 1272207260,
      "in_reply_to_id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L1Fec",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543399847,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272207260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T12:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272207260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272218244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272218244"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that comment was from when we still had the univalue helpers? \r\n\r\nNow, we have a string parsing function (in `core_read.cpp`) and an rpc helper function (in `rpc/util.cpp`). The string parsing, imo, should do just that, and the rpc helper can inject rpc-specific logic, being that 1) we like using UniValues in the RPC and that 2) for all rpcs, we prefer to interpret missing sighash as SIGHASH_DEFAULT. I don't think it's ideal to make the string parsing opinionated.\r\n\r\nEdit: but I'm willing to see past it if you feel like changing this will not be good for the PRs progress. It just feels like a bit of a code smell to me.",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T12:48:53Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272218244",
      "id" : 1272218244,
      "in_reply_to_id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L1IKE",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543416878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272218244/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T12:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272218244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272238862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272238862"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Btw if the main concern is with `#include <script/interpreter.h>` in `rpc/util.cpp`, can avoid that by just calling `ParseSighash(\"DEFAULT\")` too.",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T13:06:45Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272238862",
      "id" : 1272238862,
      "in_reply_to_id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L1NMO",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543449993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272238862/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T13:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272238862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272315181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272315181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Btw if the main concern is with `#include <script/interpreter.h>` in `rpc/util.cpp`, can avoid that by just calling `ParseSighash(\"DEFAULT\")` too.\r\n\r\n\r\nUsing string literals scattered across the code seems fragile. In this PR branch @ a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240, we already have two places:\r\n- `sighashOptions` in `bitcoin-tx.cpp`, and\r\n- `ParseSighash` in `core_read.cpp`\r\n\r\nI'd avoid multiplying such cases. We'd better to refactor code (as a follow up) out into a dedicated structure/function.",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T14:06:02Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272315181",
      "id" : 1272315181,
      "in_reply_to_id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L1f0t",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543571728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272315181/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T14:08:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272315181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272543807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272543807"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree generally with @stickies-v. The optional param makes no sense because the caller... knows if it has a value :)\r\n\r\nBut that wonkiness aside, this is also now an outlier compared to the surrounding functions (though the param order is inconsistent among them, sigh):\r\n```c++\r\n[[nodiscard]] bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\r\nbool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\r\nbool ParseHashStr(const std::string& strHex, uint256& result);\r\n```\r\n\r\nLooking at those, I'd expect to see:\r\n```c++\r\n[[nodiscard]] bool ParseSighash(const std::string& sighash, int& result);\r\n```\r\nAnd after implementing it in-place, that function has a messy control-flow with returns that are hard to follow. I took a stab at implementing both \"cleanly\" compared to the rest of the code, as opposed to inheriting the univalue baggage.\r\n\r\nCompletely untested. Feel free to take it or leave it:\r\n\r\n```c++\r\n[[nodiscard]] bool ParseSighash(const std::string& sighash, int& result);\r\nbool ParseSighash(const std::string& sighash, int& result)\r\n{\r\n    result = SIGHASH_DEFAULT;\r\n    if (sighash.empty())\r\n        return true;\r\n\r\n    static std::map<std::string, int> map_sighash_values = {\r\n        {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\r\n        {std::string(\"ALL\"), int(SIGHASH_ALL)},\r\n        {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\r\n        {std::string(\"NONE\"), int(SIGHASH_NONE)},\r\n        {std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY)},\r\n        {std::string(\"SINGLE\"), int(SIGHASH_SINGLE)},\r\n        {std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY)},\r\n    };\r\n    const auto& it = map_sighash_values.find(sighash);\r\n    if (it != map_sighash_values.end()) {\r\n        result = it->second;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n```\r\n---\r\n```c++\r\nint ParseSighashString(const UniValue& sighash)\r\n{\r\n    std::string hashstr = {};\r\n    if (!sighash.isNull()) {\r\n        hashstr = sighash.get_str();\r\n    }\r\n    int result;\r\n    if (!ParseSighash(hashstr, result)) {\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%u is not a valid sighash parameter.\", result));\r\n    }\r\n    return result;\r\n}\r\n```",
      "commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "created_at" : "2023-07-24T17:20:32Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272543807",
      "id" : 1272543807,
      "in_reply_to_id" : 1272119307,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585L2Xo_",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : 16,
      "pull_request_review_id" : 1543931377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272543807/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T17:23:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272543807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240 -> 42233bea28f6f7c464f0cd6499d675e81b3e8512 ([kernelRmUnivalue_5](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_5) -> [kernelRmUnivalue_6](https://github.com/TheCharlatan/bitcoin/tree/kernelRmUnivalue_6),  [compare](https://github.com/TheCharlatan/bitcoin/compare/kernelRmUnivalue_5..kernelRmUnivalue_6))\r\n\r\n* Addressed @stickies-v's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272218244), pushing the handling of the default back to the function in `rpc/util.cpp`.\r\n* Addressed @stickies-v's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272088375), renaming the function in `core_read.cpp` to `SighashFromStr`. There is already a function `SighashToStr` defined in `core_io.h`, so I thought having a corresponding declaration makes sense. \r\n* Added `[[nodiscard]]` qualifier to `SighashFromStr`.\r\n* Addressed @stickies-v's [comment](https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272097256), but only added a shorter docstring to `ParseSighashString`.\r\n\r\n",
      "created_at" : "2023-07-24T18:45:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#issuecomment-1648426036",
      "id" : 1648426036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28113",
      "node_id" : "IC_kwDOABII585iQPw0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1648426036/reactions"
      },
      "updated_at" : "2023-07-24T18:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1648426036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272628943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272628943"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni, I did not go with your suggestion, but instead opted to move the weird default handling to the calling function. I feel like that should be the caller's responsibility. Also did not go with the out result type, since the function signatures are not really consistent to begin with, and we don't have an out result for the corresponding `SighashToStr` function either.",
      "commit_id" : "42233bea28f6f7c464f0cd6499d675e81b3e8512",
      "created_at" : "2023-07-24T18:48:01Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272628943",
      "id" : 1272628943,
      "in_reply_to_id" : 1272119307,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585L2sbP",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : null,
      "pull_request_review_id" : 1544065009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272628943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T18:48:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272628943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272674822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272674822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like this, thanks! It just looks like a more modern version of the other functions. I also like that the weird no-value case is handled at the JSON layer instead. That's indeed cleaner than what I suggested.",
      "commit_id" : "42233bea28f6f7c464f0cd6499d675e81b3e8512",
      "created_at" : "2023-07-24T19:39:03Z",
      "diff_hunk" : "@@ -45,8 +47,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  * @see ParseHashV for an RPC-oriented version of this\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n-std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-int ParseSighashString(const UniValue& sighash);\n+util::Result<int> ParseSighash(const std::optional<std::string>& sighash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272674822",
      "id" : 1272674822,
      "in_reply_to_id" : 1272119307,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585L23oG",
      "original_commit_id" : "a3774d1b2a5ce9aa6d6d3cedc2c9b9a5d2f68240",
      "original_line" : 50,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : null,
      "pull_request_review_id" : 1544137588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272674822/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T19:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272674822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272685574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272685574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Woohoo!",
      "commit_id" : "42233bea28f6f7c464f0cd6499d675e81b3e8512",
      "created_at" : "2023-07-24T19:50:48Z",
      "diff_hunk" : "@@ -896,8 +896,8 @@ if BUILD_BITCOIN_KERNEL_LIB\n lib_LTLIBRARIES += $(LIBBITCOINKERNEL)\n \n libbitcoinkernel_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS) $(PTHREAD_FLAGS)\n-libbitcoinkernel_la_LIBADD = $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1)\n-libbitcoinkernel_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT)\n+libbitcoinkernel_la_LIBADD = $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28113#discussion_r1272685574",
      "id" : 1272685574,
      "line" : 899,
      "node_id" : "PRRC_kwDOABII585L26QG",
      "original_commit_id" : "42233bea28f6f7c464f0cd6499d675e81b3e8512",
      "original_line" : 899,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/Makefile.am",
      "position" : 6,
      "pull_request_review_id" : 1544154683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272685574/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-24T19:51:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272685574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
