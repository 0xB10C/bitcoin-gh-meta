[
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake I'm trying to reproduce. Can you provide the options you used when building?",
      "created_at" : "2018-12-04T12:43:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14839#issuecomment-444086842",
      "id" : 444086842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDA4Njg0Mg==",
      "updated_at" : "2018-12-04T12:43:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444086842",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag You're right, but that's a little over-simplified :).\r\nSCHED_BATCH is non-standard, so it's not immediately clear if the optional fields would override any current thread params. Also, other libc's may have additional non-standard fields.\r\n\r\nThe two major pthread implementations in question:\r\n- [glibc's pthread_setschedparam](https://sourceware.org/git/?p=glibc.git;a=blob;f=nptl/pthread_setschedparam.c#l27) just forwards the struct\r\n- [musl's pthread_setschedparam](https://git.musl-libc.org/cgit/musl/tree/src/thread/pthread_setschedparam.c#n4) also just forwards the struct\r\n\r\nSince SCHED_BATCH is Linux-specific, and the Linux kernel [discards everything other than priority and policy](https://github.com/torvalds/linux/blob/master/kernel/sched/core.c#L4357), we know that no libc-specific sched_param members will be used. So the my proposed change was overly paranoid. All we really need to do is zero the whole struct rather than just the first member to silence the warnings:\r\n```patch\r\ndiff --git a/src/util/system.cpp b/src/util/system.cpp\r\nindex 8e201ec..4309da3 100644\r\n--- a/src/util/system.cpp\r\n+++ b/src/util/system.cpp\r\n@@ -1293,7 +1293,7 @@ fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific)\r\n int ScheduleBatchPriority()\r\n {\r\n #ifdef SCHED_BATCH\r\n-    const static sched_param param{0};\r\n+    const static sched_param param{};\r\n     if (int ret = pthread_setschedparam(pthread_self(), SCHED_BATCH, &param)) {\r\n         LogPrintf(\"Failed to pthread_setschedparam: %s\\n\", strerror(errno));\r\n         return ret;\r\n```",
      "created_at" : "2018-12-06T21:58:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14839#issuecomment-445044911",
      "id" : 445044911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTA0NDkxMQ==",
      "updated_at" : "2018-12-06T21:58:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445044911",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
