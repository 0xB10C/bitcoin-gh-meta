[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Making CPFP work better, and making small mempools work better while avoiding DoS risks and complications from updating the P2P protocol is an important thing to work on even if no one immediately benefits from changes right now.\r\n\r\nBut the design space is so huge that it would probably help to propose a concrete change or set of changes if you want feedback, so there is something to start thinking concretely about and respond to. Even very rough or strawman proposals could be good starting points.",
      "created_at" : "2019-04-10T18:37:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-481812073",
      "id" : 481812073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTgxMjA3Mw==",
      "updated_at" : "2019-04-10T18:37:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481812073",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The final goal seems far out to achieve and I believe suhas has started working on some intermediate milestones that would already come with advantages (such as getting rid of the shared mapRelay, IIRC).",
      "created_at" : "2019-04-10T18:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-481814139",
      "id" : 481814139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTgxNDEzOQ==",
      "updated_at" : "2019-04-10T18:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481814139",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Think receiver-initiator is probably better, but you could possibly do sender-initiated package relay by saying \"is this tx's feerate > parent's fee rate, and is parent's fee rate < peer's announced minfee cutoff\". Don't see how you could make sender-initiator work without p2p changes though.\r\n\r\nIt sounds like we could get the simplest case (one tx doing CPFP for one or more others, but no grandparents, and immediately getting them all into the top 2 or 3 MB of mempool) without p2p changes, just by noticing you don't have the parents, requesting them, and handling the new tx and any requested parents as a package. Might be a good phase 1.\r\n\r\n(EDIT: had written receiver-initiator where I meant sender-initiator)",
      "created_at" : "2019-05-16T20:57:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-493229524",
      "id" : 493229524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzIyOTUyNA==",
      "updated_at" : "2019-06-07T11:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493229524",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For context, I am responding to this in the spirit of \"PR shepherd\" as discussed the previous day. Given this \"PR\" (Issue) is on the high priority list, I have prioritized taking a look.\r\n\r\nMy read of the status of this Issue is as follows:\r\n- the author has stated a motivation, a set of design questions, and a discussion of how to think about the design.\r\n- commenters have requested a specific design to review and (N)ACK\r\n- it has now been added to the high priority list chasing a Concept ACK\r\n\r\nIf we were to adopt the new language separating Concept ACK and Design ACK (#16149), then it seems this Issue is ready for Concept (N)ACKs, but not Design (N)ACKs. Given the current process which combines Concept and Design, then it seems like this Issue needs the author to propose a concrete design.\r\n\r\n@sdaftuar can you clarify whether you're seeking a Concept ACK in order to proceed to defining a specific design?\r\n\r\n@ryanofsky, @MarcoFalke, @ajtowns assuming we are just seeking Concept (not Design) ACK, do you have the information needed to weigh in?",
      "created_at" : "2019-06-06T12:57:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-499482277",
      "id" : 499482277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTQ4MjI3Nw==",
      "updated_at" : "2019-06-06T20:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499482277",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/326147?v=4",
         "events_url" : "https://api.github.com/users/moneyball/events{/privacy}",
         "followers_url" : "https://api.github.com/users/moneyball/followers",
         "following_url" : "https://api.github.com/users/moneyball/following{/other_user}",
         "gists_url" : "https://api.github.com/users/moneyball/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/moneyball",
         "id" : 326147,
         "login" : "moneyball",
         "node_id" : "MDQ6VXNlcjMyNjE0Nw==",
         "organizations_url" : "https://api.github.com/users/moneyball/orgs",
         "received_events_url" : "https://api.github.com/users/moneyball/received_events",
         "repos_url" : "https://api.github.com/users/moneyball/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/moneyball/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/moneyball/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/moneyball"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@moneyball Thanks for the nudge and taking a look here.\r\n\r\nI do have a strawman proposal for a p2p protocol change in support of package relay that I wrote up a while ago: https://gist.github.com/sdaftuar/8756699bfcad4d3806ba9f3396d4e66a\r\n\r\nMy intuition right now is that we can make package acceptance much easier to reason about if the recipient of an orphan transaction can ask a peer for the unconfirmed parents of a given transaction, which should be sent back in topological order.\r\n\r\nTo make progress on this project, I'm breaking up this work into several steps:\r\n\r\n1) Refactor the mempool acceptance logic to support a concept of \"package acceptance\", which would be motivated by better orphan handling (for instance, maybe we can take some simple case, like a transaction missing exactly 1 parent, and process the two transactions together as a package).  I expect that refactoring the mempool in this way to be major work and require careful review.\r\n\r\n2) Once that mempool refactor has been done, then I think we could propose a p2p protocol change (such as my above proposal, or some other more efficient or more clever proposal if anyone has a better idea).\r\n\r\nI'd love feedback on whether this path seems reasonable, or also if someone has a better idea of how to achieve the end result.",
      "created_at" : "2019-06-06T15:18:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-499540137",
      "id" : 499540137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTU0MDEzNw==",
      "updated_at" : "2019-06-06T15:18:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499540137",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK I think -- splitting mempool acceptance and being able to submit a package as a single unit seems plausible; and doing that before p2p changes also seems plausible. I think we ought to be able to break out smaller useful pieces as we go along though.",
      "created_at" : "2019-06-07T11:08:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-499846099",
      "id" : 499846099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTg0NjA5OQ==",
      "updated_at" : "2019-06-07T11:08:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499846099",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking forward to more progress on this one. I'm skeptical that the ATMP refactor is as bad as you think, but it does have cost in terms of additional complexity there. Definitely worth it, though, and I'd appreciate even a first step with only 1 parent as that would have real benefits for some users.",
      "created_at" : "2019-06-20T17:06:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-504106403",
      "id" : 504106403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNDEwNjQwMw==",
      "updated_at" : "2019-06-20T17:06:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504106403",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\nI think this is a must-have feature in the p2p layer, and I have a feeling that code won't become much less intuitive.\r\n\r\nI think it's a good timing for introducing new p2p messages: the problem is not severe at the moment and it's not that bad if old nodes don't get the benefit. \r\nHowever, there might be an issue if we start to *rely* on this assumption real soon (e.g., imagine a lot of people start closing lightning channels with low fees). I don't know how to justify this part.\r\n\r\nBtw, I believe a scenario similar to what Matt send to the mailing list: multi-sig transactions or coinjoins which take a while to prepare. While collecting signatures, fee market might change a lot, and cpfp might happen quite often (if not overpaying a lot by default).",
      "created_at" : "2019-06-20T20:13:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-504166091",
      "id" : 504166091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNDE2NjA5MQ==",
      "updated_at" : "2019-06-20T20:13:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504166091",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I had a thought about looking at the problem from a slightly different angle. What if instead of **Child Pays For Parent** we think of it as **Parent Discounts Child**? \r\n\r\nThen we can keep a limited set of non-relayable \"waiting-state\" parents and include their feerate (represented by a pair of `(fee, weight)`). Every time another candidate tx arrives, its effective fee rate is computed as âfee/âweight over all its \"waiting-state\" ancestors. In other words, all ancestors discount the feerate of the new candidate. If such effective feerate is over the threshold, then such tx and all its waiting ancestors are marked as \"accepted\" and now can be relayed.\r\n\r\nIf there is an overlapping subgraph (because some waiting ancestor has 2+ outputs) and the common ancestor transitions from _waiting_ to _accepted_, we need to recursively follow the known descendants and re-calculate their feerates so they are not discounted anymore. Since some of them can become acceptable themselves, the process should probably consist of two phases: update the feerates downstream, then try to accept the updated waiting txs.\r\n\r\nDoes this make sense?\r\n\r\n",
      "created_at" : "2020-01-23T17:19:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-577781457",
      "id" : 577781457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3Nzc4MTQ1Nw==",
      "updated_at" : "2020-01-23T17:19:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577781457",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/698?v=4",
         "events_url" : "https://api.github.com/users/oleganza/events{/privacy}",
         "followers_url" : "https://api.github.com/users/oleganza/followers",
         "following_url" : "https://api.github.com/users/oleganza/following{/other_user}",
         "gists_url" : "https://api.github.com/users/oleganza/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/oleganza",
         "id" : 698,
         "login" : "oleganza",
         "node_id" : "MDQ6VXNlcjY5OA==",
         "organizations_url" : "https://api.github.com/users/oleganza/orgs",
         "received_events_url" : "https://api.github.com/users/oleganza/received_events",
         "repos_url" : "https://api.github.com/users/oleganza/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/oleganza/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/oleganza/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/oleganza"
      }
   }
]
