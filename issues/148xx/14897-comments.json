[
   {
      "author_association" : "MEMBER",
      "body" : "I'm strongly in support of doing something about this. \r\n\r\nBut instead, why not  do something like:  for each tx keep a next-time and ordered data structure, sorted on ( outbound, nonce) where nonce is just selected at random when the inv is processed.\r\n\r\nThen after each run of the message handling loop, after processing messages from all peers. go through the txn and for every tx with a next-time in the past, pop the best element from the list and query its peer, then update the next time.\r\n\r\nThis way there is even a decent chance that you do not fetch the txn from the first to offer it to you, you fetch in random order, and fetch from outpeers first if there are any outstanding offer.",
      "created_at" : "2018-12-08T04:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445430340",
      "id" : 445430340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzMDM0MA==",
      "updated_at" : "2018-12-08T04:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445430340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell My implementation was supposed to have minimum intrusion in other parts of the code, but now when you suggested an alternative it seems not much code too. I'll update my PR soon.",
      "created_at" : "2018-12-08T05:59:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445434264",
      "id" : 445434264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNDI2NA==",
      "updated_at" : "2018-12-08T05:59:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445434264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.Reviewers, this pull request conflicts with the following ones:\n\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-08T06:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445436633",
      "id" : 445436633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNjYzMw==",
      "updated_at" : "2018-12-21T02:12:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445436633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Awesome, if you find that implementing something else actually does turn out to be complicated, please feel free to loop back.  I asked in part because it didn't _seem_ like it would be much more complicated, but the devil is in the details.  I think what you propose here sounds better than nothing, but I think we can probably bypass the half-measure. :)",
      "created_at" : "2018-12-08T20:42:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445488406",
      "id" : 445488406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQ4ODQwNg==",
      "updated_at" : "2018-12-08T20:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445488406",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe use the internal random functions here (`GetRand()`)?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-09T23:05:49Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192",
      "id" : 240058192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDA1ODE5Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 74,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 182999927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work!\r\nConcept ACK.",
      "created_at" : "2018-12-09T23:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445580678",
      "id" : 445580678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTU4MDY3OA==",
      "updated_at" : "2018-12-09T23:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445580678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135053"
         }
      },
      "author_association" : "NONE",
      "body" : "Using something like `randrange` would be even better",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T09:28:17Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135053",
      "id" : 240135053,
      "in_reply_to_id" : 240058192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEzNTA1Mw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 74,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183092381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135053",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135562"
         }
      },
      "author_association" : "NONE",
      "body" : "I think this name is way too generic. Maybe `GETDATA_TIMEOUT`?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T09:29:44Z",
      "diff_hunk" : "@@ -88,6 +88,11 @@ static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n+// time between GETDATA requests to different peers\n+static const int64_t TX_TIMEOUT = 60 * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135562",
      "id" : 240135562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEzNTU2Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 14,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 183093021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240159098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240159098"
         }
      },
      "author_association" : "NONE",
      "body" : "I find this block and especially this line barely readable. All those `peerToAsk->second.first`...\r\nMaybe you can at least consider extracting some variables and giving them proper names?\r\n\r\nFor example `tx->first` is `tx_hash`. \r\n`tx-second` is a `timeout` and so on.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T10:36:59Z",
      "diff_hunk" : "@@ -2065,6 +2066,22 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            if (tx->second > nNow)\n+                continue;\n+\n+            std::multimap<int, std::pair<CNode*, CInv>> peersToAskTx = tx_to_ask_from.find(tx->first)->second;\n+            std::multimap<int, std::pair<CNode*, CInv>>::iterator peerToAsk = peersToAskTx.begin();\n+            if (peerToAsk != peersToAskTx.end()) {\n+                peerToAsk->second.first->scheduled_asks.insert(peerToAsk->second.second);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240159098",
      "id" : 240159098,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE1OTA5OA==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183121612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240159098",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240163117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240163117"
         }
      },
      "author_association" : "NONE",
      "body" : "Can this `CNode*` pointer dangle?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T10:49:14Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240163117",
      "id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE2MzExNw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 183126588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240163117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240166538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240166538"
         }
      },
      "author_association" : "NONE",
      "body" : "Besides, neither comment nor the variable name mention unit. I guess those are microseconds, but still...",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T11:00:09Z",
      "diff_hunk" : "@@ -88,6 +88,11 @@ static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n+// time between GETDATA requests to different peers\n+static const int64_t TX_TIMEOUT = 60 * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240166538",
      "id" : 240166538,
      "in_reply_to_id" : 240135562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE2NjUzOA==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 14,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 183130907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240166538",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240172301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240172301"
         }
      },
      "author_association" : "NONE",
      "body" : "I am a bit confused: \r\nSo here if a node is inbound - it's priority is bound by OUTBOUND_ASK_PRIORITY,\r\nand if it is outbound - you add OUTBOUND_ASK_PRIORITY one more time.\r\n\r\nSo outbound nodes will have higher priority value, right? \r\n\r\nBut then in \r\n`std::multimap<int, std::pair<CNode*, CInv>>::iterator peerToAsk = peersToAskTx.begin();`\r\nYou take the node with lowest priority?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T11:20:08Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;\n+    if (!fInbound) {\n+        priority += OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240172301",
      "id" : 240172301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE3MjMwMQ==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183137952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240172301",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240287543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240287543"
         }
      },
      "author_association" : "NONE",
      "body" : "oops. You are right.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T16:41:19Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;\n+    if (!fInbound) {\n+        priority += OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240287543",
      "id" : 240287543,
      "in_reply_to_id" : 240172301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDI4NzU0Mw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183282656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240287543",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240316792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240316792"
         }
      },
      "author_association" : "NONE",
      "body" : "It seems CNode constructor is deleted, and using a pointer is widely used across the codebase. What exactly would you suggest?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T17:58:56Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240316792",
      "id" : 240316792,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDMxNjc5Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 183319213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240316792",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240343501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240343501"
         }
      },
      "author_association" : "NONE",
      "body" : "I asked because I wasn't able to figure out if this is a problem during my initial review: \r\nif we put some node to this map and this node disconnects after. What will happen?\r\n\r\nRight now I can't check it. Will look tomorrow more thoroughly. \r\nI also have a solution in case pointers can dangle - you can use `NodeId`. And then when you need actual pointer to `CNode` query it from `CConnman`.\r\n\r\nBTW, thanks for extracted variables. It is much better now!\r\n\r\n\r\n",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T19:14:58Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240343501",
      "id" : 240343501,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDM0MzUwMQ==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 183352609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240343501",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240366097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240366097"
         }
      },
      "author_association" : "NONE",
      "body" : "That's indeed a good idea.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-10T20:21:45Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240366097",
      "id" : 240366097,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDM2NjA5Nw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 183380983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240366097",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240477325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240477325"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm not sure why this magic is still necessary, as well as I'm not sure whether we need microseconds here",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-11T05:28:18Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240477325",
      "id" : 240477325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQ3NzMyNQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : 76,
      "pull_request_review_id" : 183515358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:28:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240477325",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242184732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242184732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you should initialize this with nullptr.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-17T15:11:24Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            int64_t next_ask_time = tx->second;\n+            if (next_ask_time > nNow)\n+                continue;\n+\n+            uint256 tx_hash = tx->first;\n+            std::multimap<int, std::pair<CNode*, CInv>> peers_to_ask_tx = tx_to_ask_from.find(tx_hash)->second;\n+            std::multimap<int, std::pair<CNode*, CInv>>::iterator peer_to_ask = peers_to_ask_tx.begin();\n+            // Make sure that queried peer is not disconnected\n+            CNode* peer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242184732",
      "id" : 242184732,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjE4NDczMg==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 24,
      "path" : "src/net.cpp",
      "position" : 24,
      "pull_request_review_id" : 185636386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-17T15:11:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242184732",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242565737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242565737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment was marked resolved but I think the review comment still hasn't been addressed -- I think it'd be better to store a `NodeId` rather than a `CNode *` inside this structure, to avoid concerns around the locking of CNode's and potentially dereferencing a deleted object.\r\n\r\nAlso could you add a comment explaining what is being stored in this map?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T14:49:10Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242565737",
      "id" : 242565737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU2NTczNw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242565737",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242567478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242567478"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All the code added in this chunk strikes me as logic that belongs in the `SendMessages()` function in `net_processing.cpp`, rather than in the message handling thread.\r\n\r\nThe split between what we do in `net.cpp` and what we do in `net_processing.cpp` isn't crystal clear, but my general sense is that we try to do application level behaviors in `net_processing.cpp`, and generic/low-level network logic in `net.cpp`.  When there's spillover between the two (such as when we need to store data in a `CNode` that feels like it belongs in `CNodeState` but for some reason it's tricky to do), then the split tends to be that `net.cpp` just handles the data storage, while the logic that uses it is in `net_processing.cpp`.\r\n\r\nSo adding logic directly to `ThreadMessageHandler` makes me vaguely uncomfortable -- the locking around CNode's can be tricky to get right, and so doing application-level things in here feels like the wrong design.\r\n\r\nI actually wonder if we could move all this transaction request logic (including the per-peer and per-txid storage) to be in `net_processing.cpp`, and do this all with `CNodeState`, rather than have inv storage kept in `CNode`?  If that's achievable, I think that would be a win overall.\r\n\r\n@TheBlueMatt or @theuni -- care to agree/disagree with what I wrote?\r\n",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T14:53:12Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242567478",
      "id" : 242567478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU2NzQ3OA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 14,
      "path" : "src/net.cpp",
      "position" : 14,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242567478",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242572079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242572079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Storing a `CNode *` and doing an `AddRef` seems risky to me -- I think it's better to store a NodeId and do a lookup to see if the peer is still around.  Otherwise, it's possible for a CNode object to live on even after a peer has disconnected, potentially for a long time?  And in general reasoning about the lifetime of these objects is already a little tricky, so I think we should avoid adding more complexity to it.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T15:04:12Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    // Peers with lower priority are queried earlier\n+    int priority = GetRandInt(OUTBOUND_ASK_MAX_INFERIORITY - 1);\n+    if (fInbound) {\n+        priority += OUTBOUND_ASK_MAX_INFERIORITY;\n+    }\n+\n+    tx_to_ask_from[inv.hash].insert(std::make_pair(priority, std::make_pair(this, inv)));\n+    AddRef();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242572079",
      "id" : 242572079,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3MjA3OQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 94,
      "path" : "src/net.cpp",
      "position" : 94,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242572079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242578580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242578580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was wondering if we should bake in a delay if we receive a new transaction for the first time from an inbound peer?  It seems like if we want to give some window for an outbound peer to jump the queue before we make a getdata request to an inbound peer, then we might as well make that window more explicit, rather than leave it to the timing of the message handling thread.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T15:19:55Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242578580",
      "id" : 242578580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3ODU4MA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 85,
      "path" : "src/net.cpp",
      "position" : 85,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242578580",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242686938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242686938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Erasing from `tx_to_ask_from` would mean that we will forget all the other peers who have announced this transaction to us as well, and not be able to request it anymore?  I think we shouldn't do that until after the transaction has been accepted to our mempool (or maybe is in our orphan map).  Otherwise an adversary could blind us to a segwit transaction by announcing a tx first, waiting a reasonable amount of time for other peers to announce, and then delivering a malleated version.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T20:06:17Z",
      "diff_hunk" : "@@ -2210,8 +2210,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         bool fMissingInputs = false;\n         CValidationState state;\n \n-        pfrom->setAskFor.erase(inv.hash);\n-        mapAlreadyAskedFor.erase(inv.hash);\n+        pfrom->ask_set.erase(inv);\n+        tx_to_ask.erase(inv.hash);\n+        tx_to_ask_from.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242686938",
      "id" : 242686938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY4NjkzOA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 17,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242686938",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242691483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242691483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The comment above this line should be updated for the new variable name.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T20:20:28Z",
      "diff_hunk" : "@@ -69,7 +69,7 @@ static const bool DEFAULT_UPNP = false;\n /** The maximum number of entries in mapAskFor */\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n /** The maximum number of entries in setAskFor (larger due to getdata latency)*/\n-static const size_t SETASKFOR_MAX_SZ = 2 * MAX_INV_SZ;\n+static const size_t ASKSET_MAX_SZ = 2 * MAX_INV_SZ;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242691483",
      "id" : 242691483,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MTQ4Mw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 5,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242691483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242692171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242692171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we need to make this `std::multimap<...>& peers_to_ask_tx` to avoid a copy?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T20:22:54Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            int64_t next_ask_time = tx->second;\n+            if (next_ask_time > nNow)\n+                continue;\n+\n+            uint256 tx_hash = tx->first;\n+            std::multimap<int, std::pair<CNode*, CInv>> peers_to_ask_tx = tx_to_ask_from.find(tx_hash)->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242692171",
      "id" : 242692171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MjE3MQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 21,
      "path" : "src/net.cpp",
      "position" : 21,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242692171",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps update this comment to explain what is in this map exactly?  I think it's txid -> next request time in micros?",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T20:27:31Z",
      "diff_hunk" : "@@ -536,7 +541,13 @@ extern bool fDiscover;\n extern bool fListen;\n extern bool fRelayTxes;\n \n-extern limitedmap<uint256, int64_t> mapAlreadyAskedFor;\n+// keeps track of all received INVs for which TX not received",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693563",
      "id" : 242693563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MzU2Mw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 26,
      "path" : "src/net.h",
      "position" : 26,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693563",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693745"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also here, would be nice to have the comment explain exactly what the fields in the map are.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-18T20:28:07Z",
      "diff_hunk" : "@@ -536,7 +541,13 @@ extern bool fDiscover;\n extern bool fListen;\n extern bool fRelayTxes;\n \n-extern limitedmap<uint256, int64_t> mapAlreadyAskedFor;\n+// keeps track of all received INVs for which TX not received\n+extern limitedmap<uint256, int64_t> tx_to_ask;\n+\n+// peers are ordered randomly with a bias towards outbound\n+// need CInv inside to distinguish segwit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693745",
      "id" : 242693745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5Mzc0NQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 30,
      "path" : "src/net.h",
      "position" : 30,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-18T20:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693745",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243020650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243020650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that stuff has no business being in net, its only currently there for historical reasons, if there's an opportunity to move it to net_processing, we should.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-19T18:10:47Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243020650",
      "id" : 243020650,
      "in_reply_to_id" : 242567478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzAyMDY1MA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 14,
      "path" : "src/net.cpp",
      "position" : 14,
      "pull_request_review_id" : 186679424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-19T18:10:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243020650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243048621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243048621"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If an adversary were to blast us with huge INV messages, then I think they could take over this data structure, and blind us to all other transactions -- once a txid leaves `tx_to_ask` I think we'll never request it?\r\n\r\nAlso, I think this is one way that `tx_to_ask` and `tx_to_ask_from` could get out of sync which looks like it would cause a memory leak.",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-19T19:37:53Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243048621",
      "id" : 243048621,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzA0ODYyMQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 186714775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-19T19:37:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243048621",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
