[
   {
      "author_association" : "MEMBER",
      "body" : "I'm strongly in support of doing something about this. \r\n\r\nBut instead, why not  do something like:  for each tx keep a next-time and ordered data structure, sorted on ( outbound, nonce) where nonce is just selected at random when the inv is processed.\r\n\r\nThen after each run of the message handling loop, after processing messages from all peers. go through the txn and for every tx with a next-time in the past, pop the best element from the list and query its peer, then update the next time.\r\n\r\nThis way there is even a decent chance that you do not fetch the txn from the first to offer it to you, you fetch in random order, and fetch from outpeers first if there are any outstanding offer.",
      "created_at" : "2018-12-08T04:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445430340",
      "id" : 445430340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzMDM0MA==",
      "updated_at" : "2018-12-08T04:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445430340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell My implementation was supposed to have minimum intrusion in other parts of the code, but now when you suggested an alternative it seems not much code too. I'll update my PR soon.",
      "created_at" : "2018-12-08T05:59:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445434264",
      "id" : 445434264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNDI2NA==",
      "updated_at" : "2018-12-08T05:59:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445434264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14605](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14605.html) (Return of the Banman by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-08T06:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445436633",
      "id" : 445436633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNjYzMw==",
      "updated_at" : "2018-12-08T06:42:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445436633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Awesome, if you find that implementing something else actually does turn out to be complicated, please feel free to loop back.  I asked in part because it didn't _seem_ like it would be much more complicated, but the devil is in the details.  I think what you propose here sounds better than nothing, but I think we can probably bypass the half-measure. :)",
      "created_at" : "2018-12-08T20:42:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445488406",
      "id" : 445488406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQ4ODQwNg==",
      "updated_at" : "2018-12-08T20:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445488406",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe use the internal random functions here (`GetRand()`)?",
      "commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "created_at" : "2018-12-09T23:05:49Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192",
      "id" : 240058192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDA1ODE5Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 74,
      "path" : "src/net.cpp",
      "position" : 74,
      "pull_request_review_id" : 182999927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-09T23:05:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work!\r\nConcept ACK.",
      "created_at" : "2018-12-09T23:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445580678",
      "id" : 445580678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTU4MDY3OA==",
      "updated_at" : "2018-12-09T23:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445580678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
