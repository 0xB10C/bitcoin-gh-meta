[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14565](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14565.html) (Overhaul importmulti logic by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-06T15:54:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#issuecomment-444920714",
      "id" : 444920714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14886",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDkyMDcxNA==",
      "updated_at" : "2018-12-06T15:54:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444920714",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've tidied up the intermediate commits and force-pushed. Should be ready for review.",
      "created_at" : "2018-12-06T17:24:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#issuecomment-444956049",
      "id" : 444956049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14886",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDk1NjA0OQ==",
      "updated_at" : "2018-12-06T17:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444956049",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will review very soon",
      "created_at" : "2018-12-06T18:00:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#issuecomment-444968265",
      "id" : 444968265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14886",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDk2ODI2NQ==",
      "updated_at" : "2018-12-06T18:00:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444968265",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a new commit updating the docstring.",
      "created_at" : "2018-12-06T18:30:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#issuecomment-444978633",
      "id" : 444978633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14886",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDk3ODYzMw==",
      "updated_at" : "2018-12-06T18:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444978633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239933684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239933684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `raise AssertionError(Ã¢ÂÂ¦)` is more idiomatic and consistent with the rest of the code base. Drop the unnecessary parens :-)",
      "commit_id" : "12e59a60019732fa228872848121cca4431e7513",
      "created_at" : "2018-12-07T20:14:50Z",
      "diff_hunk" : "@@ -32,595 +80,523 @@ def skip_test_if_missing_module(self):\n     def setup_network(self):\n         self.setup_nodes()\n \n-    def run_test (self):\n+    def get_key(self):\n+        \"\"\"Generate a fresh key on node0\n+\n+        Returns a named tuple of privkey, pubkey and all address and scripts.\"\"\"\n+        addr = self.nodes[0].getnewaddress()\n+        pubkey = self.nodes[0].getaddressinfo(addr)['pubkey']\n+        pkh = hash160(hex_str_to_bytes(pubkey))\n+        return Key(self.nodes[0].dumpprivkey(addr),\n+                   pubkey,\n+                   CScript([OP_DUP, OP_HASH160, pkh, OP_EQUALVERIFY, OP_CHECKSIG]).hex(),  # p2pkh\n+                   key_to_p2pkh(pubkey),  # p2pkh addr\n+                   CScript([OP_0, pkh]).hex(),  # p2wpkh\n+                   key_to_p2wpkh(pubkey),  # p2wpkh addr\n+                   CScript([OP_HASH160, hash160(CScript([OP_0, pkh])), OP_EQUAL]).hex(),  # p2sh-p2wpkh\n+                   CScript([OP_0, pkh]).hex(),  # p2sh-p2wpkh redeem script\n+                   key_to_p2sh_p2wpkh(pubkey))  # p2sh-p2wpkh addr\n+\n+    def get_multisig(self):\n+        \"\"\"Generate a fresh multisig on node0\n+\n+        Returns a named tuple of privkeys, pubkeys and all address and scripts.\"\"\"\n+        addrs = []\n+        pubkeys = []\n+        for i in range(3):\n+            addr = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n+            addrs.append(addr['address'])\n+            pubkeys.append(addr['pubkey'])\n+        script_code = CScript([OP_2] + [hex_str_to_bytes(pubkey) for pubkey in pubkeys] + [OP_3, OP_CHECKMULTISIG])\n+        witness_script = CScript([OP_0, sha256(script_code)])\n+        return Multisig([self.nodes[0].dumpprivkey(addr) for addr in addrs],\n+                        pubkeys,\n+                        CScript([OP_HASH160, hash160(script_code), OP_EQUAL]).hex(),  # p2sh\n+                        script_to_p2sh(script_code),  # p2sh addr\n+                        script_code.hex(),  # redeem script\n+                        witness_script.hex(),  # p2wsh\n+                        script_to_p2wsh(script_code),  # p2wsh addr\n+                        CScript([OP_HASH160, witness_script, OP_EQUAL]).hex(),  # p2sh-p2wsh\n+                        script_to_p2sh_p2wsh(script_code))  # p2sh-p2wsh addr\n+\n+    def test_importmulti(self, req, success, error_code=None, error_message=None):\n+        \"\"\"Run importmulti and assert success\"\"\"\n+        result = self.nodes[1].importmulti([req])\n+        assert_equal(result[0]['success'], success)\n+        if error_code is not None:\n+            assert_equal(result[0]['error']['code'], error_code)\n+            assert_equal(result[0]['error']['message'], error_message)\n+\n+    def test_address(self, address, **kwargs):\n+        \"\"\"Get address info for `address` and test whether the returned values are as expected.\"\"\"\n+        addr_info = self.nodes[1].getaddressinfo(address)\n+        for key, value in kwargs.items():\n+            if addr_info[key] != value:\n+                raise(AssertionError(\"key {} value {} did not match expected value {}\".format(key, addr_info[key], value)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239933684",
      "id" : 239933684,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzMzY4NA==",
      "original_commit_id" : "6c76af02e8188d0dc66c315e4ecd80308e2fa0a1",
      "original_position" : 137,
      "path" : "test/functional/wallet_importmulti.py",
      "position" : null,
      "pull_request_review_id" : 182857020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886",
      "updated_at" : "2018-12-07T20:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239933684",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239933882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239933882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Use `_` instead of `i` to show that the variable is intentionally unused.",
      "commit_id" : "12e59a60019732fa228872848121cca4431e7513",
      "created_at" : "2018-12-07T20:15:40Z",
      "diff_hunk" : "@@ -32,595 +80,523 @@ def skip_test_if_missing_module(self):\n     def setup_network(self):\n         self.setup_nodes()\n \n-    def run_test (self):\n+    def get_key(self):\n+        \"\"\"Generate a fresh key on node0\n+\n+        Returns a named tuple of privkey, pubkey and all address and scripts.\"\"\"\n+        addr = self.nodes[0].getnewaddress()\n+        pubkey = self.nodes[0].getaddressinfo(addr)['pubkey']\n+        pkh = hash160(hex_str_to_bytes(pubkey))\n+        return Key(self.nodes[0].dumpprivkey(addr),\n+                   pubkey,\n+                   CScript([OP_DUP, OP_HASH160, pkh, OP_EQUALVERIFY, OP_CHECKSIG]).hex(),  # p2pkh\n+                   key_to_p2pkh(pubkey),  # p2pkh addr\n+                   CScript([OP_0, pkh]).hex(),  # p2wpkh\n+                   key_to_p2wpkh(pubkey),  # p2wpkh addr\n+                   CScript([OP_HASH160, hash160(CScript([OP_0, pkh])), OP_EQUAL]).hex(),  # p2sh-p2wpkh\n+                   CScript([OP_0, pkh]).hex(),  # p2sh-p2wpkh redeem script\n+                   key_to_p2sh_p2wpkh(pubkey))  # p2sh-p2wpkh addr\n+\n+    def get_multisig(self):\n+        \"\"\"Generate a fresh multisig on node0\n+\n+        Returns a named tuple of privkeys, pubkeys and all address and scripts.\"\"\"\n+        addrs = []\n+        pubkeys = []\n+        for i in range(3):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239933882",
      "id" : 239933882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzMzg4Mg==",
      "original_commit_id" : "6c76af02e8188d0dc66c315e4ecd80308e2fa0a1",
      "original_position" : 108,
      "path" : "test/functional/wallet_importmulti.py",
      "position" : null,
      "pull_request_review_id" : 182857274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886",
      "updated_at" : "2018-12-07T20:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239933882",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239937280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239937280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed. Thanks!",
      "commit_id" : "12e59a60019732fa228872848121cca4431e7513",
      "created_at" : "2018-12-07T20:29:18Z",
      "diff_hunk" : "@@ -32,595 +80,523 @@ def skip_test_if_missing_module(self):\n     def setup_network(self):\n         self.setup_nodes()\n \n-    def run_test (self):\n+    def get_key(self):\n+        \"\"\"Generate a fresh key on node0\n+\n+        Returns a named tuple of privkey, pubkey and all address and scripts.\"\"\"\n+        addr = self.nodes[0].getnewaddress()\n+        pubkey = self.nodes[0].getaddressinfo(addr)['pubkey']\n+        pkh = hash160(hex_str_to_bytes(pubkey))\n+        return Key(self.nodes[0].dumpprivkey(addr),\n+                   pubkey,\n+                   CScript([OP_DUP, OP_HASH160, pkh, OP_EQUALVERIFY, OP_CHECKSIG]).hex(),  # p2pkh\n+                   key_to_p2pkh(pubkey),  # p2pkh addr\n+                   CScript([OP_0, pkh]).hex(),  # p2wpkh\n+                   key_to_p2wpkh(pubkey),  # p2wpkh addr\n+                   CScript([OP_HASH160, hash160(CScript([OP_0, pkh])), OP_EQUAL]).hex(),  # p2sh-p2wpkh\n+                   CScript([OP_0, pkh]).hex(),  # p2sh-p2wpkh redeem script\n+                   key_to_p2sh_p2wpkh(pubkey))  # p2sh-p2wpkh addr\n+\n+    def get_multisig(self):\n+        \"\"\"Generate a fresh multisig on node0\n+\n+        Returns a named tuple of privkeys, pubkeys and all address and scripts.\"\"\"\n+        addrs = []\n+        pubkeys = []\n+        for i in range(3):\n+            addr = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n+            addrs.append(addr['address'])\n+            pubkeys.append(addr['pubkey'])\n+        script_code = CScript([OP_2] + [hex_str_to_bytes(pubkey) for pubkey in pubkeys] + [OP_3, OP_CHECKMULTISIG])\n+        witness_script = CScript([OP_0, sha256(script_code)])\n+        return Multisig([self.nodes[0].dumpprivkey(addr) for addr in addrs],\n+                        pubkeys,\n+                        CScript([OP_HASH160, hash160(script_code), OP_EQUAL]).hex(),  # p2sh\n+                        script_to_p2sh(script_code),  # p2sh addr\n+                        script_code.hex(),  # redeem script\n+                        witness_script.hex(),  # p2wsh\n+                        script_to_p2wsh(script_code),  # p2wsh addr\n+                        CScript([OP_HASH160, witness_script, OP_EQUAL]).hex(),  # p2sh-p2wsh\n+                        script_to_p2sh_p2wsh(script_code))  # p2sh-p2wsh addr\n+\n+    def test_importmulti(self, req, success, error_code=None, error_message=None):\n+        \"\"\"Run importmulti and assert success\"\"\"\n+        result = self.nodes[1].importmulti([req])\n+        assert_equal(result[0]['success'], success)\n+        if error_code is not None:\n+            assert_equal(result[0]['error']['code'], error_code)\n+            assert_equal(result[0]['error']['message'], error_message)\n+\n+    def test_address(self, address, **kwargs):\n+        \"\"\"Get address info for `address` and test whether the returned values are as expected.\"\"\"\n+        addr_info = self.nodes[1].getaddressinfo(address)\n+        for key, value in kwargs.items():\n+            if addr_info[key] != value:\n+                raise(AssertionError(\"key {} value {} did not match expected value {}\".format(key, addr_info[key], value)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239937280",
      "id" : 239937280,
      "in_reply_to_id" : 239933684,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNzI4MA==",
      "original_commit_id" : "6c76af02e8188d0dc66c315e4ecd80308e2fa0a1",
      "original_position" : 137,
      "path" : "test/functional/wallet_importmulti.py",
      "position" : null,
      "pull_request_review_id" : 182861549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886",
      "updated_at" : "2018-12-07T20:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239937280",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239937308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239937308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "12e59a60019732fa228872848121cca4431e7513",
      "created_at" : "2018-12-07T20:29:24Z",
      "diff_hunk" : "@@ -32,595 +80,523 @@ def skip_test_if_missing_module(self):\n     def setup_network(self):\n         self.setup_nodes()\n \n-    def run_test (self):\n+    def get_key(self):\n+        \"\"\"Generate a fresh key on node0\n+\n+        Returns a named tuple of privkey, pubkey and all address and scripts.\"\"\"\n+        addr = self.nodes[0].getnewaddress()\n+        pubkey = self.nodes[0].getaddressinfo(addr)['pubkey']\n+        pkh = hash160(hex_str_to_bytes(pubkey))\n+        return Key(self.nodes[0].dumpprivkey(addr),\n+                   pubkey,\n+                   CScript([OP_DUP, OP_HASH160, pkh, OP_EQUALVERIFY, OP_CHECKSIG]).hex(),  # p2pkh\n+                   key_to_p2pkh(pubkey),  # p2pkh addr\n+                   CScript([OP_0, pkh]).hex(),  # p2wpkh\n+                   key_to_p2wpkh(pubkey),  # p2wpkh addr\n+                   CScript([OP_HASH160, hash160(CScript([OP_0, pkh])), OP_EQUAL]).hex(),  # p2sh-p2wpkh\n+                   CScript([OP_0, pkh]).hex(),  # p2sh-p2wpkh redeem script\n+                   key_to_p2sh_p2wpkh(pubkey))  # p2sh-p2wpkh addr\n+\n+    def get_multisig(self):\n+        \"\"\"Generate a fresh multisig on node0\n+\n+        Returns a named tuple of privkeys, pubkeys and all address and scripts.\"\"\"\n+        addrs = []\n+        pubkeys = []\n+        for i in range(3):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#discussion_r239937308",
      "id" : 239937308,
      "in_reply_to_id" : 239933882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTkzNzMwOA==",
      "original_commit_id" : "6c76af02e8188d0dc66c315e4ecd80308e2fa0a1",
      "original_position" : 108,
      "path" : "test/functional/wallet_importmulti.py",
      "position" : null,
      "pull_request_review_id" : 182861580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14886",
      "updated_at" : "2018-12-07T20:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239937308",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift nits fixed and redundant code removed: https://github.com/bitcoin/bitcoin/compare/6c76af02e8188d0dc66c315e4ecd80308e2fa0a1..12e59a60019732fa228872848121cca4431e7513",
      "created_at" : "2018-12-07T20:30:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14886#issuecomment-445356322",
      "id" : 445356322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14886",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTM1NjMyMg==",
      "updated_at" : "2018-12-07T20:30:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445356322",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
