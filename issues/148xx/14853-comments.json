[
   {
      "author_association" : "MEMBER",
      "body" : "Apologies for the `push` spam. Looks like rapidcheck testing on Travis is still failing with the same memory access violation error as #14171. I'll leave the build log up for now if anyone else wants to investigate, otherwise, the second commit here could be dropped.\r\n```\r\nRunning tests: versionbits_tests from test/versionbits_tests.cpp\r\nRunning tests: key_properties from test/key_properties.cpp\r\nRunning 4 test cases...\r\nTest cases order is shuffled using seed: 1462083212\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/key_properties.cpp(22): Entering test suite \"key_properties\"\r\ntest/key_properties.cpp(38): Entering test case \"key_set_symmetry\"\r\nUsing configuration: seed=1143137297392740439\r\nunknown location(0): fatal error: in \"key_properties/key_set_symmetry\": memory access violation at address: 0x00000020: no mapping at fault address\r\ntest/key_properties.cpp(38): last checkpoint: \"key_set_symmetry\" entry.\r\nTest is aborted\r\ntest/key_properties.cpp(38): Leaving test case \"key_set_symmetry\"; testing time: 19607us\r\nTest is aborted\r\ntest/key_properties.cpp(22): Leaving test suite \"key_properties\"; testing time: 19671us\r\nTest is aborted\r\nLeaving test module \"Bitcoin Test Suite\"; testing time: 19889us\r\n```",
      "created_at" : "2018-12-01T05:44:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14853#issuecomment-443402007",
      "id" : 443402007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14853",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MzQwMjAwNw==",
      "updated_at" : "2018-12-01T05:46:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443402007",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Managed to get a backtrace in what should have been an equivalent environment. cc @Christewart \r\n```\r\nThread 1 (Thread 0x7ffff7fe5780 (LWP 72946)):\r\n#0  0x00005555561fe58f in rc::Shrinkable<rc::detail::Any>::value() const ()\r\n#1  0x000055555623abe6 in rc::gen::detail::ExecHandler::onGenerate(rc::Gen<rc::detail::Any> const&) ()\r\n#2  0x00005555559b418e in rc::Gen<std::tuple<CKey, CKey> >::operator*() const ()\r\n#3  0x00005555559b45a5 in std::pair<rc::detail::FunctionTraitsImpl<std::decay<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >::type>::ReturnType, rc::gen::detail::Recipe> rc::gen::detail::execWithRecipe<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >(rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)>, rc::gen::detail::Recipe) ()\r\n#4  0x00005555559b4a03 in rc::Shrinkable<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe> >::ShrinkableImpl<rc::shrinkable::detail::JustShrinkShrinkable<rc::Shrinkable<std::pair<rc::detail::FunctionTraitsImpl<std::decay<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >::type>::ReturnType, rc::gen::detail::Recipe> > rc::gen::detail::shrinkableWithRecipe<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >(rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)>, rc::gen::detail::Recipe)::{lambda()#1}, rc::Shrinkable<std::pair<rc::detail::FunctionTraitsImpl<std::decay<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >::type>::ReturnType, rc::gen::detail::Recipe> > rc::gen::detail::shrinkableWithRecipe<rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)> >(rc::detail::PropertyAdapter<void (*)(CKey const&, CKey const&), void (CKey const&, CKey const&)>, rc::gen::detail::Recipe)::{lambda(std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe>&&)#2}> >::value() const ()\r\n#5  0x0000555556203b21 in rc::Shrinkable<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe> >::value() const ()\r\n#6  0x00005555561fdad3 in rc::shrinkable::detail::MapShrinkable<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe>, rc::detail::mapToCaseDescription(rc::Gen<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe> >)::{lambda(std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe>&&)#1}>::value() const ()\r\n#7  0x00005555561fd982 in rc::Shrinkable<rc::detail::CaseDescription>::ShrinkableImpl<rc::shrinkable::detail::MapShrinkable<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe>, rc::detail::mapToCaseDescription(rc::Gen<std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe> >)::{lambda(std::pair<rc::detail::TaggedResult, rc::gen::detail::Recipe>&&)#1}> >::value() const ()\r\n#8  0x000055555621055b in rc::Shrinkable<rc::detail::CaseDescription>::value() const ()\r\n#9  0x000055555620f036 in rc::detail::searchProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestParams const&, rc::detail::TestListener&) ()\r\n#10 0x000055555620f66b in rc::detail::(anonymous namespace)::doTestProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestParams const&, rc::detail::TestListener&) ()\r\n#11 0x000055555620fb8c in rc::detail::testProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestMetadata const&, rc::detail::TestParams const&, rc::detail::TestListener&) ()\r\n#12 0x00005555561ec0ce in rc::detail::checkProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestMetadata const&, rc::detail::TestParams const&, rc::detail::TestListener&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rc::detail::Reproduce, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rc::detail::Reproduce> > > const&) ()\r\n#13 0x00005555561ec2be in rc::detail::checkProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestMetadata const&, rc::detail::TestParams const&, rc::detail::TestListener&) ()\r\n#14 0x00005555561ec322 in rc::detail::checkProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestMetadata const&, rc::detail::TestParams const&) ()\r\n#15 0x00005555561ec37b in rc::detail::checkProperty(rc::Gen<rc::detail::CaseDescription> const&, rc::detail::TestMetadata const&) ()\r\n#16 0x00005555559af306 in void rc::detail::checkBoostTest<void (*)(CKey const&, CKey const&)>(void (*&&)(CKey const&, CKey const&)) ()\r\n#17 0x00005555559a7763 in key_properties::key_uniqueness_invoker() ()\r\n#18 0x000055555601a5d1 in boost::function0<void>::operator() (this=0x555556a41058) at ./boost/function/function_template.hpp:759\r\n#19 0x0000555556019cb1 in boost::detail::forward::operator() (this=0x7fffffffd1b8) at ./boost/test/impl/execution_monitor.ipp:1300\r\n#20 0x000055555601a9dc in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke (function_obj_ptr=...)\r\n    at ./boost/function/function_template.hpp:138\r\n#21 0x000055555601a7b9 in boost::function0<int>::operator() (this=0x7fffffffd1b0) at ./boost/function/function_template.hpp:760\r\n#22 0x0000555556019f61 in boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) (tr=..., F=...) at ./boost/test/impl/execution_monitor.ipp:281\r\n#23 0x00005555560188b2 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) (\r\n    this=0x5555569ee100 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at ./boost/test/impl/execution_monitor.ipp:864\r\n#24 0x0000555556018a36 in boost::execution_monitor::execute(boost::function<int ()> const&) (\r\n    this=0x5555569ee100 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at ./boost/test/impl/execution_monitor.ipp:1203\r\n#25 0x00005555560196b0 in boost::execution_monitor::vexecute(boost::function<void ()> const&) (\r\n    this=0x5555569ee100 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at ./boost/test/impl/execution_monitor.ipp:1309\r\n#26 0x0000555555fb5d84 in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) (\r\n    this=0x5555569ee100 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, func=..., timeout=0)\r\n    at ./boost/test/impl/unit_test_monitor.ipp:46\r\n#27 0x0000555555f6c445 in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555569edf20 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=65838, timeout=0, \r\n    p_random_generator=0x0) at ./boost/test/impl/framework.ipp:717\r\n#28 0x0000555555f6bdb1 in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555569edf20 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=68, timeout=0, \r\n    p_random_generator=0x0) at ./boost/test/impl/framework.ipp:666\r\n#29 0x0000555555f6bdb1 in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555569edf20 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=1, timeout=0, p_random_generator=0x0)\r\n    at ./boost/test/impl/framework.ipp:666\r\n#30 0x0000555555f650ce in boost::unit_test::framework::run (id=1, continue_test=true) at ./boost/test/impl/framework.ipp:1442\r\n#31 0x0000555555fb2287 in boost::unit_test::unit_test_main (init_func=0x55555567bbd0 <init_unit_test_suite(int, char**)>, argc=3, argv=0x7fffffffe708)\r\n    at ./boost/test/impl/unit_test_main.ipp:231\r\n#32 0x0000555555fb2588 in main (argc=3, argv=0x7fffffffe708) at ./boost/test/impl/unit_test_main.ipp:286\r\n```",
      "created_at" : "2018-12-01T09:16:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14853#issuecomment-443412377",
      "id" : 443412377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14853",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MzQxMjM3Nw==",
      "updated_at" : "2018-12-01T09:16:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443412377",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
