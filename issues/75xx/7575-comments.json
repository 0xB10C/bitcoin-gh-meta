[
   {
      "body" : "Could you add deployment status to the `getblockchaininfo` RPC?",
      "created_at" : "2016-02-22T02:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-186973441",
      "id" : 186973441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-22T02:30:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186973441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@sipa any reason not to just extend #7566?\r\n\r\nonce-over utACK 50278bb,  concept ACK",
      "created_at" : "2016-02-22T03:51:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-186993497",
      "id" : 186993497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-22T03:51:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186993497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Concept ACK, I prefer this BIP9 implementation.",
      "created_at" : "2016-02-22T04:13:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-186995999",
      "id" : 186995999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-22T04:13:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186995999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@dcousens I wrote most of this before I saw #7566, which would need some\nrefactoring anyway to support the warning logic. I did use the params\nstructure from there.\n",
      "created_at" : "2016-02-22T04:19:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-186998247",
      "id" : 186998247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-22T04:19:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186998247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "There are some `versionbits_test.cpp` formatting/syntax issues (https://travis-ci.org/bitcoin/bitcoin/jobs/110833452#L1736) ",
      "created_at" : "2016-02-22T16:18:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-187250275",
      "id" : 187250275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-22T16:18:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/187250275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Fixed tests.",
      "created_at" : "2016-02-24T21:43:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-188464813",
      "id" : 188464813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-02-24T21:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/188464813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54153581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54153581"
         }
      },
      "body" : "Why not simply start using the versionbit prefix without voting for any concrete bit instead?",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T19:53:39Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);\n+Consensus::VersionBitsConditionChecker* const softforkcheck[] = {&checkCSV};\n+\n+int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    int32_t nVersion = 0;\n+\n+    for (unsigned int i = 0; i < sizeof(softforkcheck) / sizeof(softforkcheck[0]); i++) {\n+        if (softforkcheck[i]->IsSetFor(pindexPrev, params)) {\n+            nVersion |= softforkcheck[i]->Mask(params);\n+        }\n+    }\n+\n+    if (nVersion == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54153581",
      "id" : 54153581,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 26,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54153581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54153961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54153961"
         }
      },
      "body" : "\"Unrelated\" question: I know this is not changed in this PR, but why don't we want these warnings on initial block download?\r\nWould it be a problem to make these checks in ConnectBlock() rather than UpdateTip() ?",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T19:55:34Z",
      "diff_hunk" : "@@ -2451,20 +2498,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     static bool fWarned = false;\n     if (!IsInitialBlockDownload() && !fWarned)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54153961",
      "id" : 54153961,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 70,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54153961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54154107"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54154107"
         }
      },
      "body" : "Minor nit: Is it really worth it to notify this twice (once when is locked in and 2016 blocks later when it's activated)?",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T19:56:37Z",
      "diff_hunk" : "@@ -2451,20 +2498,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     static bool fWarned = false;\n     if (!IsInitialBlockDownload() && !fWarned)\n     {\n-        int nUpgraded = 0;\n         const CBlockIndex* pindex = chainActive.Tip();\n-        for (int i = 0; i < 100 && pindex != NULL; i++)\n-        {\n-            if (pindex->nVersion > CBlock::CURRENT_VERSION)\n-                ++nUpgraded;\n-            pindex = pindex->pprev;\n-        }\n-        if (nUpgraded > 0)\n-            LogPrintf(\"%s: %d of last 100 blocks above version %d\\n\", __func__, nUpgraded, (int)CBlock::CURRENT_VERSION);\n-        if (nUpgraded > 100/2)\n-        {\n+        if (warningcheck.IsLockedIn(pindex, chainParams.GetConsensus())) {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            strMiscWarning = _(\"Warning: This version is obsolete; upgrade required!\");\n+            if (warningcheck.IsActiveFor(pindex, chainParams.GetConsensus())) {\n+                strMiscWarning = _(\"Warning: unknown softfork has activated\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54154107",
      "id" : 54154107,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54154107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54154753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54154753"
         }
      },
      "body" : "Well, one is before you're forked off and the other is after. The warning\ntexts here could certainly be more descriptive.\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T20:00:34Z",
      "diff_hunk" : "@@ -2451,20 +2498,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     static bool fWarned = false;\n     if (!IsInitialBlockDownload() && !fWarned)\n     {\n-        int nUpgraded = 0;\n         const CBlockIndex* pindex = chainActive.Tip();\n-        for (int i = 0; i < 100 && pindex != NULL; i++)\n-        {\n-            if (pindex->nVersion > CBlock::CURRENT_VERSION)\n-                ++nUpgraded;\n-            pindex = pindex->pprev;\n-        }\n-        if (nUpgraded > 0)\n-            LogPrintf(\"%s: %d of last 100 blocks above version %d\\n\", __func__, nUpgraded, (int)CBlock::CURRENT_VERSION);\n-        if (nUpgraded > 100/2)\n-        {\n+        if (warningcheck.IsLockedIn(pindex, chainParams.GetConsensus())) {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            strMiscWarning = _(\"Warning: This version is obsolete; upgrade required!\");\n+            if (warningcheck.IsActiveFor(pindex, chainParams.GetConsensus())) {\n+                strMiscWarning = _(\"Warning: unknown softfork has activated\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54154753",
      "id" : 54154753,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54154753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54155143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54155143"
         }
      },
      "body" : "> Why not simply start using the versionbit prefix without voting for any\nconcrete bit instead?\n\nThat would mean that versionbits on itself is a change, and lack of\nadoption of versionbits by miners would then cause the warning logic to\ntrigger on new nodes.\n\nUsing this logc here, versionbits gets rolled out simultaneously with the\nfirst fork that uses it.\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T20:02:59Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);\n+Consensus::VersionBitsConditionChecker* const softforkcheck[] = {&checkCSV};\n+\n+int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    int32_t nVersion = 0;\n+\n+    for (unsigned int i = 0; i < sizeof(softforkcheck) / sizeof(softforkcheck[0]); i++) {\n+        if (softforkcheck[i]->IsSetFor(pindexPrev, params)) {\n+            nVersion |= softforkcheck[i]->Mask(params);\n+        }\n+    }\n+\n+    if (nVersion == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54155143",
      "id" : 54155143,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 26,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54155143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159317"
         }
      },
      "body" : "This is the main difference between your implementation and mine. You have a separate Cache for each deployment while I have a single cache with containing the states of all the deployments. While mine should be more efficient (at least storage-wise), your code is more reusable (as shown in the way you implement the warnings checks).\r\nAnother goal for caching the states together is to simplify things in case libconsensus exposes (C API) the cache in the future to support concurrent calls.\r\n\r\nEDIT, the biggest difference is my CVersionBitsState::usedBitsMaskCache see the comment in the state machine.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T20:31:37Z",
      "diff_hunk" : "@@ -0,0 +1,96 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_VERSIONBITS\n+#define BITCOIN_CONSENSUS_VERSIONBITS\n+\n+#include \"chain.h\"\n+#include <map>\n+\n+namespace Consensus\n+{\n+\n+/** What block version to use for new blocks (pre versionbits) */\n+static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;\n+/** What bits to set in version for versionbits blocks */\n+static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;\n+/** What bitmask determines whether versionbits is in use */\n+static const int32_t VERSIONBITS_TOP_MASK = 0x60000000UL;\n+\n+/**\n+ * Abstract class that implements BIP9-style threshold logic, and caches results.\n+ */\n+class AbstractThresholdConditionChecker {\n+protected:\n+    virtual bool Condition(const CBlockIndex* pindex, const Params& params) =0;\n+    virtual int64_t BeginTime(const Params& params) =0;\n+    virtual int64_t EndTime(const Params& params) =0;\n+    virtual int Period(const Params& params) =0;\n+    virtual int Threshold(const Params& params) =0;\n+\n+    enum State {\n+        UNDEFINED,\n+        DEFINED,\n+        LOCKEDIN,\n+        ACTIVE,\n+        FAILED,\n+        ABANDONED\n+    };\n+\n+    State GetStateFor(const CBlockIndex* pindexPrev, const Params& params);\n+\n+private:\n+    // A map that gives the state for blocks whose height is a multiple of Period().\n+    // The map is indexed by the block's parent, however, so all keys in the map\n+    // will either be NULL or a block with (height + 1) % Period() == 0.\n+    std::map<const CBlockIndex*, State> cache;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159317",
      "id" : 54159317,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 47,
      "path" : "src/consensus/versionbits.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159556"
         }
      },
      "body" : "Bike-shedding: I'm doing s/UNDEFINED/DEFINED s/DEFINED/STARTED isntead, which I think it's more clear:\r\nIf it's in the chainparams is defined, it just hasn't started yet. Undefined/unkown deployments are those which you don't have in your chainparams.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T20:33:29Z",
      "diff_hunk" : "@@ -0,0 +1,96 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_VERSIONBITS\n+#define BITCOIN_CONSENSUS_VERSIONBITS\n+\n+#include \"chain.h\"\n+#include <map>\n+\n+namespace Consensus\n+{\n+\n+/** What block version to use for new blocks (pre versionbits) */\n+static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;\n+/** What bits to set in version for versionbits blocks */\n+static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;\n+/** What bitmask determines whether versionbits is in use */\n+static const int32_t VERSIONBITS_TOP_MASK = 0x60000000UL;\n+\n+/**\n+ * Abstract class that implements BIP9-style threshold logic, and caches results.\n+ */\n+class AbstractThresholdConditionChecker {\n+protected:\n+    virtual bool Condition(const CBlockIndex* pindex, const Params& params) =0;\n+    virtual int64_t BeginTime(const Params& params) =0;\n+    virtual int64_t EndTime(const Params& params) =0;\n+    virtual int Period(const Params& params) =0;\n+    virtual int Threshold(const Params& params) =0;\n+\n+    enum State {\n+        UNDEFINED,\n+        DEFINED,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159556",
      "id" : 54159556,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 34,
      "path" : "src/consensus/versionbits.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159960"
         }
      },
      "body" : "Makes sense.\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T20:36:17Z",
      "diff_hunk" : "@@ -0,0 +1,96 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_VERSIONBITS\n+#define BITCOIN_CONSENSUS_VERSIONBITS\n+\n+#include \"chain.h\"\n+#include <map>\n+\n+namespace Consensus\n+{\n+\n+/** What block version to use for new blocks (pre versionbits) */\n+static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;\n+/** What bits to set in version for versionbits blocks */\n+static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;\n+/** What bitmask determines whether versionbits is in use */\n+static const int32_t VERSIONBITS_TOP_MASK = 0x60000000UL;\n+\n+/**\n+ * Abstract class that implements BIP9-style threshold logic, and caches results.\n+ */\n+class AbstractThresholdConditionChecker {\n+protected:\n+    virtual bool Condition(const CBlockIndex* pindex, const Params& params) =0;\n+    virtual int64_t BeginTime(const Params& params) =0;\n+    virtual int64_t EndTime(const Params& params) =0;\n+    virtual int Period(const Params& params) =0;\n+    virtual int Threshold(const Params& params) =0;\n+\n+    enum State {\n+        UNDEFINED,\n+        DEFINED,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54159960",
      "id" : 54159960,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 34,
      "path" : "src/consensus/versionbits.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54159960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54165956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54165956"
         }
      },
      "body" : "But unless there's a reorg, nothing is going to stop the locked in deployment from being activated.\r\nI guess more messages don't hurt, even if we need to repeat the check (states are cached anyway).\r\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T21:16:47Z",
      "diff_hunk" : "@@ -2451,20 +2498,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     static bool fWarned = false;\n     if (!IsInitialBlockDownload() && !fWarned)\n     {\n-        int nUpgraded = 0;\n         const CBlockIndex* pindex = chainActive.Tip();\n-        for (int i = 0; i < 100 && pindex != NULL; i++)\n-        {\n-            if (pindex->nVersion > CBlock::CURRENT_VERSION)\n-                ++nUpgraded;\n-            pindex = pindex->pprev;\n-        }\n-        if (nUpgraded > 0)\n-            LogPrintf(\"%s: %d of last 100 blocks above version %d\\n\", __func__, nUpgraded, (int)CBlock::CURRENT_VERSION);\n-        if (nUpgraded > 100/2)\n-        {\n+        if (warningcheck.IsLockedIn(pindex, chainParams.GetConsensus())) {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            strMiscWarning = _(\"Warning: This version is obsolete; upgrade required!\");\n+            if (warningcheck.IsActiveFor(pindex, chainParams.GetConsensus())) {\n+                strMiscWarning = _(\"Warning: unknown softfork has activated\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54165956",
      "id" : 54165956,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54165956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54167000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54167000"
         }
      },
      "body" : "I mean, if we are going to wait to deploy the first SF to merge it, I think it makes even more sense that we never return Consensus::VERSIONBITS_LAST_OLD_BLOCK_VERSION here.\r\n\r\n> That would mean that versionbits on itself is a change, and lack of\r\nadoption of versionbits by miners would then cause the warning logic to\r\ntrigger on new nodes.\r\n\r\nJust like changing the version to 8 without doing anything else would be. But it doesn't affect functionality.\r\nThe new nodes would only get warnings if the miners, apart from adopting this change were adopting or implementing other change to vote on concrete bits (if they only set nVersion to Consensus::VERSIONBITS_TOP_BITS), no warnings should be raised (unless an unknown SF has been deployed using versionbits, in which case is good that they get the warnings).",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T21:23:59Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);\n+Consensus::VersionBitsConditionChecker* const softforkcheck[] = {&checkCSV};\n+\n+int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    int32_t nVersion = 0;\n+\n+    for (unsigned int i = 0; i < sizeof(softforkcheck) / sizeof(softforkcheck[0]); i++) {\n+        if (softforkcheck[i]->IsSetFor(pindexPrev, params)) {\n+            nVersion |= softforkcheck[i]->Mask(params);\n+        }\n+    }\n+\n+    if (nVersion == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54167000",
      "id" : 54167000,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 26,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54167000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54169609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54169609"
         }
      },
      "body" : "Assume the start date for the first bip9 softfork is april 1st, but we\nrelease code with bip9 and that softfork on march 1st.\n\nThat means that it's likely that during march no new-style nVersion will be\nmined. That also means that anyone who does run upgraded code will get\nwarnings, because the nVersion they expect (0x20000000) differs from the\none they see (4).\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T21:42:14Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);\n+Consensus::VersionBitsConditionChecker* const softforkcheck[] = {&checkCSV};\n+\n+int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    int32_t nVersion = 0;\n+\n+    for (unsigned int i = 0; i < sizeof(softforkcheck) / sizeof(softforkcheck[0]); i++) {\n+        if (softforkcheck[i]->IsSetFor(pindexPrev, params)) {\n+            nVersion |= softforkcheck[i]->Mask(params);\n+        }\n+    }\n+\n+    if (nVersion == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54169609",
      "id" : 54169609,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 26,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54169609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54172894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54172894"
         }
      },
      "body" : "Ok, I get it, it's the old nodes seeing the \"empty versionbits\" version which would get (unnecessarily?) be told to upgrade and it doesn't matter whether we introduce a SF with BIP9 or not because the start date will be after the miners start using the new code to produce their new versions.\r\n\r\nBut I think I still disagree, though.\r\nIf in march 15th 95% of the miners are ready to deploy a softfork scheduled for april 1st, I believe old nodes should actually receive the upgrade warning already, even if the message is not accurate.\r\n\r\nEDIT: anyway, this disagreement is minor in the sense that it cannot greatly affect the implementation, the  difference will be about 3-lines. So don't hurry to answer this.\r\n\r\nEDIT: nah, 95% of miner will use BIP9 later, never mind, question answered.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T22:04:04Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);\n+Consensus::VersionBitsConditionChecker* const softforkcheck[] = {&checkCSV};\n+\n+int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    int32_t nVersion = 0;\n+\n+    for (unsigned int i = 0; i < sizeof(softforkcheck) / sizeof(softforkcheck[0]); i++) {\n+        if (softforkcheck[i]->IsSetFor(pindexPrev, params)) {\n+            nVersion |= softforkcheck[i]->Mask(params);\n+        }\n+    }\n+\n+    if (nVersion == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54172894",
      "id" : 54172894,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 26,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54172894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54179238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54179238"
         }
      },
      "body" : "Important concern: Shouldn't this check that the same bit is not currently being used by other deployment defined in chainparams for the same bit (and already started or locked in) before advancing to the next state?\r\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T22:52:14Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"versionbits.h\"\n+\n+namespace Consensus\n+{\n+\n+AbstractThresholdConditionChecker::State AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    int nPeriod = Period(params);\n+    int nThreshold = Threshold(params);\n+    int64_t nTimeDefined = BeginTime(params);\n+    int64_t nTimeTimeout = EndTime(params);\n+\n+    // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n+    if (pindexPrev != NULL) {\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - ((pindexPrev->nHeight + 1) % nPeriod));\n+    }\n+\n+    // Walk backwards in steps of nPeriod to find a pindexPrev whose information is known\n+    std::vector<const CBlockIndex*> vToCompute;\n+    while (cache.count(pindexPrev) == 0) {\n+        if (pindexPrev == NULL) {\n+            // The genesis block is by definition undefined.\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        if (pindexPrev->GetMedianTimePast() < nTimeDefined) {\n+            // Optimizaton: don't recompute down further, as we know every earlier block will be before the start time\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        vToCompute.push_back(pindexPrev);\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - nPeriod);\n+    }\n+\n+    // At this point, cache[pindexPrev] is known\n+    assert(cache.count(pindexPrev));\n+    State state = cache[pindexPrev];\n+\n+    // Now walk forward and compute the state of descendants of pindexPrev\n+    while (!vToCompute.empty()) {\n+        State stateNext = state;\n+        pindexPrev = vToCompute.back();\n+        vToCompute.pop_back();\n+\n+        switch (state) {\n+            case UNDEFINED: {\n+                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {\n+                    stateNext = FAILED;\n+                } else if (pindexPrev->GetMedianTimePast() >= nTimeDefined) {\n+                    stateNext = DEFINED;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54179238",
      "id" : 54179238,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 54,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54179238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54180005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54180005"
         }
      },
      "body" : "This check is redundant with the similar one in the DEFINED state (assuming the check is done before counting upgrade confirmations). You could also remove the break, so that a deployment changing from UNDEFINED to DEFINED has the chance of moving to FAILED or LOCKED_IN in the same round.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T22:58:16Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"versionbits.h\"\n+\n+namespace Consensus\n+{\n+\n+AbstractThresholdConditionChecker::State AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    int nPeriod = Period(params);\n+    int nThreshold = Threshold(params);\n+    int64_t nTimeDefined = BeginTime(params);\n+    int64_t nTimeTimeout = EndTime(params);\n+\n+    // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n+    if (pindexPrev != NULL) {\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - ((pindexPrev->nHeight + 1) % nPeriod));\n+    }\n+\n+    // Walk backwards in steps of nPeriod to find a pindexPrev whose information is known\n+    std::vector<const CBlockIndex*> vToCompute;\n+    while (cache.count(pindexPrev) == 0) {\n+        if (pindexPrev == NULL) {\n+            // The genesis block is by definition undefined.\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        if (pindexPrev->GetMedianTimePast() < nTimeDefined) {\n+            // Optimizaton: don't recompute down further, as we know every earlier block will be before the start time\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        vToCompute.push_back(pindexPrev);\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - nPeriod);\n+    }\n+\n+    // At this point, cache[pindexPrev] is known\n+    assert(cache.count(pindexPrev));\n+    State state = cache[pindexPrev];\n+\n+    // Now walk forward and compute the state of descendants of pindexPrev\n+    while (!vToCompute.empty()) {\n+        State stateNext = state;\n+        pindexPrev = vToCompute.back();\n+        vToCompute.pop_back();\n+\n+        switch (state) {\n+            case UNDEFINED: {\n+                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54180005",
      "id" : 54180005,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54180005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54183870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54183870"
         }
      },
      "body" : "These variables could be both static and be in consensus/versionbits.cpp instead of main.cpp by moving ComputeBlockVersion() to versionbits as well (of course, without cs_main).\r\n\r\nWarningBitsConditionChecker could be encapsulated behind a function there too. In a very far future in which Bitcoin Core only uses libconsensus through its C API, that ```GetVersionBitsWarnings(const CBlockIndex* pindexPrev, const Consensus::Params&)``` function seems much closer from being \"exposable\" in libconsensus than class ```Consensus::AbstractThresholdConditionChecker```.\r\n\r\nI know that ComputeBlockVersion() and GetVersionBitsWarnings() are not strictly consensus code, but they heavily depend on consensus code, and I think it would be a wasted opportunity not to have this functionality as encapsulated as possible from birth.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-25T23:34:50Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54183870",
      "id" : 54183870,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54183870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54187861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54187861"
         }
      },
      "body" : "The reason I didn't put them in versionbits is exactly because the lock is\nin main. Post c++11 we can move locks to libconsensus, and the versionbits\ncache can have its own lock.\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-26T00:20:32Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54187861",
      "id" : 54187861,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54187861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54188013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54188013"
         }
      },
      "body" : "I think the semantics are simpler without the possibility of going from\nundefined to lockedin in one transition.\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-26T00:22:17Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"versionbits.h\"\n+\n+namespace Consensus\n+{\n+\n+AbstractThresholdConditionChecker::State AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    int nPeriod = Period(params);\n+    int nThreshold = Threshold(params);\n+    int64_t nTimeDefined = BeginTime(params);\n+    int64_t nTimeTimeout = EndTime(params);\n+\n+    // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n+    if (pindexPrev != NULL) {\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - ((pindexPrev->nHeight + 1) % nPeriod));\n+    }\n+\n+    // Walk backwards in steps of nPeriod to find a pindexPrev whose information is known\n+    std::vector<const CBlockIndex*> vToCompute;\n+    while (cache.count(pindexPrev) == 0) {\n+        if (pindexPrev == NULL) {\n+            // The genesis block is by definition undefined.\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        if (pindexPrev->GetMedianTimePast() < nTimeDefined) {\n+            // Optimizaton: don't recompute down further, as we know every earlier block will be before the start time\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        vToCompute.push_back(pindexPrev);\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - nPeriod);\n+    }\n+\n+    // At this point, cache[pindexPrev] is known\n+    assert(cache.count(pindexPrev));\n+    State state = cache[pindexPrev];\n+\n+    // Now walk forward and compute the state of descendants of pindexPrev\n+    while (!vToCompute.empty()) {\n+        State stateNext = state;\n+        pindexPrev = vToCompute.back();\n+        vToCompute.pop_back();\n+\n+        switch (state) {\n+            case UNDEFINED: {\n+                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54188013",
      "id" : 54188013,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54188013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54188119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54188119"
         }
      },
      "body" : "please, please, please libconsensus refactor nit:\r\n\r\nCould you replace these lines with\r\n``` \r\nflags |= Consensus::GetFlags(pindex, chainparams.GetConsensus());\r\n```\r\n?\r\n(is it ```pindex->pprev``` or just ```pindex``` here?)\r\n\r\nThen the function defined in consensus/versionbits.cpp can be extended for new deployments while avoiding new consensus code in main.\r\n\r\nThat implies, again, that checkCSV (and thus softforkcheck) would need to move to consensus/versionbits.cpp.\r\n",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-26T00:23:34Z",
      "diff_hunk" : "@@ -2176,6 +2218,11 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    // Start enforcing CHECKSEQUENCEVERIFY using versionbits logic.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54188119",
      "id" : 54188119,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : 63,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54188119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54263123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54263123"
         }
      },
      "body" : "fair enough, we're talking about saving 3-4 lines to libconsensus or leave them as self-documentation. If I forget to copy you on this, please, remind me.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-26T16:12:10Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"versionbits.h\"\n+\n+namespace Consensus\n+{\n+\n+AbstractThresholdConditionChecker::State AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    int nPeriod = Period(params);\n+    int nThreshold = Threshold(params);\n+    int64_t nTimeDefined = BeginTime(params);\n+    int64_t nTimeTimeout = EndTime(params);\n+\n+    // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n+    if (pindexPrev != NULL) {\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - ((pindexPrev->nHeight + 1) % nPeriod));\n+    }\n+\n+    // Walk backwards in steps of nPeriod to find a pindexPrev whose information is known\n+    std::vector<const CBlockIndex*> vToCompute;\n+    while (cache.count(pindexPrev) == 0) {\n+        if (pindexPrev == NULL) {\n+            // The genesis block is by definition undefined.\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        if (pindexPrev->GetMedianTimePast() < nTimeDefined) {\n+            // Optimizaton: don't recompute down further, as we know every earlier block will be before the start time\n+            cache[pindexPrev] = UNDEFINED;\n+            break;\n+        }\n+        vToCompute.push_back(pindexPrev);\n+        pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - nPeriod);\n+    }\n+\n+    // At this point, cache[pindexPrev] is known\n+    assert(cache.count(pindexPrev));\n+    State state = cache[pindexPrev];\n+\n+    // Now walk forward and compute the state of descendants of pindexPrev\n+    while (!vToCompute.empty()) {\n+        State stateNext = state;\n+        pindexPrev = vToCompute.back();\n+        vToCompute.pop_back();\n+\n+        switch (state) {\n+            case UNDEFINED: {\n+                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54263123",
      "id" : 54263123,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54263123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54264966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54264966"
         }
      },
      "body" : "I don't think we want locks in libconsensus, not even post c++11. This reminds me of a previous conversation we had about concurrency and the cache. It seems a renounced to supporting concurrent calls without locks in libconsensus for the wrong reason. When you previously said \" no need to have locks in the internal cache, the caller can get cs_main\", it seems you meant something different than what I understood. I will go back to having a C API interface for the cache.\r\n\r\nIn this PR, can't the caller of GetFlags (), ComputeBlockVersion() and GetVersionBitsWarnings() take the lock (assuming you move this code behind those 3 functions to encapsulate the static vars)?",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-02-26T16:25:04Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54264966",
      "id" : 54264966,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54264966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54518445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54518445"
         }
      },
      "body" : "See https://github.com/bitcoin/bips/pull/344.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-03-01T03:26:11Z",
      "diff_hunk" : "@@ -0,0 +1,96 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_VERSIONBITS\n+#define BITCOIN_CONSENSUS_VERSIONBITS\n+\n+#include \"chain.h\"\n+#include <map>\n+\n+namespace Consensus\n+{\n+\n+/** What block version to use for new blocks (pre versionbits) */\n+static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;\n+/** What bits to set in version for versionbits blocks */\n+static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;\n+/** What bitmask determines whether versionbits is in use */\n+static const int32_t VERSIONBITS_TOP_MASK = 0x60000000UL;\n+\n+/**\n+ * Abstract class that implements BIP9-style threshold logic, and caches results.\n+ */\n+class AbstractThresholdConditionChecker {\n+protected:\n+    virtual bool Condition(const CBlockIndex* pindex, const Params& params) =0;\n+    virtual int64_t BeginTime(const Params& params) =0;\n+    virtual int64_t EndTime(const Params& params) =0;\n+    virtual int Period(const Params& params) =0;\n+    virtual int Threshold(const Params& params) =0;\n+\n+    enum State {\n+        UNDEFINED,\n+        DEFINED,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54518445",
      "id" : 54518445,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 34,
      "path" : "src/consensus/versionbits.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54518445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54518873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54518873"
         }
      },
      "body" : "I'll try another implementation that does that. Separating the cache and the logic probably makes sense.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-03-01T03:34:09Z",
      "diff_hunk" : "@@ -2080,6 +2081,47 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+Consensus::VersionBitsConditionChecker checkCSV(Consensus::DEPLOYMENT_CSV);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54518873",
      "id" : 54518873,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54518873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Updated to correspond to latest BIP9 (see https://github.com/bitcoin/bips/pull/344, https://github.com/bitcoin/bips/pull/345, https://github.com/bitcoin/bips/pull/346), and fixed the tests.\r\n\r\nI also have an alternate version that factors out the cache, see https://github.com/sipa/bitcoin/commit/218d2fdcbfb207ed75f4f5a6fc7a1b5de6d791b8).",
      "created_at" : "2016-03-03T04:51:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-191581820",
      "id" : 191581820,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-03-03T04:51:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/191581820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54920354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54920354"
         }
      },
      "body" : "I don't have a strong opinion here, but I don't know that it really makes sense to call a generic `GetFlags()` function, as I believe we will need to have a separate one of those to deploy BIP68 (which doesn't use a script flags variable, but uses a locktimeflags variable instead)",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-03-03T18:03:36Z",
      "diff_hunk" : "@@ -2176,6 +2218,11 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    // Start enforcing CHECKSEQUENCEVERIFY using versionbits logic.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54920354",
      "id" : 54920354,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : 63,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-03T22:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54920354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "1) Moved the versionbits logic out of consensus, and make it not depend on it is\r\n2) Added (very basic) reporting of BIP9 deployment status through RPC\r\n3) Switched the window size from 2016 to 144 for regtest\r\n4) Factored the cache out of the versionbits logic classes\r\n\r\nShould be ready for review.",
      "created_at" : "2016-03-03T23:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-192024746",
      "id" : 192024746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-03-03T23:49:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/192024746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54973162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54973162"
         }
      },
      "body" : "I meant by unifying the consensus flags (currently only script and nSequence_and_nLockTime), see https://github.com/jtimon/bitcoin/commit/b77f1f21eda2329d99d7f2c3242be228db58b131 .\r\nEDIT: Anyway, if the last commit is an example that will be merged indepdently, this doesn't apply here.",
      "commit_id" : "766281655be3703f0f0de61563d0f029ab4ac6b6",
      "created_at" : "2016-03-04T00:32:36Z",
      "diff_hunk" : "@@ -2176,6 +2218,11 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    // Start enforcing CHECKSEQUENCEVERIFY using versionbits logic.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#discussion_r54973162",
      "id" : 54973162,
      "original_commit_id" : "99f66325e83f8da3b5dfe38cad4f5fdc60bca05a",
      "original_position" : 60,
      "path" : "src/main.cpp",
      "position" : 63,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7575",
      "updated_at" : "2016-03-04T00:56:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54973162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK 7662816\r\nEDIT: To be clear, I didn't meant to rename consensus/versionbits.o to versionbits.o, I was just talking about the \"consensus package\" in the makefile (because otherwise the whole package would depend on chain.o and its dependencies). I'm sorry for the misunderstanding and I understand if you don't want to change it back again. ",
      "created_at" : "2016-03-04T00:50:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7575#issuecomment-192039041",
      "id" : 192039041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7575",
      "updated_at" : "2016-03-04T00:53:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/192039041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
