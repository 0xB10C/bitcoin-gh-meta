[
   {
      "body" : "Because the functionality is largely deprecated; it causes a lot of confusion about the security model and most of what it usefully accomplished is now (or can be) accomplished in better ways. ",
      "created_at" : "2016-02-24T17:25:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-188361978",
      "id" : 188361978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-24T17:25:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/188361978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Oh, I thought that checkpoints made syncing faster.\r\n\r\nIf they are deprecated, why do we still keep them?",
      "created_at" : "2016-02-24T17:29:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-188366022",
      "id" : 188366022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-24T17:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/188366022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "At least on reasonably fast hardware they don't change it that much, I benchmarked with and without prior to 0.12 release and it was perhaps a 10% difference (e.g. 3.5 hrs vs 4). The fact that libsecp256k1 made signature verification 7x-ish faster made a big difference.  They were initially added to the software as the result of another not-understood-at-the-time bug that harmed verification performance which was long since fixed.\r\n\r\nRemoving them entirely requires replacing the role they serve in preventing low difficulty header flooding attacks, which would need some design and development.",
      "created_at" : "2016-02-24T17:34:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-188369540",
      "id" : 188369540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-24T17:43:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/188369540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I got interested in this particular performance question when I went to prune a x86_64 full node's datadir that had a full txindex so that I could put it on some of the lower power ARM SBCs (single board computers) that I have. Since pruning is not compatible with -txindex, that gets switched off and then the whole chain has to get re-indexed before it can be pruned.\r\n\r\nWhen 0.12 came out a few days ago, I wondered if updating the checkpoints to 395,000 would make much of a difference. I ran tests with various system configurations. The two competing versions of the software I used were the official 0.12 release and master + the patch to use block 395,000 as the latest checkpoint. The tests were simply to re-index the chain. I used an x86_64 quad core that runs at roughly 2.8 GHz when frequency scaling is in performance mode and a little less (it fluctuates during the test) when in powersave. I tried an unencrypted 5400 rpm sata drive and a samsung 840 pro ssd with luks full disk encryption. 8GB ram with dbcache set to 6000. Between any two competing runs on the same system config, the checkpoint change did NOT make any real difference. And, like Greg said, across the tests, on the order of 4 hours +- half an hour is basically what I got consistently.\r\n\r\nI also started to run tests on some armv7 hard float machines (odroid xu4, c1+, and ras pi 2 -- didn't test a Jetson TK1 yet). But, man those are so much slower (for a number of reasons including storage speed, no assembly optimizations, etc...). It's like 9-15 minutes on my x86_64 configs vs around 1.5-2.5 hours on the various SBC configs for the first 200,000 blocks or so. I didn't even let those tests complete since I just didn't have the time.\r\n\r\nWith the ARM machines in mind, I was thinking of putting a PR forward for block 395,000. If there's any desire for that, I can do it. But, I didn't yet because I just figured that re-indexing on the ARM SBCs is just using the wrong tool for the job. If you can run an x86_64 full node and prune datadir and then copy it to the ARM machine, do that. It's more of a question of if we should try to support the lower power machines for people that don't have the higher power luxury.",
      "created_at" : "2016-02-27T21:51:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-189735368",
      "id" : 189735368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-27T21:51:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/189735368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6440430?v=3",
         "events_url" : "https://api.github.com/users/mruddy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mruddy/followers",
         "following_url" : "https://api.github.com/users/mruddy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mruddy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mruddy",
         "id" : 6440430,
         "login" : "mruddy",
         "organizations_url" : "https://api.github.com/users/mruddy/orgs",
         "received_events_url" : "https://api.github.com/users/mruddy/received_events",
         "repos_url" : "https://api.github.com/users/mruddy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mruddy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mruddy"
      }
   },
   {
      "body" : "@mruddy Thanks for the confirmation.\r\n\r\nThere is still a lot of speedup available for signature validation on ARM-- we're not using the assembly that wumpus wrote (mostly as a result of the development team not having enough expertise to review it; and because arm is so slow that we gain testing confidence slowly). Those alone are a 2x validation speed improvement.\r\n\r\nBut as you say, validating performance on a low end SBC is just not great. It can be papered over by bypassing it, but I think there are better ways to do that (e.g. don't validate in IBD for blocks that are burried by a month of POW) which don't keep sending researchers down blind alleys like static checkpoints do. (The biggest effect of checkpoints these days is their invocation in papers describing centralized consensus systems as justification for a (false) equivalence of their approach and Bitcoin.)\r\n\r\n",
      "created_at" : "2016-02-27T22:45:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-189742561",
      "id" : 189742561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-27T22:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/189742561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell Regarding the ARM sig val speedup (https://github.com/bitcoin/secp256k1/pull/366 and https://github.com/bitcoin/secp256k1/pull/173), I don't have the assembly experience to review it, but I did just get a Jetson TK1 SBC (http://elinux.org/Jetson_TK1) that should be pretty fast and able to use faster SSD storage (assuming that's the case, I'd still need to try it). If I benchmarked 0.12 on that and then added the ARM assembly optimizations and ran the same re-indexing benchmark test, would that help you guys move forward with those changes? It would provide a comparison of the speedup, but probably more importantly, it would also show that the speedup does not introduce some chain splitting regression (at least as far as validating the ~400k blocks that have been created so far). I guess the question is, has the slowness of ARM SBC validation hindered your regression testing efforts in a way that my faster board could possibly help?",
      "created_at" : "2016-02-28T00:14:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7591#issuecomment-189752950",
      "id" : 189752950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7591",
      "updated_at" : "2016-02-28T00:14:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/189752950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6440430?v=3",
         "events_url" : "https://api.github.com/users/mruddy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mruddy/followers",
         "following_url" : "https://api.github.com/users/mruddy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mruddy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mruddy",
         "id" : 6440430,
         "login" : "mruddy",
         "organizations_url" : "https://api.github.com/users/mruddy/orgs",
         "received_events_url" : "https://api.github.com/users/mruddy/received_events",
         "repos_url" : "https://api.github.com/users/mruddy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mruddy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mruddy"
      }
   }
]
