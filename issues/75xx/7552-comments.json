[
   {
      "body" : "Concept ACK.",
      "created_at" : "2016-02-18T14:36:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-185748475",
      "id" : 185748475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-18T14:36:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/185748475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-02-19T01:47:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186007936",
      "id" : 186007936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-19T01:47:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186007936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Concept-ACK. \r\n\r\nShould the sense of final and non-standard be inverted in the options?  It would be surprising to pass a transaction to this RPC, have it pass.... then find that the network won't accept it.  Practically speaking, except for special cases and developers standardness is pretty much as forceful as validity.\r\n\r\nAn obvious future  extension wrt finality would be adding a field in the result that says _when_ the transaction will become final.",
      "created_at" : "2016-02-19T01:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186009324",
      "id" : 186009324,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-19T01:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186009324",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "~~@gmaxwell would it not be easier to make an optional parameter the estimated block height?~~\r\n~~This would probably need to be specified for each transaction if we're passing a list (so you can do CSV chains etc).~~\r\nOr would it be better to just give that feedback to the user as the \"earliest possible block height\" it could be included in? [per transaction]\r\n\r\n**edit:** As suggested by @gmaxwell (I think),  IMHO the best approach here is to give feedback to the user as to the earliest time they could be included.",
      "created_at" : "2016-02-19T04:20:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186043461",
      "id" : 186043461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-19T04:42:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186043461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "> it would be surprising to pass a transaction to this RPC, have it pass.... then find that the network won't accept it. \r\n\r\nThat's why those checks are enabled (true) by default. For specific cases they could be disabled. Only for the coinbase check I couldn't think of any reason why one'd want to disable it, so I left that out.\r\n\r\n> An obvious future extension wrt finality would be adding a field in the result that says when the transaction will become final.\r\n\r\nYes, would be nice - by using an object both for the options and the error, I made the API extensible enough to add such bells and whistles.\r\n(either a \"pass a simulated height\", or \"report when final\" approach, or both, could fit in)\r\n",
      "created_at" : "2016-02-19T08:25:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186115328",
      "id" : 186115328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-19T09:38:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186115328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "~~concept~~ tested ACK, this is great for testing smart contract stuff with timelocks.",
      "created_at" : "2016-02-19T22:15:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186431705",
      "id" : 186431705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-19T23:14:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186431705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "concept ack, but this is very incomplete, I suggest we keep it open without merging too fast.\r\n\r\nWe're arbitrarily calling IsStandardTx() but not AreInputsStandard(). Those are just two easily functions containing relay/ming policy, but there's much more related code spread out there.\r\n\r\nNit: Remove call to IsStandardTx() in verifytx, we can make another rpc call (or add an option in this one) called \"verify tx according to consensus rules and also accept tx according to some confirgurable policy parameter\". But please let's not add any policy code until we have a complete Consensus::VerifyTx(). \r\nWait a minute, Consensus::VerifyTx() doesn't even exist on master yet, not in a complete form and neither in an incomplete form.\r\n\r\nNit: Let's please introduce Consensus::VerifyTx() before exposing anything else, otherwise you'll have to duplicate some code from AcceptToMemoryPool and/or ConnectBlock. Could you please consider rebasing this PR on top of #7565 ? \r\n",
      "created_at" : "2016-02-20T03:03:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186494512",
      "id" : 186494512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-20T03:03:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186494512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "IMHO agreed this would be best implemented by `Consensus::VerifyTx` or the like.\r\n\r\nI also like the idea of a parameter for rejection based purely on consensus,  and irrespective of local node policy. ",
      "created_at" : "2016-02-21T16:05:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#issuecomment-186850691",
      "id" : 186850691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7552",
      "updated_at" : "2016-02-21T16:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186850691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54099802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54099802"
         }
      },
      "body" : "Nit: Appears to be [missing](https://xkcd.com/859/) the left parenthesis.",
      "commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "created_at" : "2016-02-25T14:15:48Z",
      "diff_hunk" : "@@ -839,3 +839,124 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n \n     return hashTx.GetHex();\n }\n+\n+UniValue verifyrawtransactions(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"verifyrawtransactions [\\\"hexstring\\\",...] ( options )\\n\"\n+            \"\\nVerifies one or more raw transactions (serialized, hex-encoded). If transactions depend on each other, they must be provided in order.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"hexstring\\\",...] (array of strings, required) The hex string of the raw transactions)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54099802",
      "id" : 54099802,
      "original_commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "original_position" : 12,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 12,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552",
      "updated_at" : "2016-02-25T14:15:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54099802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54100122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54100122"
         }
      },
      "body" : "or adding a superfluous right one",
      "commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "created_at" : "2016-02-25T14:18:00Z",
      "diff_hunk" : "@@ -839,3 +839,124 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n \n     return hashTx.GetHex();\n }\n+\n+UniValue verifyrawtransactions(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"verifyrawtransactions [\\\"hexstring\\\",...] ( options )\\n\"\n+            \"\\nVerifies one or more raw transactions (serialized, hex-encoded). If transactions depend on each other, they must be provided in order.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"hexstring\\\",...] (array of strings, required) The hex string of the raw transactions)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54100122",
      "id" : 54100122,
      "original_commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "original_position" : 12,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 12,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552",
      "updated_at" : "2016-02-25T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54100122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54148608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54148608"
         }
      },
      "body" : "As said I would leave this out for now, until we have more relay/mining policy encapsulated to expose here in a more generic way.\r\nEDIT: I didn't noticed that you are also using this for choosing the script flags...then I guess I would one of these:\r\n\r\nA) Replace this parameter with a flags one and leave calling to IsStandardTx() for later.\r\nB) Maintain IsStandardTx() but also add AreInputsStandard(). Replace ```\\\"check_standard\\\"           (boolean, optional, default=true) ``` with something more generic and extensible like ```\\\"policy\\\"           (string, optional, default=standard)```.\r\n\r\nI would personally prefer option A to avoid starting to duplicate policy code from AcceptToMemoryPool here.",
      "commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "created_at" : "2016-02-25T19:22:20Z",
      "diff_hunk" : "@@ -839,3 +839,124 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n \n     return hashTx.GetHex();\n }\n+\n+UniValue verifyrawtransactions(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"verifyrawtransactions [\\\"hexstring\\\",...] ( options )\\n\"\n+            \"\\nVerifies one or more raw transactions (serialized, hex-encoded). If transactions depend on each other, they must be provided in order.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"hexstring\\\",...] (array of strings, required) The hex string of the raw transactions)\\n\"\n+            \"2. options   (json object, optional)\\n\"\n+            \"     {\\n\"\n+            \"       \\\"include_mempool\\\"          (boolean, optional, default=true) Whether to include the mem pool\\n\"\n+            \"       \\\"check_final\\\"              (boolean, optional, default=true) Check that the transactions will be final by next block\\n\"\n+            \"       \\\"check_standard\\\"           (boolean, optional, default=true) Perform transaction standard checks\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7552#discussion_r54148608",
      "id" : 54148608,
      "original_commit_id" : "48a481a464def0f69262a9b8688543a0914817f4",
      "original_position" : 17,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 17,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7552",
      "updated_at" : "2016-02-25T19:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/54148608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
