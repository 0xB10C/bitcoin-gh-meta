[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134874934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134874934"
         }
      },
      "body" : "I prefer to explicitly set the network topology and initial state of the chain.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-23T21:24:18Z",
      "diff_hunk" : "@@ -8,12 +8,6 @@\n from test_framework.util import *\n \n class TxnMallTest(BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.num_nodes = 4\n-        self.setup_clean_chain = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134874934",
      "id" : 134874934,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 8,
      "path" : "test/functional/txn_clone.py",
      "position" : null,
      "pull_request_review_id" : 58220291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134874934",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134875521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134875521"
         }
      },
      "body" : "should raise `RuntimeError('Not implemented')` to enforce the docstring.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-23T21:26:51Z",
      "diff_hunk" : "@@ -202,51 +175,91 @@ def main(self):\n             logging.shutdown()\n             sys.exit(TEST_EXIT_FAILED)\n \n-    # Public helper methods. These can be accessed by the subclass test scripts.\n+    # Methods to override in subclass test scripts.\n+    def set_test_params(self):\n+        \"\"\"Override this method to change default values for number of nodes, topology, etc\"\"\"\n+        pass",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134875521",
      "id" : 134875521,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 75,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 58220291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134875521",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134948693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134948693"
         }
      },
      "body" : "Since `self` knows about `self.options.tmpdir`, and all calls to `self.add_nodes` passes `self.options.tmpdir` as `dirname` argument, it seems clean to just give it a default `None` and to set to `self.options.tmpdir if None` in `add_nodes`.\r\nOr perhaps remove it entirely and always use `self.options.tmpdir`. Will it ever be anything else?",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T07:53:13Z",
      "diff_hunk" : "@@ -202,51 +175,91 @@ def main(self):\n             logging.shutdown()\n             sys.exit(TEST_EXIT_FAILED)\n \n-    # Public helper methods. These can be accessed by the subclass test scripts.\n+    # Methods to override in subclass test scripts.\n+    def set_test_params(self):\n+        \"\"\"Override this method to change default values for number of nodes, topology, etc\"\"\"\n+        pass\n \n-    def start_node(self, i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, stderr=None):\n-        \"\"\"Start a bitcoind and return RPC connection to it\"\"\"\n+    def add_options(self, parser):\n+        \"\"\"Override this method to add command-line options to the test\"\"\"\n+        pass\n \n-        if extra_args is None:\n-            extra_args = []\n-        if binary is None:\n-            binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n-        node = TestNode(i, dirname, extra_args, rpchost, timewait, binary, stderr, self.mocktime, coverage_dir=self.options.coveragedir)\n-        node.start()\n-        node.wait_for_rpc_connection()\n+    def setup_chain(self):\n+        \"\"\"Override this method to customize blockchain setup\"\"\"\n+        self.log.info(\"Initializing test directory \" + self.options.tmpdir)\n+        if self.setup_clean_chain:\n+            self._initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n+        else:\n+            self._initialize_chain(self.options.tmpdir, self.num_nodes, self.options.cachedir)\n \n-        if self.options.coveragedir is not None:\n-            coverage.write_all_rpc_commands(self.options.coveragedir, node.rpc)\n+    def setup_network(self):\n+        \"\"\"Override this method to customize test network topology\"\"\"\n+        self.setup_nodes()\n+\n+        # Connect the nodes as a \"chain\".  This allows us\n+        # to split the network between nodes 1 and 2 to get\n+        # two halves that can work on competing chains.\n+        for i in range(self.num_nodes - 1):\n+            connect_nodes_bi(self.nodes, i, i + 1)\n+        self.sync_all()\n+\n+    def setup_nodes(self):\n+        \"\"\"Override this method to customize test node setup\"\"\"\n+        extra_args = None\n+        if hasattr(self, \"extra_args\"):\n+            extra_args = self.extra_args\n+        self.add_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n+        self.start_nodes()\n \n-        return node\n+    def run_test(self):\n+        \"\"\"Override this method to define test logic\"\"\"\n+        raise NotImplementedError\n \n-    def start_nodes(self, num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n-        \"\"\"Start multiple bitcoinds, return RPC connections to them\"\"\"\n+    # Public helper methods. These can be accessed by the subclass test scripts.\n+\n+    def add_nodes(self, num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134948693",
      "id" : 134948693,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 128,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 58300687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134948693",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134948830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134948830"
         }
      },
      "body" : "`extra_args=None, stderr=None` maybe?",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T07:53:55Z",
      "diff_hunk" : "@@ -61,9 +61,13 @@ def __getattr__(self, *args, **kwargs):\n         assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n         return self.rpc.__getattr__(*args, **kwargs)\n \n-    def start(self):\n+    def start(self, extra_args, stderr=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134948830",
      "id" : 134948830,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 5,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 58300687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134948830",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134949165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134949165"
         }
      },
      "body" : "Faint agreement. It's easy to forget and start up 4 nodes when you only really need 2, for example. Not seeing the number of nodes makes that even harder to remember.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T07:55:57Z",
      "diff_hunk" : "@@ -8,12 +8,6 @@\n from test_framework.util import *\n \n class TxnMallTest(BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.num_nodes = 4\n-        self.setup_clean_chain = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134949165",
      "id" : 134949165,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 8,
      "path" : "test/functional/txn_clone.py",
      "position" : null,
      "pull_request_review_id" : 58300687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134949165",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134950110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134950110"
         }
      },
      "body" : "Why does it not just `add_nodes(3, ..)` here and then add/start/connect the fourth node below? That would remove a lot of necessary `[self.nodes[0:3]]` stuff.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T08:00:35Z",
      "diff_hunk" : "@@ -7,28 +7,27 @@\n from test_framework.util import *\n \n class WalletTest(BitcoinTestFramework):\n-\n-    def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n-        \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n-        fee = balance_with_fee - curr_balance\n-        assert_fee_amount(fee, tx_size, fee_per_byte * 1000)\n-        return curr_balance\n-\n-    def __init__(self):\n-        super().__init__()\n+    def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n         self.extra_args = [['-usehd={:d}'.format(i%2==0)] for i in range(4)]\n \n     def setup_network(self):\n-        self.nodes = self.start_nodes(3, self.options.tmpdir, self.extra_args[:3])\n+        self.add_nodes(4, self.options.tmpdir, self.extra_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r134950110",
      "id" : 134950110,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 20,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 58300687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134950110",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066057"
         }
      },
      "body" : "Sounds good. I've added a new commit that makes setting `self.num_nodes` mandatory. I haven't done the same for `self.setup_clean_chain`, since I think it makes more sense for that to have a default. If people feel strongly, it can be added in a future commit.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T16:32:21Z",
      "diff_hunk" : "@@ -8,12 +8,6 @@\n from test_framework.util import *\n \n class TxnMallTest(BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.num_nodes = 4\n-        self.setup_clean_chain = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066057",
      "id" : 135066057,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 8,
      "path" : "test/functional/txn_clone.py",
      "position" : null,
      "pull_request_review_id" : 58435807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066057",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066087"
         }
      },
      "body" : "Yes - done",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T16:32:27Z",
      "diff_hunk" : "@@ -202,51 +175,91 @@ def main(self):\n             logging.shutdown()\n             sys.exit(TEST_EXIT_FAILED)\n \n-    # Public helper methods. These can be accessed by the subclass test scripts.\n+    # Methods to override in subclass test scripts.\n+    def set_test_params(self):\n+        \"\"\"Override this method to change default values for number of nodes, topology, etc\"\"\"\n+        pass",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066087",
      "id" : 135066087,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 75,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 58435838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066194"
         }
      },
      "body" : "Good point. Thanks! Added this in a new commit.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T16:32:55Z",
      "diff_hunk" : "@@ -202,51 +175,91 @@ def main(self):\n             logging.shutdown()\n             sys.exit(TEST_EXIT_FAILED)\n \n-    # Public helper methods. These can be accessed by the subclass test scripts.\n+    # Methods to override in subclass test scripts.\n+    def set_test_params(self):\n+        \"\"\"Override this method to change default values for number of nodes, topology, etc\"\"\"\n+        pass\n \n-    def start_node(self, i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, stderr=None):\n-        \"\"\"Start a bitcoind and return RPC connection to it\"\"\"\n+    def add_options(self, parser):\n+        \"\"\"Override this method to add command-line options to the test\"\"\"\n+        pass\n \n-        if extra_args is None:\n-            extra_args = []\n-        if binary is None:\n-            binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n-        node = TestNode(i, dirname, extra_args, rpchost, timewait, binary, stderr, self.mocktime, coverage_dir=self.options.coveragedir)\n-        node.start()\n-        node.wait_for_rpc_connection()\n+    def setup_chain(self):\n+        \"\"\"Override this method to customize blockchain setup\"\"\"\n+        self.log.info(\"Initializing test directory \" + self.options.tmpdir)\n+        if self.setup_clean_chain:\n+            self._initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n+        else:\n+            self._initialize_chain(self.options.tmpdir, self.num_nodes, self.options.cachedir)\n \n-        if self.options.coveragedir is not None:\n-            coverage.write_all_rpc_commands(self.options.coveragedir, node.rpc)\n+    def setup_network(self):\n+        \"\"\"Override this method to customize test network topology\"\"\"\n+        self.setup_nodes()\n+\n+        # Connect the nodes as a \"chain\".  This allows us\n+        # to split the network between nodes 1 and 2 to get\n+        # two halves that can work on competing chains.\n+        for i in range(self.num_nodes - 1):\n+            connect_nodes_bi(self.nodes, i, i + 1)\n+        self.sync_all()\n+\n+    def setup_nodes(self):\n+        \"\"\"Override this method to customize test node setup\"\"\"\n+        extra_args = None\n+        if hasattr(self, \"extra_args\"):\n+            extra_args = self.extra_args\n+        self.add_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n+        self.start_nodes()\n \n-        return node\n+    def run_test(self):\n+        \"\"\"Override this method to define test logic\"\"\"\n+        raise NotImplementedError\n \n-    def start_nodes(self, num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n-        \"\"\"Start multiple bitcoinds, return RPC connections to them\"\"\"\n+    # Public helper methods. These can be accessed by the subclass test scripts.\n+\n+    def add_nodes(self, num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066194",
      "id" : 135066194,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 128,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 58435973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066194",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066386"
         }
      },
      "body" : "`TestNode.start` is only ever called by `TestFramework.start_node`, which has its own default for `extra_args`, so not strictly necessary, but I agree having a default here makes it clearer. Added.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T16:33:48Z",
      "diff_hunk" : "@@ -61,9 +61,13 @@ def __getattr__(self, *args, **kwargs):\n         assert self.rpc_connected and self.rpc is not None, \"Error: no RPC connection\"\n         return self.rpc.__getattr__(*args, **kwargs)\n \n-    def start(self):\n+    def start(self, extra_args, stderr=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066386",
      "id" : 135066386,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 5,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 58436191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066386",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066746"
         }
      },
      "body" : "Because there's not currently a method to add a single node. The model after this PR is to add all nodes at the top of the test and then start/stop them as required during the test.\r\n\r\nWe could potentially add an `add_node()` method to be called during the test, but lets leave that for a future PR.",
      "commit_id" : "e67f8d98fde4f80a266ccc6c0e371277344bd907",
      "created_at" : "2017-08-24T16:35:16Z",
      "diff_hunk" : "@@ -7,28 +7,27 @@\n from test_framework.util import *\n \n class WalletTest(BitcoinTestFramework):\n-\n-    def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n-        \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n-        fee = balance_with_fee - curr_balance\n-        assert_fee_amount(fee, tx_size, fee_per_byte * 1000)\n-        return curr_balance\n-\n-    def __init__(self):\n-        super().__init__()\n+    def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n         self.extra_args = [['-usehd={:d}'.format(i%2==0)] for i in range(4)]\n \n     def setup_network(self):\n-        self.nodes = self.start_nodes(3, self.options.tmpdir, self.extra_args[:3])\n+        self.add_nodes(4, self.options.tmpdir, self.extra_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#discussion_r135066746",
      "id" : 135066746,
      "original_commit_id" : "06bde74f5ec8660975275f8594aee3a99064e327",
      "original_position" : 20,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 58436609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11121",
      "updated_at" : "2017-08-24T16:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135066746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@MarcoFalke @kallewoof - thanks for the review. I think I've responded to all your comments.\r\n\r\nNew commits pushed, and rebased on master.",
      "created_at" : "2017-08-24T16:36:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11121#issuecomment-324689264",
      "id" : 324689264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11121",
      "updated_at" : "2017-08-24T16:36:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324689264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
