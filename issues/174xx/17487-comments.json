[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r346960653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/346960653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use the ternary operator instead for less code and no captures?\r\n\r\n```cpp\r\nfor ( ... ; it = erase ? mapCoins.erase(it) : ++it) {",
      "commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "created_at" : "2019-11-15T18:45:55Z",
      "diff_hunk" : "@@ -144,8 +144,15 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n     hashBlock = hashBlockIn;\n }\n \n-bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn) {\n-    for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = mapCoins.erase(it)) {\n+bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn, bool erase) {\n+    auto iter_fnc = [&mapCoins, erase](CCoinsMap::iterator it) {\n+        if (erase) {\n+            return mapCoins.erase(it);\n+        } else {\n+            return it++;\n+        }\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r346960653",
      "id" : 346960653,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Njk2MDY1Mw==",
      "original_commit_id" : "bd44f51d790edc07b7e1224e0f8bfce4252c74d5",
      "original_position" : 31,
      "path" : "src/coins.cpp",
      "position" : null,
      "pull_request_review_id" : 317801224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487",
      "updated_at" : "2019-12-03T18:34:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/346960653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Does this speed up IBD with low dbcache? If so, a benchmark would be nice\r\n\r\nNo, this PR doesn't change any existing behavior - it simply introduces the option to avoid erasing the cache (which is later used by assumeutxo's snapshot activation code). This changeset shouldn't cause any sort of performance difference.",
      "created_at" : "2019-11-15T18:51:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-554483423",
      "id" : 554483423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDQ4MzQyMw==",
      "updated_at" : "2019-11-15T18:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554483423",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r346999363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/346999363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't passing the argument explicitly better than with a default one? Also it's worthy to extend method comment a bit with effect of argument on cache.",
      "commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "created_at" : "2019-11-15T20:30:51Z",
      "diff_hunk" : "@@ -275,7 +275,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n      * Failure to call this method before destruction will cause the changes to be forgotten.\n      * If false is returned, the state of this cache (and its backing view) will be undefined.\n      */\n-    bool Flush();\n+    bool Flush(bool clear_cache = true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r346999363",
      "id" : 346999363,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Njk5OTM2Mw==",
      "original_commit_id" : "bd44f51d790edc07b7e1224e0f8bfce4252c74d5",
      "original_position" : 32,
      "path" : "src/coins.h",
      "position" : 32,
      "pull_request_review_id" : 317853720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487",
      "updated_at" : "2019-12-03T18:34:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/346999363",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17669](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17669.html) (tests: have coins simulation test also use CCoinsViewDB by jamesob)\n* [#17060](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17060.html) (Cache 26% more coins: Reduce CCoinsMap::value_type from 96 to 76 bytes by martinus)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#9384](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9384.html) (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-11-15T21:08:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-554529034",
      "id" : 554529034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDUyOTAzNA==",
      "updated_at" : "2020-01-14T00:52:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554529034",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK bd44f51d790edc07b7e1224e0f8bfce4252c74d5\r\nChecked that it doesn't change any behavior, if the compiler is smart enough about detecting unused codepaths/function signatures, it will probably even emit an unchanged binary.",
      "created_at" : "2019-11-15T21:25:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-554534416",
      "id" : 554534416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDUzNDQxNg==",
      "updated_at" : "2019-11-15T21:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554534416",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the looks, everyone. I've incorporated feedback from @MarcoFalke and @ariard. [(diff)](https://github.com/bitcoin/bitcoin/compare/bd44f51d790edc07b7e1224e0f8bfce4252c74d5..a22b1fb1d4a239a47790a0522bb3f5e493cb9e57)",
      "created_at" : "2019-11-15T21:38:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-554538716",
      "id" : 554538716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDUzODcxNg==",
      "updated_at" : "2019-11-15T21:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554538716",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why is it that you don't need this bit in your followup PR? https://github.com/bitcoin/bitcoin/pull/15265/files#diff-cd7b305fd4b4280f22ae88960e60398eR210-R222",
      "created_at" : "2019-11-19T16:31:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-555591310",
      "id" : 555591310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTU5MTMxMA==",
      "updated_at" : "2019-11-19T16:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555591310",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Given that this does not improve performance (see https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-458657451), is this needed at all? If so, sharing a benchmark with steps to reproduce would be helpful.\r\n\r\nAnyway, I'd like to see the tests in `src/test/coins_tests.cpp` updated to cover the newly added paths.",
      "created_at" : "2019-11-19T16:57:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-555603581",
      "id" : 555603581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTYwMzU4MQ==",
      "updated_at" : "2019-11-19T16:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555603581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, but:\r\n\r\n- I think the PR description should be clearer that this change by itself doesn't change behavior.\r\n- I don't understand how this speeds up UTXO snapshot activation if conclusion from #15265 is that the cache is only really functioning as a write cache and not a read cache.\r\n- I agree with Marco about testing. This definitely needs unit tests or some coverage to unsure this isn't adding broken functionality, or code that could easily be broken in the future with no one noticing.\r\n- I agree with Antoine about the Flush method signature. Using a default boolean argument seems error prone. Explicit parameter would be ok, but better would just be to have separate methods like `Flush()` and `Sync()` or `Flush()` and `Write()`",
      "created_at" : "2019-11-19T17:08:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-555608657",
      "id" : 555608657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTYwODY1Nw==",
      "updated_at" : "2019-11-19T17:08:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555608657",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Alright, given the controversy here now is probably as good a time as any to back up and figure out exactly what `cacheCoins`' impact is on performance, for both this PR and posterity, so I'm going to benchmark\r\n1. a reindex to 550,000 with and without an in-memory UTXO cache, and then\r\n1. UTXO snapshot sync-to-tip with and without this changeset.\r\n\r\nI'll get back with some results in the next few days, and hopefully will write up an elucidation on where exactly CCoinsViewCache does or doesn't provide benefit.\r\n\r\n(Though I wonder how cross-platform differences beyond SSD-or-not play into this, e.g. the cache may or may not show importance based on leveldb's use of mmap & `max_open_files`, which is particularly relevant on Win32.)",
      "created_at" : "2019-11-19T17:18:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-555613237",
      "id" : 555613237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTYxMzIzNw==",
      "updated_at" : "2019-11-19T17:18:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555613237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> the cache may or may not show importance based on leveldb's use of mmap & max_open_files, which is particularly relevant on Win32\r\n\r\nFWIW, #17398 adds leveldb mmap support on Windows, might want to try with and without that PR  when doing benchmarking on Windows.",
      "created_at" : "2019-11-20T11:42:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-555967785",
      "id" : 555967785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTk2Nzc4NQ==",
      "updated_at" : "2019-11-20T11:42:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555967785",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After benching, I stand by this change as being significantly useful. I compare HEAD of the assumeutxo parent PR ([`utxo-dumpload-compressed`](https://github.com/jamesob/bitcoin/tree/utxo-dumpload-compressed)) to a branch of it which drops use of the `erase=false` parameter, erasing the coins after snapshot load ([`bench/au.no-erase`](https://github.com/jamesob/bitcoin/tree/bench/au.no-erase), [changes](https://github.com/jamesob/bitcoin/commit/85a73a074389c80c09e2acc877f45e06ab3f5976)). The benchmark compares the time taken to sync to block 604,667 after loading a snapshot taken at height 600,000.\r\n\r\nThe result is a significant degradation in performance on spinning disk hosts (4.5 hours vs. 1.5 hours) - see the `bench-hdd-3` results. There is a modest but probably negligible degradation on SSD hosts.\r\n\r\n```\r\nhost         tag                      time       time% maxmem  cpu%  dbcache\r\nbench-ssd-4  bench/au.no-erase        47:42.80   1.00  6689.85MB 125%  5000MB\r\nbench-ssd-4  bench/au.no-erase        44:15.66   0.93  6560.45MB 136%  5000MB\r\nbench-ssd-4  utxo-dumpload-compressed 40:13.30   0.84  6662.75MB 149%  5000MB\r\nbench-ssd-4  utxo-dumpload-compressed 41:36.01   0.87  6652.87MB 143%  5000MB\r\n\r\nbench-ssd-5  bench/au.no-erase        41:33.65   0.95  6754.54MB 144%  5000MB\r\nbench-ssd-5  bench/au.no-erase        41:32.42   0.95  6561.39MB 145%  5000MB\r\nbench-ssd-5  utxo-dumpload-compressed 43:51.50   1.00  6758.98MB 135%  5000MB\r\nbench-ssd-5  utxo-dumpload-compressed 36:39.94   0.84  6649.31MB 162%  5000MB\r\n\r\nbench-hdd-3  utxo-dumpload-compressed 1:47:08    0.38  6654.23MB 57%   5000MB\r\nbench-hdd-3  utxo-dumpload-compressed 1:30:48    0.32  6612.49MB 66%   5000MB\r\nbench-hdd-3  bench/au.no-erase        4:24:53    0.93  6578.77MB 23%   5000MB\r\nbench-hdd-3  bench/au.no-erase        4:45:29    1.00  6583.10MB 21%   5000MB\r\n```\r\n\r\nThis benchmark is reproducible by running [this script](https://github.com/chaincodelabs/bitcoinperf/blob/master/bin/run_remote.py#L147-L183):\r\n```sh\r\n./bin/run_remote.py au --hosts [hostnames ...]\r\n```\r\n\r\nI'll add tests to make sure this change works as-advertised, but I think it's pretty clearly a useful option for us to have. ",
      "created_at" : "2019-11-21T19:04:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557226923",
      "id" : 557226923,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzIyNjkyMw==",
      "updated_at" : "2019-11-21T19:04:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557226923",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar just pointed out to me that this code is very wrong - because I don't wipe the flags of flushed coins, this code ends up with an incorrect on-disk UTXO set (since a coin with the `FRESH` flag will only be removed from the in-memory cache and the delete will not propagate to leveldb). Going to fix this bug and reevaluate and pledge to never doubt Suhas' benchmarks again.",
      "created_at" : "2019-11-21T19:37:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557239614",
      "id" : 557239614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzIzOTYxNA==",
      "updated_at" : "2019-11-21T19:37:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557239614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(FWIW @Sjors wins Employee of the Month for spotting this bug in a previous comment.)",
      "created_at" : "2019-11-21T19:38:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557240133",
      "id" : 557240133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzI0MDEzMw==",
      "updated_at" : "2019-11-21T19:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557240133",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Took me a while to understand what you're doing here. To rephrase in my own words: when you load the snapshot from disk you end up with a coin cache at e.g. 600,000. Depending on the users dbcache setting, part of this is already in RAM, which is potentially nice when continuing IBD.\r\n\r\nhttps://github.com/jamesob/bitcoin/commit/85a73a074389c80c09e2acc877f45e06ab3f5976#diff-24efdb00bfbe56b140fb006b562cc70bL5514-L5530\r\n\r\nIf -dbcache is less than the size of the snapshot, the only the most recent (?) coins of the snapshot will in RAM, the rest would already have been flushed. This is probably similar to what happens during a normal IBD when dbcache overflows. (we could use some heuristics to sort coins by life expectancy)\r\n\r\nFor some reason (why?) you need to flush at the end of loading the snapshot, which normally means no coins are in RAM. This PR changes that last flush to keep stuff around.\r\n\r\nIIUC the main benefit of this cache is to reduce the number of unnecessary writes, i.e. when a coin is created and then destroyed we save 2 disk writes. But when we flush, even without deleting the coins from RAM, we expect 1 write if the coin is spent before the tip, otherwise no write.\r\n\r\nLooking forward to the new benchmark. I suggest doing this with a ~1 month old snapshot (realistic for users who download immediately after a 1 month release candidates) and a 4 month old snapshot (the average age if we ship every 6 months).",
      "created_at" : "2019-11-22T11:59:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557505590",
      "id" : 557505590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzUwNTU5MA==",
      "updated_at" : "2019-11-22T12:03:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557505590",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm surprised to report that even after fixing the (consensus!) bug that @Sjors and @sdaftuar pointed out, this change still shows considerable improvement for the assumeutxo snapshot-load use. We're still seeing 3x reduction in time with this change applied for spinning disks while doing a from-600k snapshot IBD.\r\n\r\n```\r\nhost         tag                      time       time% maxmem  cpu%  dbcache\r\nbench-ssd-4  utxo-dumpload-compressed 31:48.95   0.70  6787.93MB 179%  5000MB\r\nbench-ssd-4  utxo-dumpload-compressed 36:06.14   0.80  6689.20MB 157%  5000MB\r\nbench-ssd-4  bench/au.no-erase.1      43:21.22   0.96  6689.82MB 137%  5000MB\r\nbench-ssd-4  bench/au.no-erase.1      45:14.75   1.00  6739.20MB 131%  5000MB\r\n\r\nbench-ssd-5  utxo-dumpload-compressed 33:08.03   0.77  6787.14MB 172%  5000MB\r\nbench-ssd-5  utxo-dumpload-compressed 31:13.55   0.73  6731.26MB 182%  5000MB\r\nbench-ssd-5  bench/au.no-erase.1      42:49.74   1.00  6754.30MB 139%  5000MB\r\nbench-ssd-5  bench/au.no-erase.1      41:22.71   0.97  6557.05MB 144%  5000MB\r\n\r\nbench-hdd-3  bench/au.no-erase.1      4:34:00    0.98  6530.24MB 22%   5000MB\r\nbench-hdd-3  bench/au.no-erase.1      4:39:21    1.00  6562.12MB 21%   5000MB\r\nbench-hdd-3  utxo-dumpload-compressed 1:30:11    0.32  6736.32MB 63%   5000MB\r\nbench-hdd-3  utxo-dumpload-compressed 1:33:19    0.33  6702.03MB 61%   5000MB\r\n```\r\n[(host specs here)](https://gist.github.com/jamesob/012154e6c1c0ac893dc602fadfdd5f1d)\r\n\r\nApplying @sdaftuar's fix ([here](https://github.com/jamesob/bitcoin/commit/6dbb76e5a254095effc776c07bf954bd7a874406) in `bench/au.no-erase.1`, and [here](https://github.com/jamesob/bitcoin/commit/352af3801da0c0a870e01df8e1926df36f40e572#diff-cd7b305fd4b4280f22ae88960e60398eR217-R229) in `utxo-dumpload-compressed`) I think actually improves runtime for the single `Flush(erase=false)` call that we make after finishing the snapshot load because now we're actually removing spent coins from `cacheCoins`, thus freeing up more cache space going into the IBD.\r\n\r\n---\r\n\r\n> For some reason (why?) you need to flush at the end of loading the snapshot, which normally means no coins are in RAM. This PR changes that last flush to keep stuff around.\r\n\r\nThanks for the nice summary, @Sjors. I'm not sure that we necessarily need to flush after loading the snapshot, but I figured it was prudent to ensure that we'd resume the snapshot-based sync even after an unclean shutdown - maybe it's better to just omit the `Flush()` call altogether after loading the snapshot?\r\n\r\nTangentially, @sdaftuar mentioned the other day a potential technique for partial flushes that may accomplish the kind of optimization that this branch and #15265 are aiming for. The idea would be to allocate some of the `cacheCoins` memory to a secondary data structure that would serve as an index into `cacheCoins`, allowing fast lookup by spentness and height of the in-memory coins. That way, on `FlushStateToDisk()` we could do a partial flush, only making disk writes for those coins which are either unspent and of a certain age *or* spent and on-disk. This would make use of the fact that most coins are very short-lived (see [figure 2](https://eprint.iacr.org/2019/611.pdf) in @adiabat's excellent utreexo paper).\r\n\r\nI think this is a promising idea and I'll be experimenting with it soon - though of course that's outside the scope of this PR. ",
      "created_at" : "2019-11-22T16:16:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557595582",
      "id" : 557595582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzU5NTU4Mg==",
      "updated_at" : "2019-11-22T16:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557595582",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What about using `Flush(erase=false)` for all periodic flushes after IBD? That way when running with a high enough `dbcache` a flush would never empty `cacheCoins`, which would surely improve performance. That's also the only real issue with #15218 .",
      "created_at" : "2019-11-22T20:22:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557680581",
      "id" : 557680581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzY4MDU4MQ==",
      "updated_at" : "2019-11-22T20:24:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557680581",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've pushed some test coverage for the new `erase` parameter (and more generally some explicit tests for coins cache behavior). Notably, the new test cases use `CCoinsViewDB` at the base of the cache structure, which isn't currently tested explicitly anywhere else in the unittest suite - though of course an instance lives at the heart of every `CChainState`.\r\n\r\nThroughout the course of writing (and debugging) the tests, I found yet another bug that had to do with `std::move`ing the coins in `CCoinsView::BatchWrite` even when `erase=false`, which was causing the `coin.out.scriptPubKey` to appear null in the child-most cache. This is just another testament to how tricky the coins cache code is to get right (as I was warned months ago by @sdaftuar). But that said, I feel pretty confident that this change is now correct.",
      "created_at" : "2019-12-03T20:42:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-561348373",
      "id" : 561348373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTM0ODM3Mw==",
      "updated_at" : "2019-12-03T20:42:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561348373",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r353418761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353418761"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it true that this loop is very slow with high dbcache? If so, a comment would be appropriate.\r\n\r\nOther than that I also agree with @ryanofsky comment to have \"separate methods like Flush() and Sync() or Flush() and Write()\". As a rule of thumb, if two functions have a completely different implementation, they should not be bundled in one and switched by a boolean.",
      "commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "created_at" : "2019-12-03T21:00:29Z",
      "diff_hunk" : "@@ -202,10 +202,24 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n     return true;\n }\n \n-bool CCoinsViewCache::Flush() {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock);\n-    cacheCoins.clear();\n-    cachedCoinsUsage = 0;\n+bool CCoinsViewCache::Flush(bool clear_cache) {\n+    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase*/ clear_cache);\n+    if (clear_cache) {\n+        cacheCoins.clear();\n+        cachedCoinsUsage = 0;\n+    } else {\n+        // Instead of clearing the cache, just clear the FRESH/DIRTY\n+        // flags, and erase any spent coins\n+        for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r353418761",
      "id" : 353418761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzQxODc2MQ==",
      "original_commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "original_position" : 63,
      "path" : "src/coins.cpp",
      "position" : 63,
      "pull_request_review_id" : 326444938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487",
      "updated_at" : "2019-12-03T21:00:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353418761",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r353872539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353872539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In my own benchmarking, I haven't seen anything to support the notion that this loop takes a long time. In the newest benchmarks (to be posted), calling `Flush(erase=true)` on a cache of size 3826 MB takes **7:17** and calling `Flush(erase=false)` on a cache of the same size takes **6:03** so the difference is either negligible or favorable. \r\n\r\nI got the times by subtracting timestamps from the last and second-to-last loglines below for each branch during snapshot activation.\r\n\r\n### Before this change\r\n```\r\n2019-12-03T23:18:26Z [snapshot] 63000000 coins loaded (99.39%, 3826 MB)\r\n2019-12-03T23:18:26Z [snapshot] loaded 63389760 (3877 MB) coins from snapshot 00000000000000000007316856900e76b4f7a9139cfbfba89842c8d196cd5f91\r\n2019-12-03T23:18:26Z [snapshot] flushing snapshot chainstate to disk\r\n2019-12-03T23:25:43Z [snapshot] validated snapshot (592 MB)\r\n```\r\n\r\n### After this change\r\n```\r\n2019-12-03T23:48:09Z [snapshot] 63000000 coins loaded (99.39%, 3826 MB)\r\n2019-12-03T23:48:10Z [snapshot] loaded 63389760 (3877 MB) coins from snapshot 00000000000000000007316856900e76b4f7a9139cfbfba89842c8d196cd5f91\r\n2019-12-03T23:48:10Z [snapshot] flushing snapshot chainstate to disk\r\n2019-12-03T23:54:13Z [snapshot] validated snapshot (3877 MB)\r\n```\r\n\r\n---\r\n\r\nI'll make the Flush() + Sync() change.",
      "commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "created_at" : "2019-12-04T17:10:23Z",
      "diff_hunk" : "@@ -202,10 +202,24 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n     return true;\n }\n \n-bool CCoinsViewCache::Flush() {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock);\n-    cacheCoins.clear();\n-    cachedCoinsUsage = 0;\n+bool CCoinsViewCache::Flush(bool clear_cache) {\n+    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase*/ clear_cache);\n+    if (clear_cache) {\n+        cacheCoins.clear();\n+        cachedCoinsUsage = 0;\n+    } else {\n+        // Instead of clearing the cache, just clear the FRESH/DIRTY\n+        // flags, and erase any spent coins\n+        for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#discussion_r353872539",
      "id" : 353872539,
      "in_reply_to_id" : 353418761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Mzg3MjUzOQ==",
      "original_commit_id" : "1e68aad46ed122c85ed60e1529c6cf512bbefa86",
      "original_position" : 63,
      "path" : "src/coins.cpp",
      "position" : 63,
      "pull_request_review_id" : 327012115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17487",
      "updated_at" : "2019-12-04T17:10:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353872539",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Latest round of benchmarks for the current tip of this branch continues to show good performance improvements for UTXO snapshot load, even on SSD. (same setup as https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-557595582)\r\n\r\n```\r\nhost         tag                      time       time% maxmem  cpu%  dbcache\r\nbench-ssd-4  bench/au.no-erase.1      43:27.79   0.98  6572.45MB 137%  5000MB\r\nbench-ssd-4  bench/au.no-erase.1      44:10.18   1.00  6690.36MB 135%  5000MB\r\nbench-ssd-4  utxo-dumpload.54         32:59.07   0.75  6733.55MB 173%  5000MB\r\nbench-ssd-4  utxo-dumpload.54         33:19.00   0.75  6725.27MB 171%  5000MB\r\n\r\nbench-ssd-5  utxo-dumpload.54         31:32.39   0.60  6769.57MB 182%  5000MB\r\nbench-ssd-5  utxo-dumpload.54         31:11.39   0.60  6699.07MB 183%  5000MB\r\nbench-ssd-5  bench/au.no-erase.1      41:41.13   0.80  6772.39MB 142%  5000MB\r\nbench-ssd-5  bench/au.no-erase.1      52:16.76   1.00  6567.82MB 114%  5000MB\r\n\r\nbench-hdd-3  bench/au.no-erase.1      4:37:10    1.00  6569.48MB 21%   5000MB\r\nbench-hdd-3  bench/au.no-erase.1      4:36:03    1.00  6523.61MB 21%   5000MB\r\nbench-hdd-3  utxo-dumpload.54         1:30:22    0.33  6705.20MB 63%   5000MB\r\nbench-hdd-3  utxo-dumpload.54         1:36:20    0.35  6735.74MB 59%   5000MB\r\n```",
      "created_at" : "2019-12-04T17:12:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-561741590",
      "id" : 561741590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc0MTU5MA==",
      "updated_at" : "2019-12-04T17:12:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561741590",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've split `Flush(bool erase)` into `Sync()` and `Flush()` as requested by @ryanofsky @MarcoFalke. ([changes](https://github.com/bitcoin/bitcoin/compare/1e68aad46ed122c85ed60e1529c6cf512bbefa86..eebaca7620bbd0af0ec385c6c7d47b2b4b524d55))",
      "created_at" : "2019-12-05T16:53:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-562216092",
      "id" : 562216092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjIxNjA5Mg==",
      "updated_at" : "2019-12-05T16:53:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562216092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Review club notes: https://bitcoincore.reviews/17487.html",
      "created_at" : "2020-01-27T21:02:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17487#issuecomment-578950782",
      "id" : 578950782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17487",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODk1MDc4Mg==",
      "updated_at" : "2020-01-27T21:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578950782",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
