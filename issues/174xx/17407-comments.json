[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343916849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343916849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Due to RPC requests only being served after `SetRPCWarmupFinished` even after mempool is switched to a struct initialized during init sequence, it shouldn't never be null (but better to be secure if we refactor our init logic)",
      "commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "created_at" : "2019-11-07T22:53:02Z",
      "diff_hunk" : "@@ -518,7 +518,9 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         fVerbose = request.params[0].get_bool();\n \n-    return MempoolToJSON(::mempool, fVerbose);\n+    const CTxMemPool* tx_pool = MempoolInstance();\n+    CHECK_NONFATAL(tx_pool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343916849",
      "id" : 343916849,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzkxNjg0OQ==",
      "original_commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "original_position" : 6,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 6,
      "pull_request_review_id" : 313691267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407",
      "updated_at" : "2019-11-07T22:58:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343916849",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Going further in this direction, what would be the next steps ? Passing a mempool pointer to g_chainstate ?\r\n\r\ngood question. I have decided against that to not interwind chainstate (consensus) with mempool (policy). Otherwise this should be a member function: `CChainState::GetMempool`.",
      "created_at" : "2019-11-07T23:03:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#issuecomment-551306580",
      "id" : 551306580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17407",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTMwNjU4MA==",
      "updated_at" : "2019-11-07T23:03:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551306580",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343920529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343920529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, obviously this should be adjusted when the mempool is truly optional. However I don't see the reason to add dead code right now.",
      "commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "created_at" : "2019-11-07T23:04:40Z",
      "diff_hunk" : "@@ -518,7 +518,9 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         fVerbose = request.params[0].get_bool();\n \n-    return MempoolToJSON(::mempool, fVerbose);\n+    const CTxMemPool* tx_pool = MempoolInstance();\n+    CHECK_NONFATAL(tx_pool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343920529",
      "id" : 343920529,
      "in_reply_to_id" : 343916849,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzkyMDUyOQ==",
      "original_commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "original_position" : 6,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 6,
      "pull_request_review_id" : 313695846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407",
      "updated_at" : "2019-11-07T23:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343920529",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343922507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343922507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My point was more currently the `CHECK_FATAL` is useless because RPC server accepting requests is the last thing in our init sequence. `CHECK_FATAL` hitting  would be a glaring logic error.",
      "commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "created_at" : "2019-11-07T23:11:26Z",
      "diff_hunk" : "@@ -518,7 +518,9 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         fVerbose = request.params[0].get_bool();\n \n-    return MempoolToJSON(::mempool, fVerbose);\n+    const CTxMemPool* tx_pool = MempoolInstance();\n+    CHECK_NONFATAL(tx_pool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343922507",
      "id" : 343922507,
      "in_reply_to_id" : 343916849,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzkyMjUwNw==",
      "original_commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "original_position" : 6,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 6,
      "pull_request_review_id" : 313698437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407",
      "updated_at" : "2019-11-07T23:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343922507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I have decided against that to not interwind chainstate (consensus) with mempool (policy)\r\n\r\nThat means keeping `::mempool` as a global on the long-term? Anyway better to process incrementally, curious of your next PRs on this.",
      "created_at" : "2019-11-07T23:15:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#issuecomment-551309887",
      "id" : 551309887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17407",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTMwOTg4Nw==",
      "updated_at" : "2019-11-07T23:15:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551309887",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343924679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343924679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> CHECK_FATAL is useless\r\n\r\nCHECK_NONFATAL is not useless. Its exact use case it to be used when the condition is assumed to be always true. This is the case here. See https://dev.visucore.com/bitcoin/doxygen/check_8h.html#a46a3e27097aa5e94bbf62075bad7016f\r\n\r\nI plan to introduce a `-nomempool` command line option, which makes the mempool go away (optional). When I fail to update this line of code, it will turn into a logic error and will properly throw a bug report.",
      "commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "created_at" : "2019-11-07T23:19:07Z",
      "diff_hunk" : "@@ -518,7 +518,9 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         fVerbose = request.params[0].get_bool();\n \n-    return MempoolToJSON(::mempool, fVerbose);\n+    const CTxMemPool* tx_pool = MempoolInstance();\n+    CHECK_NONFATAL(tx_pool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#discussion_r343924679",
      "id" : 343924679,
      "in_reply_to_id" : 343916849,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzkyNDY3OQ==",
      "original_commit_id" : "ae73b972231084303ef436338786fac916209be7",
      "original_position" : 6,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 6,
      "pull_request_review_id" : 313701191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17407",
      "updated_at" : "2019-11-07T23:19:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343924679",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That means keeping ::mempool as a global on the long-term? Anyway better to process incrementally, curious of your next PRs on this.\r\n\r\nYes, but it will become `Optional<CTxMemPool>` (or similar)",
      "created_at" : "2019-11-07T23:21:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17407#issuecomment-551311633",
      "id" : 551311633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17407",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTMxMTYzMw==",
      "updated_at" : "2019-11-07T23:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551311633",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
