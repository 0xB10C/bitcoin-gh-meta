[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24662](https://github.com/bitcoin/bitcoin/pull/24662) (addrman: Use system time instead of adjusted network time by MarcoFalke)\n* [#24464](https://github.com/bitcoin/bitcoin/pull/24464) (logging: Add severity level to logs by klementtan)\n* [#23829](https://github.com/bitcoin/bitcoin/pull/23829) (refactor: use braced init for integer literals instead of c style casts by PastaPastaPasta)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-29T14:20:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1081933481",
      "id" : 1081933481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585AfP6p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1081933481/reactions"
      },
      "updated_at" : "2022-03-29T14:20:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1081933481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r841620059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841620059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we use `current_time` as variable name here (like above), it'll save on another round of renaming when use of adjusted times throughout address relay is removed.",
      "commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "created_at" : "2022-04-04T11:09:39Z",
      "diff_hunk" : "@@ -2962,8 +2962,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         // Store the new addresses\n         std::vector<CAddress> vAddrOk;\n-        int64_t nNow = GetAdjustedTime();\n-        int64_t nSince = nNow - 10 * 60;\n+        const std::chrono::seconds adjusted_current_time{GetAdjustedTime()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r841620059",
      "id" : 841620059,
      "line" : 2965,
      "node_id" : "PRRC_kwDOABII584yKhpb",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 2965,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 6,
      "pull_request_review_id" : 930194401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841620059/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-04T11:09:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841620059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r841621451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841621451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is already named that way, see two lines below (2969)",
      "commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "created_at" : "2022-04-04T11:11:35Z",
      "diff_hunk" : "@@ -2962,8 +2962,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         // Store the new addresses\n         std::vector<CAddress> vAddrOk;\n-        int64_t nNow = GetAdjustedTime();\n-        int64_t nSince = nNow - 10 * 60;\n+        const std::chrono::seconds adjusted_current_time{GetAdjustedTime()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r841621451",
      "id" : 841621451,
      "in_reply_to_id" : 841620059,
      "line" : 2965,
      "node_id" : "PRRC_kwDOABII584yKh_L",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 2965,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 6,
      "pull_request_review_id" : 930196448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841621451/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-04T11:11:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841621451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r842693675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842693675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OK",
      "commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "created_at" : "2022-04-05T11:51:06Z",
      "diff_hunk" : "@@ -2962,8 +2962,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         // Store the new addresses\n         std::vector<CAddress> vAddrOk;\n-        int64_t nNow = GetAdjustedTime();\n-        int64_t nSince = nNow - 10 * 60;\n+        const std::chrono::seconds adjusted_current_time{GetAdjustedTime()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r842693675",
      "id" : 842693675,
      "in_reply_to_id" : 841620059,
      "line" : 2965,
      "node_id" : "PRRC_kwDOABII584yOnwr",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 2965,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 6,
      "pull_request_review_id" : 931728174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842693675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T11:51:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842693675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844474038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844474038"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could add include for` <chrono>` to addrman",
      "commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "created_at" : "2022-04-06T22:33:34Z",
      "diff_hunk" : "@@ -562,10 +562,11 @@ bool AddrManImpl::AddSingle(const CAddress& addr, const CNetAddr& source, int64_\n \n     if (pinfo) {\n         // periodically update nTime\n-        bool fCurrentlyOnline = (GetAdjustedTime() - addr.nTime < 24 * 60 * 60);\n-        int64_t nUpdateInterval = (fCurrentlyOnline ? 60 * 60 : 24 * 60 * 60);\n-        if (addr.nTime && (!pinfo->nTime || pinfo->nTime < addr.nTime - nUpdateInterval - nTimePenalty))\n+        const bool currently_online{std::chrono::seconds{GetAdjustedTime()} - std::chrono::seconds{addr.nTime} < 24h};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844474038",
      "id" : 844474038,
      "line" : 565,
      "node_id" : "PRRC_kwDOABII584yVaa2",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 565,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 7,
      "pull_request_review_id" : 934216373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844474038/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-06T22:55:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844474038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess I'm not entirely seeing the point of this? If we're trying to keep AdjustedTime, shouldn't we have a `GetChronoAdjustedTime()` rather than casting the result of the existing function? If we're trying to get rid of it, shouldn't we just do that, rather than fiddling with whether we treat it as a seconds count or not? If you just want to write constants as \"1h\" instead of \"60*60\", could do that via `count_seconds(1h)`?\r\n\r\nEDIT: I suppose you're not really doing much more than that anyway... Would be nice to have a motivation in the PR description I guess; the code changes don't really seem obviously better to me.",
      "created_at" : "2022-04-07T00:52:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1090968479",
      "id" : 1090968479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BBtuf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090968479/reactions"
      },
      "updated_at" : "2022-04-07T00:54:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090968479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844800308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844800308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This commit requires `using namespace std::chrono_literals;`, so I've `#include <util/time.h>` instead.",
      "commit_id" : "fadf5a70862f9bb8e582a2a0991148def94ad077",
      "created_at" : "2022-04-07T07:19:19Z",
      "diff_hunk" : "@@ -562,10 +562,11 @@ bool AddrManImpl::AddSingle(const CAddress& addr, const CNetAddr& source, int64_\n \n     if (pinfo) {\n         // periodically update nTime\n-        bool fCurrentlyOnline = (GetAdjustedTime() - addr.nTime < 24 * 60 * 60);\n-        int64_t nUpdateInterval = (fCurrentlyOnline ? 60 * 60 : 24 * 60 * 60);\n-        if (addr.nTime && (!pinfo->nTime || pinfo->nTime < addr.nTime - nUpdateInterval - nTimePenalty))\n+        const bool currently_online{std::chrono::seconds{GetAdjustedTime()} - std::chrono::seconds{addr.nTime} < 24h};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844800308",
      "id" : 844800308,
      "in_reply_to_id" : 844474038,
      "line" : 566,
      "node_id" : "PRRC_kwDOABII584yWqE0",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 566,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 15,
      "pull_request_review_id" : 934588784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844800308/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T07:19:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844800308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I guess I'm not entirely seeing the point of this? If we're trying to keep AdjustedTime, shouldn't we have a GetChronoAdjustedTime() rather than casting the result of the existing function? If we're trying to get rid of it, shouldn't we just do that, rather than fiddling with whether we treat it as a seconds count or not?\r\n\r\nI assume that adjusted time will be removed from addrman (see concept acks in the conflicting pull).\r\nOnce it is removed, it will be switched to use `std::chrono` (type safe, human readable, mockable).\r\nThis means that any `std::chrono::seconds{GetAdjustedTime()}` will be changed to `GetTime<std::chrono::seconds>()` (or a pre-existing variable storing the result). However, `CAddress::nTime` will *not* be converted to `std::chrono::seconds`, because it is a serialized field, which needs to be an exact-width unsigned type, not an implementation defined signed type.\r\n\r\n> If you just want to write constants as \"1h\" instead of \"60*60\", could do that via count_seconds(1h)?\r\n\r\nSure that is possible, but I don't see where it could make sense. `count_seconds` returns an integral value, so using it instead of `3600.0` still requires `double{count_seconds(1h)}`. I think `CountHoursDouble` is nicer, but I am happy to drop the commit.\r\nUsing `count_seconds` in `nUpdateInterval` could make sense, though I am assuming that `nTimePenalty` will use `std::chrono`  after commit 89a08ec82fe8547cfccccada62b59af01715d538 (from the conflicting pull) as well, so I think switching it now is fine. Happy to drop the commit, though.\r\n\r\n> Would be nice to have a motivation in the PR description I guess;\r\n\r\nI've added some text to each commit to motivate it, no code changes. Can be checked with `git range-diff bitcoin-core/master fa0e4eb108 fadf5a7086`.\r\n\r\n> the code changes don't really seem obviously better to me.\r\n\r\nThere are four commit, and I am happy to drop any or all of them.",
      "created_at" : "2022-04-07T07:38:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1091201421",
      "id" : 1091201421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BCmmN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091201421/reactions"
      },
      "updated_at" : "2022-04-07T07:38:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091201421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However, `CAddress::nTime` will _not_ be converted to `std::chrono::seconds`, because it is a serialized field, which needs to be an exact-width unsigned type, not an implementation defined signed type.\r\n\r\nCould have accessors that convert to chrono, or convert from chrono to uint32_t when serializing (and back when deserializing).\r\n\r\n[EDIT: can do the conversion when de/serializing as something like:\r\n\r\n```c++\r\nREADWRITECONVERT(obj.chrono_time, uint32_t,\r\n    [](const auto& t) { return static_cast<uint32_t>(count_seconds(t)); },\r\n    [](const uint32_t t) { return std::chrono::seconds{t}; }\r\n);\r\n```\r\n\r\nwith `READWRITECONVERT` defined as:\r\n\r\n```c++\r\n#define READWRITECONVERT(obj, type, from, to) (::ReadWriteConvert<type>(s, ser_action, obj, from, to))\r\n\r\ntemplate<typename X, typename From, typename To, typename Y, typename Stream> void ReadWriteConvert(Stream& s, CSerActionSerialize ser_action, const Y& obj, From from, To)\r\n{\r\n    X dummy{from(obj)};\r\n    ::Serialize(s, dummy);\r\n}\r\n\r\ntemplate<typename X, typename From, typename To, typename Y, typename Stream> void ReadWriteConvert(Stream& s, CSerActionUnserialize ser_action, Y& obj, From, To to)\r\n{\r\n    X dummy;\r\n    ::Unserialize(s, dummy);\r\n    obj = to(dummy);\r\n}\r\n```\r\n]",
      "created_at" : "2022-04-07T08:41:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1091331525",
      "id" : 1091331525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BDGXF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091331525/reactions"
      },
      "updated_at" : "2022-04-07T11:04:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091331525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844890121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844890121"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Having `std::chrono::seconds GetAdjustedTimeChrono() { return std::chrono::seconds{GetAdjustedTime()}; }` seems like it would make some of this less clunky?",
      "commit_id" : "fadf5a70862f9bb8e582a2a0991148def94ad077",
      "created_at" : "2022-04-07T08:57:15Z",
      "diff_hunk" : "@@ -562,10 +563,11 @@ bool AddrManImpl::AddSingle(const CAddress& addr, const CNetAddr& source, int64_\n \n     if (pinfo) {\n         // periodically update nTime\n-        bool fCurrentlyOnline = (GetAdjustedTime() - addr.nTime < 24 * 60 * 60);\n-        int64_t nUpdateInterval = (fCurrentlyOnline ? 60 * 60 : 24 * 60 * 60);\n-        if (addr.nTime && (!pinfo->nTime || pinfo->nTime < addr.nTime - nUpdateInterval - nTimePenalty))\n+        const bool currently_online{std::chrono::seconds{GetAdjustedTime()} - std::chrono::seconds{addr.nTime} < 24h};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r844890121",
      "id" : 844890121,
      "line" : 566,
      "node_id" : "PRRC_kwDOABII584yXAAJ",
      "original_commit_id" : "fadf5a70862f9bb8e582a2a0991148def94ad077",
      "original_line" : 566,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 15,
      "pull_request_review_id" : 934718344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844890121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T09:19:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844890121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r845004508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845004508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed commit for now",
      "commit_id" : "fa62c1be51411075a69141a562a9cf0fc20b2ef3",
      "created_at" : "2022-04-07T11:04:31Z",
      "diff_hunk" : "@@ -562,10 +562,11 @@ bool AddrManImpl::AddSingle(const CAddress& addr, const CNetAddr& source, int64_\n \n     if (pinfo) {\n         // periodically update nTime\n-        bool fCurrentlyOnline = (GetAdjustedTime() - addr.nTime < 24 * 60 * 60);\n-        int64_t nUpdateInterval = (fCurrentlyOnline ? 60 * 60 : 24 * 60 * 60);\n-        if (addr.nTime && (!pinfo->nTime || pinfo->nTime < addr.nTime - nUpdateInterval - nTimePenalty))\n+        const bool currently_online{std::chrono::seconds{GetAdjustedTime()} - std::chrono::seconds{addr.nTime} < 24h};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r845004508",
      "id" : 845004508,
      "in_reply_to_id" : 844474038,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yXb7c",
      "original_commit_id" : "fa0e4eb108b0a2a04bc703298626413587587168",
      "original_line" : 566,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 934881000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845004508/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T11:04:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845004508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review. At this point it seems easier to include the commits in the conflicting pull request.",
      "created_at" : "2022-04-07T11:34:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1091626312",
      "id" : 1091626312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BEOVI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091626312/reactions"
      },
      "updated_at" : "2022-04-07T11:34:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091626312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Going to reopen this with *all* refactoring changes split out. Switching adjusted time to system time can then be done with a trivial scripted-diff.",
      "created_at" : "2022-04-08T11:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1092759928",
      "id" : 1092759928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BIjF4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092759928/reactions"
      },
      "updated_at" : "2022-04-08T11:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092759928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like I accidentally wrote C++20 code, will try to recover ...",
      "created_at" : "2022-04-08T11:38:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1092771145",
      "id" : 1092771145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BIl1J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092771145/reactions"
      },
      "updated_at" : "2022-04-08T11:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092771145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Skimmed the changes so far, concept ACK.",
      "created_at" : "2022-04-08T11:56:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1092784011",
      "id" : 1092784011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BIo-L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092784011/reactions"
      },
      "updated_at" : "2022-04-08T11:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092784011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, but the \"Remove default time arguments\" seems to also be switching from adjusted time to GetTime, which seems like a bit more than a refactor for type safety?\r\n\r\n~Could do:~ EDIT: (no you can't)\r\n\r\n```c++\r\ntemplate<class Rep, class Period>\r\nstd::chrono::duration<Rep,Period> rand_dur(std::chrono::duration<Rep,Period> max) { ... }\r\n\r\ntemplate<class T>\r\nauto rand_seconds(T max) { return rand_dur<std::chrono::seconds>(max); }\r\n```",
      "created_at" : "2022-04-09T08:49:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1093823270",
      "id" : 1093823270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BMmsm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1093823270/reactions"
      },
      "updated_at" : "2022-04-09T08:50:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1093823270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks, made title more general, since it also includes serialize refactoring changes.\r\n\r\nI am still working on the \"clocks\" version of this and will push it when ready for evaluation.",
      "created_at" : "2022-04-09T08:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#issuecomment-1093825891",
      "id" : 1093825891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24697",
      "node_id" : "IC_kwDOABII585BMnVj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1093825891/reactions"
      },
      "updated_at" : "2022-04-09T08:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1093825891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846894601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846894601"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe make `NeverTried()` and `NeverSucceeded()` helpers for the `CountSeconds(m_*) == 0` checks to make the intent a little clearer?",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T01:56:50Z",
      "diff_hunk" : "@@ -64,34 +64,40 @@ int AddrInfo::GetBucketPosition(const uint256& nKey, bool fNew, int nBucket) con\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n-bool AddrInfo::IsTerrible(int64_t nNow) const\n+bool AddrInfo::IsTerrible(TimeSeconds now) const\n {\n-    if (m_last_try && m_last_try >= nNow - 60) // never remove things tried in the last minute\n+    if (CountSeconds(m_last_try) && m_last_try >= now - 1min) { // never remove things tried in the last minute\n         return false;\n+    }\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > now + 10min) { // came in a flying DeLorean\n         return true;\n+    }\n \n-    if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n+    if (CountSeconds(nTime) == 0 || now - nTime > ADDRMAN_HORIZON) { // not seen in recent history\n         return true;\n+    }\n \n-    if (m_last_success == 0 && nAttempts >= ADDRMAN_RETRIES) // tried N times and never a success\n+    if (CountSeconds(m_last_success) == 0 && nAttempts >= ADDRMAN_RETRIES) { // tried N times and never a success",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846894601",
      "id" : 846894601,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII584yepYJ",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 81,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 49,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846894601/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:06:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846894601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846896302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846896302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are the `nTime == 0` checks really needed?",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T02:03:11Z",
      "diff_hunk" : "@@ -64,34 +64,40 @@ int AddrInfo::GetBucketPosition(const uint256& nKey, bool fNew, int nBucket) con\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n-bool AddrInfo::IsTerrible(int64_t nNow) const\n+bool AddrInfo::IsTerrible(TimeSeconds now) const\n {\n-    if (m_last_try && m_last_try >= nNow - 60) // never remove things tried in the last minute\n+    if (CountSeconds(m_last_try) && m_last_try >= now - 1min) { // never remove things tried in the last minute\n         return false;\n+    }\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > now + 10min) { // came in a flying DeLorean\n         return true;\n+    }\n \n-    if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n+    if (CountSeconds(nTime) == 0 || now - nTime > ADDRMAN_HORIZON) { // not seen in recent history",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846896302",
      "id" : 846896302,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII584yepyu",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 77,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 44,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846896302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:06:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846896302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846897666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846897666"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`(pszDest ? 0.0 : CountHoursDouble( ... ))` ?\r\n\r\nWould it be better to have a `FormatDuration` function that takes a duration and return a string directly, or a couple of them with precisions of hours / seconds / milliseconds / microseconds?",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T02:08:22Z",
      "diff_hunk" : "@@ -453,10 +453,9 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         }\n     }\n \n-    /// debug print\n     LogPrint(BCLog::NET, \"trying connection %s lastseen=%.1fhrs\\n\",\n-        pszDest ? pszDest : addrConnect.ToString(),\n-        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n+             pszDest ? pszDest : addrConnect.ToString(),\n+             CountHoursDouble(pszDest ? 0h : AdjustedTime() - addrConnect.nTime));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846897666",
      "id" : 846897666,
      "line" : 458,
      "node_id" : "PRRC_kwDOABII584yeqIC",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 458,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 36,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846897666/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:06:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846897666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846898856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846898856"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe call these `MockableClock` and `MockableTimeSeconds` (or similar) so that if (when) we introduce a non-mockable (monotonic?) clock, it's always clear which one is which.",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T02:12:58Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846898856",
      "id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584yeqao",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846898856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:06:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846898856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846920222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would it be better to write something like `addr.n_Time = rand_uniform_delay(Now<TimeSeconds>(), /range=*/ 4*24h, /*offset=*/ -7*24h)` ? You can pick up the precision from the first argument that way. (Similar thing would work for the poisson delays, I think)",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T03:33:05Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846920222",
      "id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yevoe",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920222/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846920722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920722"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Apart from this one change here, I don't really see the point of the commit that drops the default time arg.",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T03:35:15Z",
      "diff_hunk" : "@@ -109,9 +109,10 @@ static void AddrManGetAddr(benchmark::Bench& bench)\n static void AddrManAddThenGood(benchmark::Bench& bench)\n {\n     auto markSomeAsGood = [](AddrMan& addrman) {\n+        const auto now{AdjustedTime()};\n         for (size_t source_i = 0; source_i < NUM_SOURCES; ++source_i) {\n             for (size_t addr_i = 0; addr_i < NUM_ADDRESSES_PER_SOURCE; ++addr_i) {\n-                addrman.Good(g_addresses[source_i][addr_i]);\n+                addrman.Good(g_addresses[source_i][addr_i], now);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r846920722",
      "id" : 846920722,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII584yevwS",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 115,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/bench/addrman.cpp",
      "position" : 8,
      "pull_request_review_id" : 937393873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920722/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T07:06:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846920722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847102110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847102110"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think there is a need to. A non-mockable clock is the system clock: `std::chrono::system_clock` (C++11) and `std::chrono::sys_seconds` (C++20). A monotonic clock is `std::chrono::steady_clock`.",
      "commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "created_at" : "2022-04-11T09:02:26Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847102110",
      "id" : 847102110,
      "in_reply_to_id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584yfcCe",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 937685334,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847102110/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T09:02:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847102110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847232473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847232473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe `rand_uniform_delay(Now<TimeSeconds>() - 7*24h, /*range=*/4*24h)` would be better?",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T11:40:28Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847232473",
      "id" : 847232473,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yf73Z",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 937867398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847232473/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T11:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847232473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847234532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234532"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is the only place where the value is compared against `0` with the trailing comment explaining the intent, so I don't think it makes sense to introduce a helper. A helper can be introduced when more places call it.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T11:43:10Z",
      "diff_hunk" : "@@ -64,34 +64,40 @@ int AddrInfo::GetBucketPosition(const uint256& nKey, bool fNew, int nBucket) con\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n-bool AddrInfo::IsTerrible(int64_t nNow) const\n+bool AddrInfo::IsTerrible(TimeSeconds now) const\n {\n-    if (m_last_try && m_last_try >= nNow - 60) // never remove things tried in the last minute\n+    if (CountSeconds(m_last_try) && m_last_try >= now - 1min) { // never remove things tried in the last minute\n         return false;\n+    }\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > now + 10min) { // came in a flying DeLorean\n         return true;\n+    }\n \n-    if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n+    if (CountSeconds(nTime) == 0 || now - nTime > ADDRMAN_HORIZON) { // not seen in recent history\n         return true;\n+    }\n \n-    if (m_last_success == 0 && nAttempts >= ADDRMAN_RETRIES) // tried N times and never a success\n+    if (CountSeconds(m_last_success) == 0 && nAttempts >= ADDRMAN_RETRIES) { // tried N times and never a success",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847234532",
      "id" : 847234532,
      "in_reply_to_id" : 846894601,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII584yf8Xk",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 81,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 49,
      "pull_request_review_id" : 937870272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234532/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T11:43:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847234662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234662"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, removed code.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T11:43:20Z",
      "diff_hunk" : "@@ -64,34 +64,40 @@ int AddrInfo::GetBucketPosition(const uint256& nKey, bool fNew, int nBucket) con\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n-bool AddrInfo::IsTerrible(int64_t nNow) const\n+bool AddrInfo::IsTerrible(TimeSeconds now) const\n {\n-    if (m_last_try && m_last_try >= nNow - 60) // never remove things tried in the last minute\n+    if (CountSeconds(m_last_try) && m_last_try >= now - 1min) { // never remove things tried in the last minute\n         return false;\n+    }\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > now + 10min) { // came in a flying DeLorean\n         return true;\n+    }\n \n-    if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n+    if (CountSeconds(nTime) == 0 || now - nTime > ADDRMAN_HORIZON) { // not seen in recent history",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847234662",
      "id" : 847234662,
      "in_reply_to_id" : 846896302,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yf8Zm",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 77,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 937870456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234662/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T11:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847234662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847238155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847238155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't like the implicit logic, relying on a \"global\" (the time), so I removed the default arg. But I am happy to drop the commit.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T11:47:51Z",
      "diff_hunk" : "@@ -109,9 +109,10 @@ static void AddrManGetAddr(benchmark::Bench& bench)\n static void AddrManAddThenGood(benchmark::Bench& bench)\n {\n     auto markSomeAsGood = [](AddrMan& addrman) {\n+        const auto now{AdjustedTime()};\n         for (size_t source_i = 0; source_i < NUM_SOURCES; ++source_i) {\n             for (size_t addr_i = 0; addr_i < NUM_ADDRESSES_PER_SOURCE; ++addr_i) {\n-                addrman.Good(g_addresses[source_i][addr_i]);\n+                addrman.Good(g_addresses[source_i][addr_i], now);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847238155",
      "id" : 847238155,
      "in_reply_to_id" : 846920722,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII584yf9QL",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 115,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/bench/addrman.cpp",
      "position" : 17,
      "pull_request_review_id" : 937875390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847238155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T11:47:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847238155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847246760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847246760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> You can pick up the precision from the first argument that way\r\n\r\nI don't think this is possible. If you want a uniform delay in `[2h, 3h)`, typing `rand_uniform_delay(2h, 1h)` will produce the *wrong* result.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T11:58:57Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847246760",
      "id" : 847246760,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yf_Wo",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 937887701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847246760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T11:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847246760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847272222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847272222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I had the same intuition -- had to look up the standard to check AdjustedTime() would even be called each time rather than just once at startup -- but the refactor makes it a lot more wordy, so it just doesn't seem like a win to me *shrug*",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:29:46Z",
      "diff_hunk" : "@@ -109,9 +109,10 @@ static void AddrManGetAddr(benchmark::Bench& bench)\n static void AddrManAddThenGood(benchmark::Bench& bench)\n {\n     auto markSomeAsGood = [](AddrMan& addrman) {\n+        const auto now{AdjustedTime()};\n         for (size_t source_i = 0; source_i < NUM_SOURCES; ++source_i) {\n             for (size_t addr_i = 0; addr_i < NUM_ADDRESSES_PER_SOURCE; ++addr_i) {\n-                addrman.Good(g_addresses[source_i][addr_i]);\n+                addrman.Good(g_addresses[source_i][addr_i], now);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847272222",
      "id" : 847272222,
      "in_reply_to_id" : 846920722,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII584ygFke",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 115,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/bench/addrman.cpp",
      "position" : 17,
      "pull_request_review_id" : 937924217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847272222/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847272222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847275426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847275426"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I meant something like:\r\n\r\n```c++\r\ntemplate<typename TP>\r\nTP rand_uniform_delay(const TP& base, typename TP::duration range)\r\n{\r\n    return base + TP::duration{rng.randrange(range.count())};\r\n}\r\n```\r\n\r\nso the invocation above would be `rand_uniform_delay(TimeSeconds{2h}, 1h)` ? (EDIT: or `rand_uniform_delay(Now<TimeSeconds()> + 2h, /*range=*/ 1h)`)",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:33:32Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847275426",
      "id" : 847275426,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584ygGWi",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 937928791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847275426/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847275426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847282508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847282508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will still break if you call `tp_2 = rand_uniform_delay(tp_1, 1h)` and `tp_1` is of type `TimeHours` in this context, and `tp_2` of type `TimeSeconds`. If you want to make this templated, I think the `std::common_type` approach that `GetRandDur` uses is the only way. Though, as this forces you to specify the precision, you might as well put the precision right into the function name.\r\n\r\nMoreover, I am not sure if we should force time points here. After all this is just a duration and it is up to the caller to apply it to a time point or further use it as a duration.\r\n\r\nSo I think all I can do here is rename `rand_seconds` to `rand_uniform_seconds`.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:41:36Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847282508",
      "id" : 847282508,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584ygIFM",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 937938930,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847282508/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:41:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847282508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847285734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847285734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, there's certainly no \"need\" to -- you could call it `HumptyDumpty` and `WallSeconds` and it would still work...\r\n\r\nBut the C++ clocks all have an adjective describing their main point (there's also gps_clock and utc_clock and high_resolution_clock and tai_clock and file_clock). It seems like a sensible convention to follow; having `GetTime()` be mockable and `GetTimeSeconds()` be non-mockable has certainly confused me previously...",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:45:16Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847285734",
      "id" : 847285734,
      "in_reply_to_id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ygI3m",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 937943746,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847285734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847285734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847286383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847286383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I think it was mostly the `nTime == 0` ones that were triggering my noise threshold.",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:45:57Z",
      "diff_hunk" : "@@ -64,34 +64,40 @@ int AddrInfo::GetBucketPosition(const uint256& nKey, bool fNew, int nBucket) con\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n-bool AddrInfo::IsTerrible(int64_t nNow) const\n+bool AddrInfo::IsTerrible(TimeSeconds now) const\n {\n-    if (m_last_try && m_last_try >= nNow - 60) // never remove things tried in the last minute\n+    if (CountSeconds(m_last_try) && m_last_try >= now - 1min) { // never remove things tried in the last minute\n         return false;\n+    }\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > now + 10min) { // came in a flying DeLorean\n         return true;\n+    }\n \n-    if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n+    if (CountSeconds(nTime) == 0 || now - nTime > ADDRMAN_HORIZON) { // not seen in recent history\n         return true;\n+    }\n \n-    if (m_last_success == 0 && nAttempts >= ADDRMAN_RETRIES) // tried N times and never a success\n+    if (CountSeconds(m_last_success) == 0 && nAttempts >= ADDRMAN_RETRIES) { // tried N times and never a success",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847286383",
      "id" : 847286383,
      "in_reply_to_id" : 846894601,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII584ygJBv",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 81,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 49,
      "pull_request_review_id" : 937944628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847286383/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:45:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847286383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847296198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847296198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> certainly confused me previously...\r\n\r\nMe too, but I think the solution to that is to rename the function names around system time to mention \"system\" or \"sys\", similar to what is done in `std::chrono::` itself. Maybe even replace all of them with `std::chrono::system_clock`?\r\n\r\nI think there are almost no use cases for a system clock in our codebase. Debug logging might be the only use case, so forcing all other places that deal with time to specify `MockableTimeSeconds` seems verbosity for no benefit. If the only use case of the system clock is for debug logging, which is likely disabled anyway, and one accidentally uses a mockable clock, no user will notice a difference. The only difference could happen in tests, but even there, most tests don't rely on mocktime, so I am highly dubious of any benefits.\r\n\r\n",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T12:56:03Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847296198",
      "id" : 847296198,
      "in_reply_to_id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ygLbG",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 937958502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847296198/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T12:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847296198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847357008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357008"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we definitely want `system_clock` for (a) logging, and (b) implementing `mockable_clock`; I think we want a non-mockable clock, but maybe would prefer `steady_clock` for scheduling (currently uses `system_clock`), benchmarking, gui responsiveness(?), RPC call duration(?).\r\n\r\nCalling it `mock_seconds` by analogy to `sys_seconds` seems pretty fine if you want something shorter. `const auto now = Now<mock_seconds>();` or more normally (when you don't need to hash/serialize the value in seconds), `const auto now = mock_clock.now();` (or `MockSec` if you want camel case and even shorter)\r\n\r\n\"If .. one accidentally uses a mockable clock, no user will notice a difference. The only difference could happen in tests\" -- is true for `GetTime()` vs `GetTimeSeconds()` too...",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T13:55:52Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847357008",
      "id" : 847357008,
      "in_reply_to_id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ygaRQ",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 938048346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357008/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T13:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847357023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe something that can be done after C++20 with https://en.cppreference.com/w/cpp/chrono/duration/operator_ltlt ? Not sure if worth it right now",
      "commit_id" : "7771cc853cd0c5d655c4ea7adef01aa43a84f999",
      "created_at" : "2022-04-11T13:55:53Z",
      "diff_hunk" : "@@ -453,10 +453,9 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         }\n     }\n \n-    /// debug print\n     LogPrint(BCLog::NET, \"trying connection %s lastseen=%.1fhrs\\n\",\n-        pszDest ? pszDest : addrConnect.ToString(),\n-        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n+             pszDest ? pszDest : addrConnect.ToString(),\n+             CountHoursDouble(pszDest ? 0h : AdjustedTime() - addrConnect.nTime));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847357023",
      "id" : 847357023,
      "in_reply_to_id" : 846897666,
      "line" : 458,
      "node_id" : "PRRC_kwDOABII584ygaRf",
      "original_commit_id" : "fa0c9d8ce1948f7bc714c36891e54871bf86a1d6",
      "original_line" : 458,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 36,
      "pull_request_review_id" : 938048369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357023/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T13:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847357023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847382846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847382846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Using `TimeHours` would already be a mistake: if you're measuring time only with a precision of hours, you've already got +/- 30min error to whatever real time you're trying to target.\r\n\r\nWe should be using full precision time points (`MockClock::time_point`) everywhere we can; only reason not to do that for `addr.nTime` is that we only have seconds since the epoch in the serialization format, and using higher precision data when we throw it through the hash on the first run and lower precision data on later runs would be confusing.",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-11T14:20:21Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847382846",
      "id" : 847382846,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yggk-",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 938086297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847382846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T14:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847382846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847439163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847439163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmmm, one way to implement \"I want to run this exactly once per hour, but at a uniform random time within that hour\" is to have `tp_2` to be the execution time in seconds and `tp_1` be `tp_2` cast to hours `+ 1h`.\r\n\r\nThe code with `rand_uniform_delay` would look like:\r\n\r\n```\r\ntp_2 = rand_uniform_delay(std::chrono::time_point_cast<TimeSeconds>(std::chrono::time_point_cast<TimeHours>(tp_2 + 1h)), 1h)\r\n```\r\n\r\nor \r\n\r\n```\r\ntp_2 = rand_uniform_delay<TimeSeconds>(std::chrono::time_point_cast<TimeHours>(tp_2 + 1h), 1h) // not sure if this compiles\r\n```\r\n\r\nWhereas with `rand_uniform_seconds` it would look like:\r\n\r\n```\r\ntp_2 = rand_uniform_seconds(std::chrono::time_point_cast<TimeHours>(tp_2 + 1h), 1h)\r\n```\r\n\r\nor (if durations are used)\r\n\r\n```\r\ntp_2 = std::chrono::time_point_cast<TimeHours>(tp_2 + 1h) + rand_uniform_seconds(0h, 1h)\r\n```\r\n\r\nI am not sure how often quantization is used with random delays, but I wouldn't call it a \"mistake\" to intentionally quantize time.\r\n\r\nAbsent a use case for quantization, `rand_uniform_seconds` still is a bit less code/less `<>`. Moreover it can be used for non-time-point \"plain\" durations. So I have a slight preference for it. If there was a use case for quantization, it would also be safer.",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-11T15:12:06Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847439163",
      "id" : 847439163,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yguU7",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 938167871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847439163/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T15:12:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847439163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847445238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847445238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think we definitely want system_clock for (a) logging, and (b) implementing mockable_clock; I think we want a non-mockable clock, but maybe would prefer steady_clock for scheduling (currently uses system_clock), benchmarking, gui responsiveness(?), RPC call duration(?).\r\n\r\nAgree.\r\n\r\n> Calling it mock[...]\r\n\r\nMy general thinking is that test code shouldn't distract and clutter the main code, if possible. So for example, any test logic should ideally be implemented in test code, outside the main code. Also, naming should be done ignoring the test logic, if possible.\r\n\r\nIt looks like we agree on the logic changes, but disagree on the name. Maybe other reviewers could chime in?",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-11T15:17:45Z",
      "diff_hunk" : "@@ -14,18 +14,29 @@\n \n using namespace std::chrono_literals;\n \n+/** Mockable clock */\n+struct Clock : std::chrono::system_clock {\n+    using time_point = std::chrono::time_point<Clock>;\n+    /** Return current system time or mocked time, if set */\n+    static time_point now() noexcept;\n+    static std::time_t to_time_t(const time_point&) = delete; // unused\n+    static time_point from_time_t(std::time_t) = delete;      // unused\n+};\n+using TimeSeconds = std::chrono::time_point<Clock, std::chrono::seconds>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847445238",
      "id" : 847445238,
      "in_reply_to_id" : 846898856,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ygvz2",
      "original_commit_id" : "fa4e9ca6512443271d5ef272372d8d4f322718e4",
      "original_line" : 25,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 12,
      "pull_request_review_id" : 938176164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847445238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T15:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847445238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847546319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847546319"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Hmmm, one way to implement \"I want to run this exactly once per hour, but at a uniform random time within that hour\" is to have `tp_2` to be the execution time in seconds and `tp_1` be `tp_2` cast to hours `+ 1h`.\r\n\r\nIs there anywhere that we do that? Everything I've come across is a variation on `GetTime() + random(range) + offset`.\r\n\r\nI'd probably prefer to write that as:\r\n\r\n```c++\r\nwhen = rand_uniform_delay(round_up(now(), 1h), 1h);\r\n   \r\ntemplate<typename TP>\r\nTP round_up(TP tp, typename TP::duration dur)\r\n{\r\n    return tp + dur - (tp.time_since_epoch() % dur);\r\n}\r\n```\r\n\r\nsince then you don't have to declare a new type if you want things every 90 minutes instead of every hour. Don't think you can get a compile time check that `dur > 0` though (at least with C++17)\r\n\r\n> ```\r\n> tp_2 = rand_uniform_seconds(std::chrono::time_point_cast<TimeHours>(tp_2 + 1h), 1h)\r\n> ```\r\n\r\nI guess I don't really think you should ever want/need to use a `time_point_cast` outside of util/time.h/cpp.\r\n\r\n> I am not sure how often quantization is used with random delays, but I wouldn't call it a \"mistake\" to intentionally quantize time.\r\n\r\nNo, the mistake's doing it via the `time_point` object. The whole benefit of durations and time_points is the compiler can automatically deal with you specifying things in minutes or hours without having to do manual conversions all the time.\r\n\r\n> Absent a use case for quantization, `rand_uniform_seconds` still is a bit less code/less `<>`.\r\n\r\nMaybe I'm misunderstanding what `rand_uniform_seconds` is, but:\r\n\r\n```c++\r\nauto rand_seconds(std::chrono::seconds max) noexcept { return decltype(max){randrange(max.count())}; }\r\nauto rand_millis(std::chrono::milliseconds max) noexcept { return decltype(max){randrange(max.count())}; }\r\nauto rand_micros(std::chrono::microseconds max) noexcept { return decltype(max){randrange(max.count())}; }\r\n```\r\n\r\ndoesn't seem like notably less code than:\r\n\r\n```c++\r\ntemplate<typename TP>\r\nauto rand_uniform_delay(TP tp, typename TP::duration range) noexcept\r\n{ \r\n    return tp + (typename TP::duration){randrange(range.count())};\r\n}\r\n```\r\n\r\n> Moreover it can be used for non-time-point \"plain\" durations. So I have a slight preference for it. If there was a use case for quantization, it would also be safer.\r\n\r\nI think all the current uses of randrange against chrono inputs are getting added to `GetTime()` of one sort or another, so I don't think there'd be a use case for that once the conversion to time_points is done.\r\n",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-11T16:56:51Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r847546319",
      "id" : 847546319,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yhIfP",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 938320235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847546319/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T16:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847546319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848094959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848094959"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think all the current uses of randrange against chrono inputs are getting added to GetTime() of one sort or another, so I don't think there'd be a use case for that once the conversion to time_points is done.\r\n\r\n`scheduleFromNow` takes a duration, not a time point, and I don't think this is going to change as we start using clocks and time points.",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-12T07:47:47Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848094959",
      "id" : 848094959,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584yjObv",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 939075469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848094959/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T07:47:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848094959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848602582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848602582"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`scheduleFromNow` is already an inline function that takes a duration and adds it to a time point in order to call `schedule`.",
      "commit_id" : "e205cb0a7266e416fc2c2a3c9e71ddc6e332019a",
      "created_at" : "2022-04-12T15:55:49Z",
      "diff_hunk" : "@@ -1801,9 +1801,8 @@ void CConnman::ThreadDNSAddressSeed()\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n             if (LookupHost(host, vIPs, nMaxIPs, true)) {\n                 for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = Now<TimeSeconds>() - 3 * 24h - rng.rand_seconds(4 * 24h); // use a random age between 3 and 7 days old",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848602582",
      "id" : 848602582,
      "in_reply_to_id" : 846920222,
      "line" : 1805,
      "node_id" : "PRRC_kwDOABII584ylKXW",
      "original_commit_id" : "fa1b64a0924b77f0ff8b9445c87d8e869b3f219c",
      "original_line" : 1805,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 59,
      "pull_request_review_id" : 939789046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24697",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848602582/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T15:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848602582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
