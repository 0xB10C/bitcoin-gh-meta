{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This PR is a cleanup. It removes unnecessary code that doesn't do much.\r\nI'm going to abbreviate CIFMAC = `CheckInputsFromMempoolAndCache` because it's so long.\r\n\r\n#### Why CIFMAC is unnecessary\r\nValidation of 1 tx proceeds as follows in MemPoolAccept:\r\n(1) `PreChecks` ensures that Coins are available (among other things). (2) `PolicyScriptChecks` and (3)`ConsensusScriptChecks` run script/signature verification. They require Coins for their scriptPubKeys.\r\nWe hold `cs_main` and `pool.cs` locks throughout.\r\n\r\nCIFMAC is a helper called by `ConsensusScriptChecks` and does mostly redundant things:\r\n- Locks `pool.cs`: we already have it. `ConsensusScriptChecks` requires this lock. I've added annotations to make this clear.\r\n- Asserts tx not coinbase: CIFMAC is only called from `MemPoolAccept`. !coinbase is the first thing checked in `PreChecks`.\r\n- For each coin, assert `coin.IsSpent()`: there's no way for the coin to be spent between `PreChecks` and now, since we've been holding the `cs_main` and `pool.cs` locks the whole time.\r\n- For each coin, look up the parent transaction and make sure the stuff is well-formed and matches: This is the `CoinsView`'s responsibility so I'm not sure why it's done here.\r\n\r\nOne could argue that redundant checks are harmless, but it gets in the way of enabling some other nice things.\r\n\r\n#### Some extra motivation for removing CIFMAC\r\nIt starts with a P and rhymes with cabbage validation. This is needed for #20833. Ideally, we should avoid running script checks if we don't have to, because they're expensive. My proposal in [PR] is to run all `PreChecks` first, populating the `CCoinsViewMemPool` with what Coins are spent + created by each transaction, then running script checks for all of them.\r\nThe issue with checking Coins again in `ConsensusScriptChecks` is that we'd need to revert the CoinsView to what it was before each transaction, otherwise it would complain that a Coin is spent because _this_ transaction spends it.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834/comments",
   "created_at" : "2021-01-03T07:17:17Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834",
   "id" : 777588231,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "description" : null,
         "id" : 135961,
         "name" : "Refactoring",
         "node_id" : "MDU6TGFiZWwxMzU5NjE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      },
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTQ3ODQyODc5",
   "number" : 20834,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/20834.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/20834.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20834"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "cleanup: remove CheckInputsFromMempoolAndCache",
   "updated_at" : "2021-01-03T08:29:04Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
      "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
      "followers_url" : "https://api.github.com/users/glozow/followers",
      "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/glozow",
      "id" : 25183001,
      "login" : "glozow",
      "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
      "organizations_url" : "https://api.github.com/users/glozow/orgs",
      "received_events_url" : "https://api.github.com/users/glozow/received_events",
      "repos_url" : "https://api.github.com/users/glozow/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/glozow"
   }
}
