[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is 4e8803e22f0cd8a71f7f81f67ed0137a667b63ce\r\n\r\n> When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n\r\nFor more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core",
      "created_at" : "2021-01-03T20:39:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753672969",
      "id" : 753672969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY3Mjk2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T20:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753672969",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is [4e8803e](https://github.com/bitcoin/bitcoin/commit/4e8803e22f0cd8a71f7f81f67ed0137a667b63ce)\r\n> \r\n> > When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n> \r\n> For more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core\r\n\r\noooh i see. Thank you! ",
      "created_at" : "2021-01-03T22:06:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753682758",
      "id" : 753682758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY4Mjc1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T22:06:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753682758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551475077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Any reason you bumped up the blocks generated from 110 to 200?",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T17:59:32Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551475077",
      "id" : 551475077,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ3NTA3Nw==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 72,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 54,
      "pull_request_review_id" : 561226088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551511734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734"
         }
      },
      "author_association" : "NONE",
      "body" : "I bumped it from 110 blocks because I was getting premature spend when using 110 blocks. I think its because the utxos are sorted by value so their confirmations are somewhat arbitrary in the self._utxos. 200 seemed to be a quick and dirty fix.",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T19:11:50Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551511734",
      "id" : 551511734,
      "in_reply_to_id" : 551475077,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMTczNA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 72,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 54,
      "pull_request_review_id" : 561272517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551576038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It doesn't seem totally related to what's being tested here, but one thing I noticed while reviewing:\r\n\r\nDo you know why, in the original code, `rpc_generateblock.py` sometimes does  `sendrawtransaction` and other times does not, before `generateblock`?\r\n\r\nie here `signed_raw2` was never submitted to the `node` with `sendrawtransaction`, while `txid1` was. \r\n\r\n",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T21:22:13Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551576038",
      "id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3NjAzOA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 99,
      "pull_request_review_id" : 561354148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551578672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, you're right that it's bc the utxos are sorted by value in `MiniWallet` and a lot of them will be immature coin bases. I think what you have is good. But what I've usually done, and seen done before, is generating the utxos you need to spend with `mini_wallet.generate()`, and then generating 100 block with node, `node.generate(100)` so that all the utxos in `MiniWallet` are mature and good to go",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T21:27:39Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551578672",
      "id" : 551578672,
      "in_reply_to_id" : 551475077,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3ODY3Mg==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 72,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 54,
      "pull_request_review_id" : 561357345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551605654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654"
         }
      },
      "author_association" : "NONE",
      "body" : "I am not entirely sure, but my assumption while reading through the code was that it was to save a line of code.",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T22:25:40Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551605654",
      "id" : 551605654,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNTY1NA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 99,
      "pull_request_review_id" : 561391326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551607299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I pretty much approached with a similar style as described by @mjdietzx in `mempool_limit.py` as well to prevent premature spend error ",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T22:29:16Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551607299",
      "id" : 551607299,
      "in_reply_to_id" : 551475077,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNzI5OQ==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 72,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 54,
      "pull_request_review_id" : 561393240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551609818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818"
         }
      },
      "author_association" : "NONE",
      "body" : "ya that certainly seems like a more coherent approach",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-04T22:35:35Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551609818",
      "id" : 551609818,
      "in_reply_to_id" : 551475077,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwOTgxOA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 72,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 54,
      "pull_request_review_id" : 561396213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will add the tx to the mempool, which is not wanted. the raw tx should only be passed to the miner",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T09:56:48Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828175",
      "id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODE3NQ==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561654162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would be nice to use named arguments",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T09:57:24Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828527",
      "id" : 551828527,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODUyNw==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 76,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561654611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552044318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "By \"not wanted\" you mean unnecessary @MarcoFalke? I only ask for my own understanding as the test passes in its current form.",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T16:29:19Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552044318",
      "id" : 552044318,
      "in_reply_to_id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NDMxOA==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561939374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T21:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`sendrawtransaction` submits the tx to mempool, while `createrawtransaction` + `signrawtransaction` merely creates the raw tx objects. Here, in the original test, tx1 is submitted and tx2 is not. It's calling `generateblock()` with the whole raw tx for tx2 and just the txid for tx1.\r\n\r\nSo, actually, your implementation doesn't really match what was there before. Be careful - [`generateblock`](https://github.com/bitcoin/bitcoin/blob/417f95fa453d97087a33d4176523ab278bef21a1/src/rpc/mining.cpp#L295) accepts hexstrings that can represent either txids (when the tx is already in mempool) or raw transactions.",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T23:13:11Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254246",
      "id" : 552254246,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDI0Ng==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 99,
      "pull_request_review_id" : 562204408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T23:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You can keep this as just 10. It'll fix your premature spend error; 10 outputs is enough for this test.\r\n```\r\nminiwallet.generate(10)\r\n```\r\n\r\n(oops, I put the suggestion on the wrong line - I mean only generate 10 on the miniwallet)",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T23:14:34Z",
      "diff_hunk" : "@@ -51,37 +69,43 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254730",
      "id" : 552254730,
      "line" : 74,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDczMA==",
      "original_commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "original_line" : 74,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 56,
      "pull_request_review_id" : 562204408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T23:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552269311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552269311"
         }
      },
      "author_association" : "NONE",
      "body" : "I did notice that but if this test is testing for out of order transactions isn't the distinction between a raw transaction and a transaction id arbitrary?",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T23:53:11Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552269311",
      "id" : 552269311,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2OTMxMQ==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 99,
      "pull_request_review_id" : 562220604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T23:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552269311",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552391964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Transactions for the miner are picked from the mempool, usually. This test should check that the tx can be supplied in raw form, not taking it from the mempool. Also, it tests that a miner can mine a tx that is not in the mempool.",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-06T06:23:26Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552391964",
      "id" : 552391964,
      "in_reply_to_id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MTk2NA==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 562351279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T06:23:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552977599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552977599"
         }
      },
      "author_association" : "NONE",
      "body" : "I now realize I have wrote this in a very misleading way. Because even though this is getting generated to the `miniwallet` address I don't append it to `self._utxos` so therefore not spendable by `send_self_transfer()`. Should I append these generated blocks to `self._utxos` with some sort of helper function?",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-06T21:48:36Z",
      "diff_hunk" : "@@ -5,25 +5,43 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552977599",
      "id" : 552977599,
      "line" : 45,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3NzU5OQ==",
      "original_commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 45,
      "pull_request_review_id" : 563057965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T22:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552977599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   }
]
