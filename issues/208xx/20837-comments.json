[
   {
      "author_association" : "MEMBER",
      "body" : "One example where it would have been possible to keep the format, by making the fuzz code more complicated was commit fa0f4157098ea68169ced44730986d0ed2c3a5aa. I chose to invalidate the seeds instead.",
      "created_at" : "2021-01-03T09:11:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20837#issuecomment-753588680",
      "id" : 753588680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20837",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzU4ODY4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T09:11:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753588680",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It would be nonsensical to hold back on changing Bitcoin Core code (e.g. validation code) to not invalidate fuzz inputs.\r\n\r\nAgreed. I have been wondering about what aspirational goal we should be aiming for in the future. An informal fuzzing \"team\" that would monitor when existing seeds are invalidated through changes to Core code. Or all long term contributors updating fuzz seeds when they invalidate them through opening a PR. At least in the short term the latter doesn't seem viable. A number of long term contributors are missing basic understanding of fuzzing currently.\r\n\r\nThe fuzz seeds are cheap to produce unless they have been carefully chosen. If there has been a lot of thought expended in choosing particular seeds this should be documented somewhere so that when invalidated they can be easily replaced. At the moment there doesn't seem to be much documentation on the thought process behind seeds in the [seed corpus](https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus).",
      "created_at" : "2021-01-03T12:03:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20837#issuecomment-753606787",
      "id" : 753606787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20837",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzYwNjc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T12:03:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753606787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A number of long term contributors are missing basic understanding of fuzzing currently.\r\n\r\nRunning the fuzzers should be straightforward: https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md . Also, the concept of fuzzing isn't really that hard. However, the Bitcoin Core code base isn't \"optimized\" for fuzzing (e.g. globals, background threads, non-mockable disk access, net processing dealing also with deserialization ...), so working on fuzzers for Bitcoin Core sometimes becomes tricky. For general guidelines on writing fuzzers, you can take a look at https://github.com/google/fuzzing/blob/master/docs/intro-to-fuzzing.md\r\n\r\n> The fuzz seeds are cheap to produce unless they have been carefully chosen.\r\n\r\nCorrect. I think we should aim to write fuzzers that can explore the search space from scratch in a reasonable amount of time. Like mentioned before, this isn't the case for all Bitcoin Core fuzz targets. There are plenty of hashes, checksums, signatures, POW checks, serialization specifics ... etc that make it harder to find good fuzz inputs. Code coverage reports help in finding weak spots, and then specifically crafted seeds (either manually or extracted from real world data like the block files or socket buffers) can help to increase coverage.\r\n\r\nIt is a pity if those seeds get lost due to invalidation, and I think our best bet is to rely on the fuzz engine to translate them for us if it is possible. For exmaple the breakage caused by commit fa0f415 should be fixable with some trivial bit flips or similar.",
      "created_at" : "2021-01-03T12:45:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20837#issuecomment-753611775",
      "id" : 753611775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20837",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzYxMTc3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T12:47:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753611775",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
