[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20750 ([Bundle 2/n] Prune g_chainman usage in mempool-related validation functions by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-01-03T11:28:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834#issuecomment-753602797",
      "id" : 753602797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzYwMjc5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T11:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753602797",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Great PR description, really informative. \r\n\r\nIs there anything in particular you'd recommend a reviewer do to assure themselves that removing this code doesn't cause any problems beyond the usual building, running tests etc?",
      "created_at" : "2021-01-03T13:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834#issuecomment-753620266",
      "id" : 753620266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzYyMDI2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T13:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753620266",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20834#discussion_r551031030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551031030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assumed this was protecting against corruption of the utxo set on disk, but that doesn't seem to be the case. `coin` will be from disk as well.",
      "commit_id" : "bf995d8267019c0ecec8651186ffadb008121a6e",
      "created_at" : "2021-01-03T17:13:08Z",
      "diff_hunk" : "@@ -404,43 +404,6 @@ static void UpdateMempoolForReorg(CTxMemPool& mempool, DisconnectedBlockTransact\n     LimitMempoolSize(mempool, gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, std::chrono::hours{gArgs.GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY)});\n }\n \n-// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n-// were somehow broken and returning the wrong scriptPubKeys\n-static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& view, const CTxMemPool& pool,\n-                 unsigned int flags, PrecomputedTransactionData& txdata) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n-    AssertLockHeld(cs_main);\n-\n-    // pool.cs should be locked already, but go ahead and re-take the lock here\n-    // to enforce that mempool doesn't change between when we check the view\n-    // and when we actually call through to CheckInputScripts\n-    LOCK(pool.cs);\n-\n-    assert(!tx.IsCoinBase());\n-    for (const CTxIn& txin : tx.vin) {\n-        const Coin& coin = view.AccessCoin(txin.prevout);\n-\n-        // AcceptToMemoryPoolWorker has already checked that the coins are\n-        // available, so this shouldn't fail. If the inputs are not available\n-        // here then return false.\n-        if (coin.IsSpent()) return false;\n-\n-        // Check equivalence for available inputs.\n-        const CTransactionRef& txFrom = pool.get(txin.prevout.hash);\n-        if (txFrom) {\n-            assert(txFrom->GetHash() == txin.prevout.hash);\n-            assert(txFrom->vout.size() > txin.prevout.n);\n-            assert(txFrom->vout[txin.prevout.n] == coin.out);\n-        } else {\n-            const Coin& coinFromDisk = ::ChainstateActive().CoinsTip().AccessCoin(txin.prevout);\n-            assert(!coinFromDisk.IsSpent());\n-            assert(coinFromDisk.out == coin.out);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834#discussion_r551031030",
      "id" : 551031030,
      "line" : 436,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAzMTAzMA==",
      "original_commit_id" : "bf995d8267019c0ecec8651186ffadb008121a6e",
      "original_line" : 436,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 560712203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20834",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-03T17:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551031030",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@michaelfolkson good question. You could go line-by-line in the function and verify that what I said in the description is true, i.e. that each one is done earlier in ATMP. And then you can also look at what `cs_main` and `pool.cs` guarantee wrt consistency so you can say \"yeah, this wouldn't change.\" Might be fun to trace the coinsview through ATMP with some logs. If you prefer writing code, you can try to break it, e.g. with a [functional test](https://github.com/bitcoin/bitcoin/pull/20833/files#diff-2757e99ad43064441a6401f5002232a6a311d92d16b49df66f51d427ce448a68R86) with badly formed/similar but conflicting Coins. ",
      "created_at" : "2021-01-03T18:48:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20834#issuecomment-753660173",
      "id" : 753660173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY2MDE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T18:48:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753660173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
