[
   {
      "body" : "par=4 chainstate reindex with dbcache 2000 goes from 6.15 hours to 2.96 hours. \r\n\r\n@petertodd  I know you had a reservation about keeping the default in chainparams but we also have a number of other similar heuristics there (such as bip34 height, total work in the best chain, various flags). I'd suggest in the future we should move those more policy like things into their own section of chain params. \r\n\r\nI'd rather do that as a separate refactor later than spread this setting out away from the other ones that need to get changed as part of the review process.",
      "created_at" : "2017-01-06T23:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#issuecomment-271037343",
      "id" : 271037343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9484",
      "updated_at" : "2017-01-06T23:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271037343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95063846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95063846"
         }
      },
      "body" : "I assume when you saiy \"set the value two blocks back\" you mean \"set the value two blocks back from the tip at around the time rcs begin, so that it is a month back when release actually happens\"?",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T19:06:00Z",
      "diff_hunk" : "@@ -13,6 +13,11 @@ Before every minor and major release:\n * Update version in sources (see below)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid  with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95063846",
      "id" : 95063846,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 5,
      "path" : "doc/release-process.md",
      "position" : 5,
      "pull_request_review_id" : 15610271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95063846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95063927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95063927"
         }
      },
      "body" : "Is there any meaningful difference here between a month and a week? (let the bikeshedding begin!).",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T19:11:15Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95063927",
      "id" : 95063927,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 15610271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95063927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95066939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95066939"
         }
      },
      "body" : "I don't think so. I picked a week here because (1) that is the minimum time in our process between an RC and a release and (2) I think two days is likely sufficient for the purpose in the comment-- enough time for a widespread public response.\r\n\r\nBut if people preferred a month, that would be okay too.  I was half expecting this test to get bikesheded out rather than cranked up. \r\n\r\nOne downside of a longer value is that users on really slow devices who might put a very current value in from another node of theirs would get a diminished synctime improvement. ",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T22:20:56Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95066939",
      "id" : 95066939,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 15613303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95066939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95066977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95066977"
         }
      },
      "body" : "I don't _intend_ for it to be a month back at the release. There is no reason to set it back at all _except_ that  if the block falls out of the chain the speedup will be lost.  Another possiblity would be to advise setting it at the tip with a note that it must be fixed if the block falls out of the chain.\r\n\r\nI also don't see a reason that this couldn't be updated at the last RC or even between an RC and a release.  In general we should set it as far forward as possible... there is no benefit in setting it back, and the more forward it is, the longer it takes for the cached value to rot. \r\n",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T22:23:43Z",
      "diff_hunk" : "@@ -13,6 +13,11 @@ Before every minor and major release:\n * Update version in sources (see below)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid  with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95066977",
      "id" : 95066977,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 5,
      "path" : "doc/release-process.md",
      "position" : 5,
      "pull_request_review_id" : 15613340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95066977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95067847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95067847"
         }
      },
      "body" : "Hum, at the risk of overdesign, I'd be ok with only a week or so if the user explicitly specified a trust anchor, but for default-release, I'm afraid a week isnt all that long in the context of relying on widespread public outcry to prevent failures.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T23:19:09Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95067847",
      "id" : 95067847,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 15614082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95067847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95067870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95067870"
         }
      },
      "body" : "OK. Fair enough, though I disagree that it should be allowed to change pre-release post-rc...for a parameter like this we really want lots of eyes and a few days of letting people reindex prior to release.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T23:20:05Z",
      "diff_hunk" : "@@ -13,6 +13,11 @@ Before every minor and major release:\n * Update version in sources (see below)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid  with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95067870",
      "id" : 95067870,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 5,
      "path" : "doc/release-process.md",
      "position" : 5,
      "pull_request_review_id" : 15614108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95067870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95068010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95068010"
         }
      },
      "body" : "> There is no reason to set it back at all except that if the block falls out of the chain the speedup will be lost.\r\n\r\nNote we *could* make it smart enough to see the common parent block, but I'm not sure it's worth the additional effort.\r\n\r\n> I also don't see a reason that this couldn't be updated at the last RC or even between an RC and a release. In general we should set it as far forward as possible...\r\n\r\nIf we're setting it last minute, I do think more than 2 blocks back would be best. Maybe 10.\r\n",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-07T23:32:12Z",
      "diff_hunk" : "@@ -13,6 +13,11 @@ Before every minor and major release:\n * Update version in sources (see below)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid  with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95068010",
      "id" : 95068010,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 5,
      "path" : "doc/release-process.md",
      "position" : 5,
      "pull_request_review_id" : 15614233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95068010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> if they set it to something crazy all that will happen is more time will be spend validating signatures.\r\n\r\nThat's not the worst-case scenario. They *could* set it to a block with invalid scripts in the history, which would break from consensus. I do think this is an acceptable risk, but maybe should get at least some warning.",
      "created_at" : "2017-01-07T23:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#issuecomment-271117811",
      "id" : 271117811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9484",
      "updated_at" : "2017-01-07T23:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271117811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr yes but only if it is buried by a week (in current code), which is the reason for that additional test.  The logprint that it's assuming valid was my warning.. but if you'd like to suggest something more...\r\n",
      "created_at" : "2017-01-08T00:03:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#issuecomment-271119212",
      "id" : 271119212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9484",
      "updated_at" : "2017-01-08T00:03:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271119212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95069256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069256"
         }
      },
      "body" : "You're concerned about it with respect to the default? I don't think that makes sense: It's correct or it isn't and stepping a few blocks back there doesn't make it more correct. If not for the extra complexity and the benefit that block validation gets better tested in the RC cycle I would have exempted the default from this test.\r\n\r\nIf the review process won't catch an invalid block in the chain-- a simple comparison with a constant-- how is it going to catch the invalidity being simply made valid by indirect and subtle changes to the consensus behavior?\r\n\r\nPetertodd's argument for this approach was that the review effort for these values is trivial compared to any of the rest of the software, making it safe and easy to update them with a minimum of additional scrutiny.\r\n\r\n@luke-jr \r\n> Note we could make it smart enough to see the common parent block, but I'm not sure it's worth the additional effort.\r\n\r\nWe could ship a tool that performed the entire set of updates for a release, it would be pretty easy to have such a tool use chain-tips to go back further if there is a competing fork.  Similarly, the tool could also be used to check, like we have for signed commits.  (though if we do that I think it should be a separate PR.)",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-08T01:02:33Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95069256",
      "id" : 95069256,
      "original_commit_id" : "d5988db393c55a892adef5561d5c520f73d19ca9",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 15615350,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95103944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95103944"
         }
      },
      "body" : "This seems to result in an out-of-bounds memory access when `-assumevalid=` (with no value) is supplied. `uint256S(..)` invokes `base_blob::SetHex(const char *)`, which assumes a supplied length of at least 1. An out-of-bounds access then occurs at [src/uint256.cpp:39](https://github.com/bitcoin/bitcoin/blob/c0ddd32bf629bb48426b0651def497ca1a78e6b1/src/uint256.cpp#L39).",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T05:34:56Z",
      "diff_hunk" : "@@ -920,6 +921,12 @@ bool AppInitParameterInteraction()\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n+    hashAssumeValid = uint256S(GetArg(\"-assumevalid\", chainparams.GetConsensus().defaultAssumeValid.GetHex()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95103944",
      "id" : 95103944,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 23,
      "path" : "src/init.cpp",
      "position" : 23,
      "pull_request_review_id" : 15647864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95103944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/884115?v=3",
         "events_url" : "https://api.github.com/users/robmcl4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robmcl4/followers",
         "following_url" : "https://api.github.com/users/robmcl4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robmcl4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robmcl4",
         "id" : 884115,
         "login" : "robmcl4",
         "organizations_url" : "https://api.github.com/users/robmcl4/orgs",
         "received_events_url" : "https://api.github.com/users/robmcl4/received_events",
         "repos_url" : "https://api.github.com/users/robmcl4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robmcl4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robmcl4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robmcl4"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95135183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95135183"
         }
      },
      "body" : "GetArg returns a std:string, base_blob<BITS>::SetHex(const std::string& str) invokes c_str() on the pinput and calls the c_str argumented version (which is null terminated). On a zero length input the input array with be pointer to a null byte. This will fail the psz[0] == '0' (note the quotes). No out of bounds access will occur on line 39 (nor below).  What am I misreading?",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T10:59:19Z",
      "diff_hunk" : "@@ -920,6 +921,12 @@ bool AppInitParameterInteraction()\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n+    hashAssumeValid = uint256S(GetArg(\"-assumevalid\", chainparams.GetConsensus().defaultAssumeValid.GetHex()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95135183",
      "id" : 95135183,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 23,
      "path" : "src/init.cpp",
      "position" : 23,
      "pull_request_review_id" : 15679267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95135183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95152093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95152093"
         }
      },
      "body" : "Oh of course, the short-circuit eval there slipped my mind. Never mind, all good!",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T13:11:33Z",
      "diff_hunk" : "@@ -920,6 +921,12 @@ bool AppInitParameterInteraction()\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n+    hashAssumeValid = uint256S(GetArg(\"-assumevalid\", chainparams.GetConsensus().defaultAssumeValid.GetHex()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95152093",
      "id" : 95152093,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 23,
      "path" : "src/init.cpp",
      "position" : 23,
      "pull_request_review_id" : 15697171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95152093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/884115?v=3",
         "events_url" : "https://api.github.com/users/robmcl4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robmcl4/followers",
         "following_url" : "https://api.github.com/users/robmcl4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robmcl4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robmcl4",
         "id" : 884115,
         "login" : "robmcl4",
         "organizations_url" : "https://api.github.com/users/robmcl4/orgs",
         "received_events_url" : "https://api.github.com/users/robmcl4/received_events",
         "repos_url" : "https://api.github.com/users/robmcl4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robmcl4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robmcl4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robmcl4"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95260531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95260531"
         }
      },
      "body" : "knowledge",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:23:41Z",
      "diff_hunk" : "@@ -71,6 +71,27 @@ P2P connection management\n \n - New connections to manually added peers are much faster.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A signfigant portion of the initial block download time is spent verifying\n+  scripts/signatures.  Although the verification must pass to ensure the security\n+  of the system, no other result from this verification is needed: If the node\n+  knew the history of a given block were valid it could skip checking scripts\n+  for its ancestors.\n+\n+- A new configuration option 'assumevalid' is provided to express this knoweldge",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95260531",
      "id" : 95260531,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 22,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95260531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95261194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95261194"
         }
      },
      "body" : "Do we use `_text_` anywhere else in the help output? It seems a bit strange.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:26:57Z",
      "diff_hunk" : "@@ -329,8 +329,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n-    strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n-    strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n+    strUsage +=HelpMessageOpt(\"-assumevalid=<hex>\", strprintf(_(\"If this block is in the chain _assume_ that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\"), Params(CBaseChainParams::MAIN).GetConsensus().defaultAssumeValid.GetHex(), Params(CBaseChainParams::TESTNET).GetConsensus().defaultAssumeValid.GetHex()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95261194",
      "id" : 95261194,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95261194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263755"
         }
      },
      "body" : "This seems weird. You're checking\r\n* Whether the to-be-connected block is an ancestor of the assumed-valid block.\r\n* Whether a specific headers chain is at least a week ahead of the to-be-connected block.\r\n\r\nThere is no guarantee however that `pindexBestHeader` descends from the to-be-connected block, so what is the relevance of it here?",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:42:43Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263755",
      "id" : 95263755,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263801"
         }
      },
      "body" : "whose",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:43:00Z",
      "diff_hunk" : "@@ -185,6 +185,9 @@ extern CAmount maxTxFee;\n extern int64_t nMaxTipAge;\n extern bool fEnableReplacement;\n \n+/** Block hash whos ancestors we will assume to have valid scripts without checking them. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263801",
      "id" : 95263801,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263855"
         }
      },
      "body" : "significant",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:43:19Z",
      "diff_hunk" : "@@ -71,6 +71,27 @@ P2P connection management\n \n - New connections to manually added peers are much faster.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A signfigant portion of the initial block download time is spent verifying",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95263855",
      "id" : 95263855,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 16,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95263855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95264178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95264178"
         }
      },
      "body" : "Maybe list the height/time of that block in a comment?",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-09T22:45:15Z",
      "diff_hunk" : "@@ -99,6 +99,9 @@ class CMainParams : public CChainParams {\n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000002cb971dd56d1c583c20f90\");\n \n+        // By default assume that the signatures in ancestors of this block are valid.\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000000030abc968e1bd635736e880b946085c93152969b9a81a6e2\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95264178",
      "id" : 95264178,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 5,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 15810206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95264178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295976"
         }
      },
      "body" : "fixed.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T03:43:53Z",
      "diff_hunk" : "@@ -71,6 +71,27 @@ P2P connection management\n \n - New connections to manually added peers are much faster.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A signfigant portion of the initial block download time is spent verifying",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295976",
      "id" : 95295976,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 16,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 15845157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295983"
         }
      },
      "body" : "fixed.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T03:43:58Z",
      "diff_hunk" : "@@ -71,6 +71,27 @@ P2P connection management\n \n - New connections to manually added peers are much faster.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A signfigant portion of the initial block download time is spent verifying\n+  scripts/signatures.  Although the verification must pass to ensure the security\n+  of the system, no other result from this verification is needed: If the node\n+  knew the history of a given block were valid it could skip checking scripts\n+  for its ancestors.\n+\n+- A new configuration option 'assumevalid' is provided to express this knoweldge",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295983",
      "id" : 95295983,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 22,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 15845164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295995"
         }
      },
      "body" : "removed.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T03:44:09Z",
      "diff_hunk" : "@@ -329,8 +329,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n-    strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n-    strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n+    strUsage +=HelpMessageOpt(\"-assumevalid=<hex>\", strprintf(_(\"If this block is in the chain _assume_ that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\"), Params(CBaseChainParams::MAIN).GetConsensus().defaultAssumeValid.GetHex(), Params(CBaseChainParams::TESTNET).GetConsensus().defaultAssumeValid.GetHex()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95295995",
      "id" : 95295995,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 15845175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95295995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95296005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95296005"
         }
      },
      "body" : "fixed.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T03:44:19Z",
      "diff_hunk" : "@@ -185,6 +185,9 @@ extern CAmount maxTxFee;\n extern int64_t nMaxTipAge;\n extern bool fEnableReplacement;\n \n+/** Block hash whos ancestors we will assume to have valid scripts without checking them. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95296005",
      "id" : 95296005,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 15845184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95296005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95296031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95296031"
         }
      },
      "body" : "added height. I'm trying to not make the update procedure too much work.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T03:44:38Z",
      "diff_hunk" : "@@ -99,6 +99,9 @@ class CMainParams : public CChainParams {\n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000002cb971dd56d1c583c20f90\");\n \n+        // By default assume that the signatures in ancestors of this block are valid.\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000000030abc968e1bd635736e880b946085c93152969b9a81a6e2\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95296031",
      "id" : 95296031,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 5,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 15845212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:13:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95296031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95447674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95447674"
         }
      },
      "body" : "Okay, fixed, I also require the block to be an ancestor of the BestHeader.",
      "commit_id" : "739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-10T20:15:17Z",
      "diff_hunk" : "@@ -1720,11 +1721,24 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     bool fScriptChecks = true;\n-    if (fCheckpointsEnabled) {\n-        CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n-        if (pindexLastCheckpoint && pindexLastCheckpoint->GetAncestor(pindex->nHeight) == pindex) {\n-            // This block is an ancestor of a checkpoint: disable script checks\n-            fScriptChecks = false;\n+    if (!hashAssumeValid.IsNull()) {\n+        // We've been configured with the hash of a block which has been externally verified to have a valid history.\n+        // A suitable default value is included with the software and updated from time to time.  Because validity\n+        //  relative to a piece of software is an objective fact these defaults can be easily reviewed.\n+        // This setting doesn't force the selection of any particular chain but makes validating some faster by\n+        //  effectively caching the result of part of the verification.\n+        BlockMap::const_iterator  it = mapBlockIndex.find(hashAssumeValid);\n+        if (it != mapBlockIndex.end()) {\n+            if (it->second->GetAncestor(pindex->nHeight) == pindex) {\n+                // This block is a member of the assumed verified chain: potentially disable script checks\n+                // The equivalent time check discourages hashpower from extorting the network via DOS attack\n+                //  into accepting an invalid block through telling users they must manually set assumevalid.\n+                //  Requiring a software change or burrying the invalid block, regardless of the setting, makes\n+                //  it hard to hide the implication of the demand.  This also avoids having release candidates\n+                //  that are hardly doing any signature verification at all in testing without having to\n+                //  artificially set the default assumed verified block further back.\n+                fScriptChecks = (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, chainparams.GetConsensus()) < 60 * 60 * 24 * 7);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#discussion_r95447674",
      "id" : 95447674,
      "original_commit_id" : "d6598eeb19f4e0f7d154e7cad6a85b66bce228cd",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 16002782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9484",
      "updated_at" : "2017-01-10T20:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95447674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "utACK 739983db5dd799424738bc752eee7721fc94f1fb",
      "created_at" : "2017-01-11T23:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9484#issuecomment-272025362",
      "id" : 272025362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9484",
      "updated_at" : "2017-01-11T23:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272025362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
