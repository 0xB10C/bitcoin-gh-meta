[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15151](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15151.html) ([Consensus] [P2P] [Utils and libraries] Cleanup by DesWurstes)\n* [#14837](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14837.html) (Stricter & More Performant Invariant Checking in CheckBlock by JeremyRubin)\n* [#14696](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14696.html) (qa: Add explicit references to related CVE's in p2p_invalid_block test. by lucash-dev)\n* [#13868](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13868.html) (Remove unused fScriptChecks parameter from CheckInputs by Empact)\n* [#13804](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13804.html) (WIP: Transaction Pool Layer by MarcoFalke)\n* [#13525](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13525.html) (Report reason inputs are nonstandard from AreInputsStandard by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-01-10T18:31:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453203439",
      "id" : 453203439,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzIwMzQzOQ==",
      "updated_at" : "2019-01-12T08:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453203439",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-01-10T18:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453204363",
      "id" : 453204363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzIwNDM2Mw==",
      "updated_at" : "2019-01-10T18:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453204363",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247050770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247050770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very small nit: `if (!message.empty()) {` instead? :-)",
      "commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "created_at" : "2019-01-11T09:30:13Z",
      "diff_hunk" : "@@ -816,6 +816,91 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        {\n+            // TODO: Handle this much more gracefully (10 DoS points is super arbitrary)\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 10, message);\n+        }\n+        return true;\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        break;\n+    }\n+    if (message != \"\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247050770",
      "id" : 247050770,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzA1MDc3MA==",
      "original_commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "original_position" : 83,
      "path" : "src/net_processing.cpp",
      "position" : 83,
      "pull_request_review_id" : 191577024,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
      "updated_at" : "2019-01-11T09:30:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247050770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK; I'll review for changes in behavior for specific validation reasons later.",
      "created_at" : "2019-01-11T18:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453608761",
      "id" : 453608761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzYwODc2MQ==",
      "updated_at" : "2019-01-11T18:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453608761",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-01-14T14:23:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-454021358",
      "id" : 454021358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDAyMTM1OA==",
      "updated_at" : "2019-01-14T14:23:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454021358",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247634533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247634533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: change to `m_reason` and avoid all the non-shadowing naming tricks below (`reasonIn` and `_reason`)",
      "commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "created_at" : "2019-01-14T19:52:06Z",
      "diff_hunk" : "@@ -30,32 +74,24 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    int nDoS;\n+    ValidationInvalidReason reason;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247634533",
      "id" : 247634533,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzYzNDUzMw==",
      "original_commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "original_position" : 56,
      "path" : "src/consensus/validation.h",
      "position" : 56,
      "pull_request_review_id" : 192332892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
      "updated_at" : "2019-01-14T22:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247634533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247638591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247638591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: s/conflicts with a tx in the chain/conflicts with a confirmed transaction. Same comment below for \"exists in the mempool or on chain\"",
      "commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "created_at" : "2019-01-14T20:03:52Z",
      "diff_hunk" : "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks (or headers):\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247638591",
      "id" : 247638591,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzYzODU5MQ==",
      "original_commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "original_position" : 39,
      "path" : "src/consensus/validation.h",
      "position" : 39,
      "pull_request_review_id" : 192332892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
      "updated_at" : "2019-01-14T22:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247638591",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247678436"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247678436"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems entirely obvious and not requiring a comment to me, which makes me think there's some subtlety I've missed. Is this just saying that if we receive a block with witness data, it should be valid-according-to-BIP141?\r\n\r\nPedantic nit: I'd also avoid talking about 'data-providers' in validation.cpp. After this PR, validation should be unconcerned with data-providers and only be validating blocks based on the block data.",
      "commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "created_at" : "2019-01-14T22:09:50Z",
      "diff_hunk" : "@@ -3333,7 +3341,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247678436",
      "id" : 247678436,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzY3ODQzNg==",
      "original_commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "original_position" : 494,
      "path" : "src/validation.cpp",
      "position" : 494,
      "pull_request_review_id" : 192332892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
      "updated_at" : "2019-01-14T22:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247678436",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247688022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247688022"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's unclear to me whether peers should always be punished for `BLOCK_INVALID_PREV` should be here. For example, if the previous block was invalid because of `RECENT_CONSENSUS_CHANGE` and the peer wasn't punished, should it be punished for relaying this descendant block?\r\n\r\nShould compact block peers be punished for relaying the block if it's parent is invalid? My reading of https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki#pre-validation-relay-and-consistency-considerations is that the answer is no.\r\n\r\nSame question for `MaybePunishNode()` below.",
      "commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "created_at" : "2019-01-14T22:42:35Z",
      "diff_hunk" : "@@ -816,6 +816,91 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247688022",
      "id" : 247688022,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzY4ODAyMg==",
      "original_commit_id" : "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
      "original_position" : 27,
      "path" : "src/net_processing.cpp",
      "position" : 27,
      "pull_request_review_id" : 192332892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
      "updated_at" : "2019-01-14T22:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247688022",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
