[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2019-01-12T14:01:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453749896",
      "id" : 453749896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1Mzc0OTg5Ng==",
      "updated_at" : "2019-01-15T15:45:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453749896",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.",
      "created_at" : "2019-01-13T14:48:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453835706",
      "id" : 453835706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzgzNTcwNg==",
      "updated_at" : "2019-01-13T14:48:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453835706",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247490579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247490579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Avoid shadowing `locker` in the outer scope :-)",
      "commit_id" : "09780dfe02f6612b960f03171c30f706213513bb",
      "created_at" : "2019-01-14T13:28:14Z",
      "diff_hunk" : "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+    return wallet_model;\n+}\n+\n+WalletModel* WalletController::getOrCreateModel(std::unique_ptr<interfaces::Wallet> wallet)\n+{\n+    QMutexLocker locker(&m_mutex);\n+\n+    // Check if model instance already exists.\n+    auto name = wallet->getWalletName();\n+    auto it = m_wallet_models.find(name);\n+    if (it != m_wallet_models.end()) return it->second;\n+\n+    // Instantiate model and register it.\n+    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_node, m_platform_style, m_options_model, nullptr);\n+    it = m_wallet_models.emplace(name, wallet_model).first;\n+\n+    connect(wallet_model, &WalletModel::unload, [this, it, wallet_model] {\n+        // Unregister wallet model and update current if necessary.\n+        {\n+            QMutexLocker locker(&m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247490579",
      "id" : 247490579,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MDU3OQ==",
      "original_commit_id" : "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
      "original_position" : 83,
      "path" : "src/qt/walletcontroller.cpp",
      "position" : 83,
      "pull_request_review_id" : 192149970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
      "updated_at" : "2019-01-15T15:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247490579",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247491317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247491317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure declaration parameter name matches definition parameter name :-)",
      "commit_id" : "09780dfe02f6612b960f03171c30f706213513bb",
      "created_at" : "2019-01-14T13:30:37Z",
      "diff_hunk" : "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247491317",
      "id" : 247491317,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MTMxNw==",
      "original_commit_id" : "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
      "original_position" : 53,
      "path" : "src/qt/walletcontroller.cpp",
      "position" : null,
      "pull_request_review_id" : 192149970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
      "updated_at" : "2019-01-15T15:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247491317",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Drop this since empty body?",
      "commit_id" : "09780dfe02f6612b960f03171c30f706213513bb",
      "created_at" : "2019-01-14T13:33:03Z",
      "diff_hunk" : "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492039",
      "id" : 247492039,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MjAzOQ==",
      "original_commit_id" : "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
      "original_position" : 61,
      "path" : "src/qt/walletcontroller.cpp",
      "position" : 61,
      "pull_request_review_id" : 192149970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
      "updated_at" : "2019-01-15T15:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unused? Please drop :-)",
      "commit_id" : "09780dfe02f6612b960f03171c30f706213513bb",
      "created_at" : "2019-01-14T13:33:29Z",
      "diff_hunk" : "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492155",
      "id" : 247492155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MjE1NQ==",
      "original_commit_id" : "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
      "original_position" : 46,
      "path" : "src/qt/walletcontroller.cpp",
      "position" : null,
      "pull_request_review_id" : 192149970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
      "updated_at" : "2019-01-15T15:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247493216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247493216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not shadowed, the above is not captured.",
      "commit_id" : "09780dfe02f6612b960f03171c30f706213513bb",
      "created_at" : "2019-01-14T13:36:48Z",
      "diff_hunk" : "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+    return wallet_model;\n+}\n+\n+WalletModel* WalletController::getOrCreateModel(std::unique_ptr<interfaces::Wallet> wallet)\n+{\n+    QMutexLocker locker(&m_mutex);\n+\n+    // Check if model instance already exists.\n+    auto name = wallet->getWalletName();\n+    auto it = m_wallet_models.find(name);\n+    if (it != m_wallet_models.end()) return it->second;\n+\n+    // Instantiate model and register it.\n+    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_node, m_platform_style, m_options_model, nullptr);\n+    it = m_wallet_models.emplace(name, wallet_model).first;\n+\n+    connect(wallet_model, &WalletModel::unload, [this, it, wallet_model] {\n+        // Unregister wallet model and update current if necessary.\n+        {\n+            QMutexLocker locker(&m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247493216",
      "id" : 247493216,
      "in_reply_to_id" : 247490579,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MzIxNg==",
      "original_commit_id" : "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
      "original_position" : 83,
      "path" : "src/qt/walletcontroller.cpp",
      "position" : 83,
      "pull_request_review_id" : 192153484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
      "updated_at" : "2019-01-15T15:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247493216",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-01-14T15:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-454043008",
      "id" : 454043008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDA0MzAwOA==",
      "updated_at" : "2019-01-14T15:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454043008",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-01-15T15:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-454429260",
      "id" : 454429260,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDQyOTI2MA==",
      "updated_at" : "2019-01-15T15:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454429260",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
