[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245289880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245289880"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo \"deserialze\".",
      "commit_id" : "faccf2b098b5c3ed76e4aa8c2161f84b68a8086a",
      "created_at" : "2019-01-04T12:52:16Z",
      "diff_hunk" : "@@ -137,20 +137,24 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+               # Segwit is active in regtest at this point, so to deserialze a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245289880",
      "id" : 245289880,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTI4OTg4MA==",
      "original_commit_id" : "fa73d4005af2e79db1af66be62c61c2d2878eb81",
      "original_position" : 28,
      "path" : "test/functional/feature_block.py",
      "position" : null,
      "pull_request_review_id" : 189357183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102",
      "updated_at" : "2019-01-04T13:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245289880",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
