[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#9384](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9384.html) (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-10-05T11:54:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-538643385",
      "id" : 538643385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzODY0MzM4NQ==",
      "updated_at" : "2019-10-05T11:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538643385",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be nice to test this on a Raspberry-like device. They tend to have low memory and slow storage. Unfortunately they generally also require pruning, and the way pruning currently works we flush the coin cache.\r\n\r\nFor example I have an Orange Pi chipping away at IBD this week; although it has 2 GB of RAM, because I'm pruning it to 5 GB, it never uses more than 230 MB.",
      "created_at" : "2019-10-06T13:51:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-538749228",
      "id" : 538749228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzODc0OTIyOA==",
      "updated_at" : "2019-10-06T13:51:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538749228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For example I have an Orange Pi chipping away at IBD this week; although it has 2 GB of RAM, because I'm pruning it to 5 GB, it never uses more than 230 MB.\r\n\r\nA 512 GB micro SD card should do the job, no?",
      "created_at" : "2019-10-07T17:05:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-539110266",
      "id" : 539110266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzOTExMDI2Ng==",
      "updated_at" : "2019-10-07T17:05:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539110266",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt You might be interested here given you commented in #16970.",
      "created_at" : "2019-10-08T15:38:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-539573426",
      "id" : 539573426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzOTU3MzQyNg==",
      "updated_at" : "2019-10-08T15:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539573426",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r332743152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332743152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"regardless\" :)",
      "commit_id" : "03cb535384eb6d2f4284524c33ab03371bd263e2",
      "created_at" : "2019-10-08T21:31:26Z",
      "diff_hunk" : "@@ -127,13 +127,72 @@ class CTxIn\n     std::string ToString() const;\n };\n \n+\n+/**\n+ * CAmount is an int64_t, which requires alignment of 8. This wrapper stores the data\n+ * in a memory array and packs/unpacks it whenever needed, regarldess of alignment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r332743152",
      "id" : 332743152,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjc0MzE1Mg==",
      "original_commit_id" : "d69050ecec1848a4e8521b3b4d84d7ba0f18ef14",
      "original_position" : 7,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 299062515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060",
      "updated_at" : "2019-10-09T14:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332743152",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r332743291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332743291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be `explicit`? :)",
      "commit_id" : "03cb535384eb6d2f4284524c33ab03371bd263e2",
      "created_at" : "2019-10-08T21:31:51Z",
      "diff_hunk" : "@@ -127,13 +127,72 @@ class CTxIn\n     std::string ToString() const;\n };\n \n+\n+/**\n+ * CAmount is an int64_t, which requires alignment of 8. This wrapper stores the data\n+ * in a memory array and packs/unpacks it whenever needed, regarldess of alignment.\n+ *\n+ * Since CAmount's size is know, the compiler should be able to optimize the std::memcpy away\n+ * in most cases.\n+ */\n+class PackableCAmount\n+{\n+    uint8_t m_data[sizeof(CAmount)];\n+\n+public:\n+    PackableCAmount(CAmount val) noexcept",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r332743291",
      "id" : 332743291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjc0MzI5MQ==",
      "original_commit_id" : "d69050ecec1848a4e8521b3b4d84d7ba0f18ef14",
      "original_position" : 17,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 299062685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060",
      "updated_at" : "2019-10-09T14:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332743291",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A 512 GB micro SD card should do the job, no?\r\n\r\nYep, works fine.",
      "created_at" : "2019-10-09T10:03:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-539932847",
      "id" : 539932847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzOTkzMjg0Nw==",
      "updated_at" : "2019-10-09T10:03:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539932847",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333029200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333029200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should be \"known\".\r\n... And, uh, is that \"away\" or \"anyway\"?",
      "commit_id" : "03cb535384eb6d2f4284524c33ab03371bd263e2",
      "created_at" : "2019-10-09T13:59:16Z",
      "diff_hunk" : "@@ -127,13 +127,72 @@ class CTxIn\n     std::string ToString() const;\n };\n \n+\n+/**\n+ * CAmount is an int64_t, which requires alignment of 8. This wrapper stores the data\n+ * in a memory array and packs/unpacks it whenever needed, regarldess of alignment.\n+ *\n+ * Since CAmount's size is know, the compiler should be able to optimize the std::memcpy away",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333029200",
      "id" : 333029200,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzAyOTIwMA==",
      "original_commit_id" : "d69050ecec1848a4e8521b3b4d84d7ba0f18ef14",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 299432268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060",
      "updated_at" : "2019-10-09T14:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333029200",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/42591821?v=4",
         "events_url" : "https://api.github.com/users/GChuf/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GChuf/followers",
         "following_url" : "https://api.github.com/users/GChuf/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GChuf/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GChuf",
         "id" : 42591821,
         "login" : "GChuf",
         "node_id" : "MDQ6VXNlcjQyNTkxODIx",
         "organizations_url" : "https://api.github.com/users/GChuf/orgs",
         "received_events_url" : "https://api.github.com/users/GChuf/received_events",
         "repos_url" : "https://api.github.com/users/GChuf/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GChuf/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GChuf"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please lets keep the discussion high level before pointing out any typos.",
      "created_at" : "2019-10-09T14:03:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-540015565",
      "id" : 540015565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MDAxNTU2NQ==",
      "updated_at" : "2019-10-09T14:03:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540015565",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333051913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333051913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It should, I can add that easily by adding the assignment operator for CAmount. \r\n\r\nAlso theoretically the `operator CAmount()` should be explicit too, but changing that would mean that I'd have to change practically all usages of this class...",
      "commit_id" : "03cb535384eb6d2f4284524c33ab03371bd263e2",
      "created_at" : "2019-10-09T14:37:38Z",
      "diff_hunk" : "@@ -127,13 +127,72 @@ class CTxIn\n     std::string ToString() const;\n };\n \n+\n+/**\n+ * CAmount is an int64_t, which requires alignment of 8. This wrapper stores the data\n+ * in a memory array and packs/unpacks it whenever needed, regarldess of alignment.\n+ *\n+ * Since CAmount's size is know, the compiler should be able to optimize the std::memcpy away\n+ * in most cases.\n+ */\n+class PackableCAmount\n+{\n+    uint8_t m_data[sizeof(CAmount)];\n+\n+public:\n+    PackableCAmount(CAmount val) noexcept",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333051913",
      "id" : 333051913,
      "in_reply_to_id" : 332743291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzA1MTkxMw==",
      "original_commit_id" : "d69050ecec1848a4e8521b3b4d84d7ba0f18ef14",
      "original_position" : 17,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 299462128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060",
      "updated_at" : "2019-10-09T14:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333051913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333060751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333060751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed in 03cb535384eb6d2f4284524c33ab03371bd263e2, also it should be \"optimized away\" because the compiler can the function call away. See this: https://godbolt.org/z/6uP9_S",
      "commit_id" : "03cb535384eb6d2f4284524c33ab03371bd263e2",
      "created_at" : "2019-10-09T14:52:32Z",
      "diff_hunk" : "@@ -127,13 +127,72 @@ class CTxIn\n     std::string ToString() const;\n };\n \n+\n+/**\n+ * CAmount is an int64_t, which requires alignment of 8. This wrapper stores the data\n+ * in a memory array and packs/unpacks it whenever needed, regarldess of alignment.\n+ *\n+ * Since CAmount's size is know, the compiler should be able to optimize the std::memcpy away",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#discussion_r333060751",
      "id" : 333060751,
      "in_reply_to_id" : 333029200,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzA2MDc1MQ==",
      "original_commit_id" : "d69050ecec1848a4e8521b3b4d84d7ba0f18ef14",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 299473557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060",
      "updated_at" : "2019-10-09T14:52:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333060751",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag that's what the bitfield syntax `unsigned int dirty : 1;` does, it makes the flags take up the minimum possible space.\r\nOr maybe I'm misunderstanding what you're trying to accomplish.",
      "created_at" : "2019-10-12T07:41:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541297211",
      "id" : 541297211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTI5NzIxMQ==",
      "updated_at" : "2019-10-12T07:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541297211",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Would like to test this on my VM using a HDD.\r\nI'm not sure how to benchmark this - I've tried https://github.com/chaincodelabs/bitcoinperf but haven't succeeded. Any info/help would be appreciated.",
      "created_at" : "2019-10-12T13:26:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541324891",
      "id" : 541324891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTMyNDg5MQ==",
      "updated_at" : "2019-10-12T13:26:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541324891",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/42591821?v=4",
         "events_url" : "https://api.github.com/users/GChuf/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GChuf/followers",
         "following_url" : "https://api.github.com/users/GChuf/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GChuf/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GChuf",
         "id" : 42591821,
         "login" : "GChuf",
         "node_id" : "MDQ6VXNlcjQyNTkxODIx",
         "organizations_url" : "https://api.github.com/users/GChuf/orgs",
         "received_events_url" : "https://api.github.com/users/GChuf/received_events",
         "repos_url" : "https://api.github.com/users/GChuf/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GChuf/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GChuf"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "bitcoinperf is a bit messy to set up. I think it requires docker. Is there any specific issue you ran into? I guess it might be better to report such upstream at https://github.com/chaincodelabs/bitcoinperf to not bloat this thread",
      "created_at" : "2019-10-12T13:30:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541325156",
      "id" : 541325156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTMyNTE1Ng==",
      "updated_at" : "2019-10-12T13:30:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541325156",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Would like to test this on my VM using a HDD.\r\n> I'm not sure how to benchmark this - I've tried https://github.com/chaincodelabs/bitcoinperf but haven't succeeded. Any info/help would be appreciated.\r\n\r\nIn my benchmarks I deleted `debug.log`, ran `/usr/bin/time -v ./bitcoind -reindex-chainstate -stopatheight=594000 -printtoconsole=0 -dbcache=500`, then used a hand written script to convert the debug.log into gnuplot-readable data, then used gnuplot to create the graphs.\r\n\r\nIt would be awesome to have some kind of logger in bitcoind that can periodically log statistics into a file in an easily parseable data.",
      "created_at" : "2019-10-12T13:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541326478",
      "id" : 541326478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTMyNjQ3OA==",
      "updated_at" : "2019-10-12T13:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541326478",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There were a couple issues. Could you recommend anything else to test `-reindex-chainstate`? Should I simply run bitcoind and have linux count time ... ?\r\nOr maybe I'll look around things mentioned in this [stackexchange answer](https://unix.stackexchange.com/a/414770/334043).\r\n\r\np.s. thanks for the info @martinus. I'll figure something out with what you did and those tools mentioned in the link.",
      "created_at" : "2019-10-12T13:52:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541327005",
      "id" : 541327005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTMyNzAwNQ==",
      "updated_at" : "2019-10-12T13:52:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541327005",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/42591821?v=4",
         "events_url" : "https://api.github.com/users/GChuf/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GChuf/followers",
         "following_url" : "https://api.github.com/users/GChuf/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GChuf/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GChuf",
         "id" : 42591821,
         "login" : "GChuf",
         "node_id" : "MDQ6VXNlcjQyNTkxODIx",
         "organizations_url" : "https://api.github.com/users/GChuf/orgs",
         "received_events_url" : "https://api.github.com/users/GChuf/received_events",
         "repos_url" : "https://api.github.com/users/GChuf/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GChuf/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GChuf"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I mean stuff like this:\r\n```\r\n        auto oldDirty = coin.dirty;\r\n        auto oldFresh = coin.fresh;\r\n```\r\ncould be\r\n```\r\n        auto old_cache = coin.cache;\r\n```\r\nwhere\r\n```\r\n    unsigned int cache : 2;   // DIRTY = 1,  FRESH = 2\r\n```",
      "created_at" : "2019-10-12T14:24:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060#issuecomment-541329578",
      "id" : 541329578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTMyOTU3OA==",
      "updated_at" : "2019-10-12T14:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541329578",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
