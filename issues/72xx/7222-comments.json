[
   {
      "body" : "Concept ACK\r\n\r\n> Which RPC calls should return this information?\r\n\r\nI think at least `listtransaction`, `gettransaction` (wallet functions) should also support this.\r\n\r\n> Would it be helpful to distinguish between a transaction signaling RBF itself [...], versus inheriting the signal from some unconfirmed parent?\r\n\r\nYes. This would be useful IMO.\r\n\r\n> The answer can only be definitive for transactions that are in the mempool; transactions that are not in the mempool might have unknown parents which could signal RBF and we wouldn't know it. Is it worth trying to answer this question for transactions not in the mempool, and if so, what information should be returned?\r\n\r\nI don't see a use-case for getting the RBF signal for confirmed transactions (maybe for potential reorgs risk calculations?). But I agree, without `-txindex`, parents RBF signal is probably unknown.",
      "created_at" : "2015-12-16T20:49:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165240133",
      "id" : 165240133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-16T20:49:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165240133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> I'm not sure how users of bitcoind are expected to figure out which transactions could be replaced via opt-in RBF,\r\n\r\nI don't see any use case for exposing this information.",
      "created_at" : "2015-12-17T01:38:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165310177",
      "id" : 165310177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T01:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165310177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "NACK\r\n\r\nVery high risk of naive users attempting to use this to do risk mitigation and accepting zeroconf txs in cases where they're risking losses; if you care about whether a tx can be replaced you're in a position where you should be using specialist services.\r\n\r\nNote how easy it is to send replacable in practice txs by just having an ancestor tx have a low fee.",
      "created_at" : "2015-12-17T07:39:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165373923",
      "id" : 165373923,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T07:39:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165373923",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd: for wallet users (`listtransaction`, `gettransaction`): I think there is a use case for self created wtxs where a user likes to know whether he did enable RBF or not.",
      "created_at" : "2015-12-17T08:43:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165384916",
      "id" : 165384916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T08:43:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165384916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "True, but for those users knowing if a tx is RBF is already trivial - just check nSequence. Equally, we haven't even merged my obvious set RBF flag option, so what's the usecase?\n\nOn 17 December 2015 00:44:28 GMT-08:00, Jonas Schnelli <notifications@github.com> wrote:\n>@petertodd: for wallet users (`listtransaction`, `gettransaction`): I\n>think there is a use case for self created wtxs where a user likes to\n>know whether he did enable RBF or not.\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165384916\n\n",
      "created_at" : "2015-12-17T09:13:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165390499",
      "id" : 165390499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T09:13:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165390499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "> Equally, we haven't even merged my obvious set RBF flag option, so what's the use case?\r\n\r\nRight. This (an option to set the RBF flag when creating a wtx) would be required first. Either your overall-setting PR (#7132) or the one that supports rawtx (#7159). GUI option might follow soon.\r\n\r\n>  [...] just check nSequence\r\n\r\nIMO this is basically what this PR does.",
      "created_at" : "2015-12-17T09:22:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165391951",
      "id" : 165391951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T09:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165391951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "No, this pull-req checks ancestors too, a critical difference thats applicable to \"risk-scoring\" BS but has little applicibility to your own transactions.",
      "created_at" : "2015-12-17T12:21:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165438828",
      "id" : 165438828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T12:21:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165438828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd  I don't agree, but I can understand your concern about offering a feature that could mislead users.  So rather than change existing RPC calls as I initially proposed, what about just adding two new RPC calls, one that would return the txid's of unconfirmed parents of a transaction and one that would return txid's of in-mempool descendants?  That seems to me to be more broadly useful and basically addresses my underlying concern, that users who want to do calculations relating to whether a transaction might be replaced would have to reinvent the wheel to efficiently trace mempool chains.",
      "created_at" : "2015-12-17T14:45:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165469929",
      "id" : 165469929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T14:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165469929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I should add -- I think exposing mempool ancestors/descendants is also useful for code that would seek to use RBF efficiently (I'm not sure how else you'd figure out what fee to use, or whether you'll get rejected because you're replacing too many transactions, etc).",
      "created_at" : "2015-12-17T14:46:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7222#issuecomment-165470231",
      "id" : 165470231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7222",
      "updated_at" : "2015-12-17T14:46:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/165470231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
