[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164023957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164023957"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This needs to go before mempoolToJONS, no? ie just do a { LOCK(cs_main); }.",
      "commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "created_at" : "2018-01-26T02:39:34Z",
      "diff_hunk" : "@@ -444,12 +444,18 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n+    }\n \n     bool fVerbose = false;\n-    if (!request.params[0].isNull())\n+    if (!request.params[0].isNull()) {\n         fVerbose = request.params[0].get_bool();\n+    }\n+\n+    const UniValue txpool_json{mempoolToJSON(fVerbose)};\n \n-    return mempoolToJSON(fVerbose);\n+    // Wait for ATMP calling thread to release the write lock:\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164023957",
      "id" : 164023957,
      "original_commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 25,
      "pull_request_review_id" : 91735276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273",
      "updated_at" : "2018-01-26T02:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164023957",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164026429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164026429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Acquiring the lock and immediately giving it back to the ATMP calling thread will not solve any races. (At least on my machine I can still see them.)\r\n\r\nI guess, I could hold it for the whole duration of getrawmempool, if that is what you like.",
      "commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "created_at" : "2018-01-26T03:05:50Z",
      "diff_hunk" : "@@ -444,12 +444,18 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n+    }\n \n     bool fVerbose = false;\n-    if (!request.params[0].isNull())\n+    if (!request.params[0].isNull()) {\n         fVerbose = request.params[0].get_bool();\n+    }\n+\n+    const UniValue txpool_json{mempoolToJSON(fVerbose)};\n \n-    return mempoolToJSON(fVerbose);\n+    // Wait for ATMP calling thread to release the write lock:\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164026429",
      "id" : 164026429,
      "in_reply_to_id" : 164023957,
      "original_commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 25,
      "pull_request_review_id" : 91738047,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273",
      "updated_at" : "2018-01-26T03:05:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164026429",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164026988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164026988"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, oops, yes, sorry, indeed, wrong direction. I guess this is fine for now, but we really need to kill the mempool.cs/cs_main garbage.",
      "commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "created_at" : "2018-01-26T03:12:07Z",
      "diff_hunk" : "@@ -444,12 +444,18 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n+    }\n \n     bool fVerbose = false;\n-    if (!request.params[0].isNull())\n+    if (!request.params[0].isNull()) {\n         fVerbose = request.params[0].get_bool();\n+    }\n+\n+    const UniValue txpool_json{mempoolToJSON(fVerbose)};\n \n-    return mempoolToJSON(fVerbose);\n+    // Wait for ATMP calling thread to release the write lock:\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164026988",
      "id" : 164026988,
      "in_reply_to_id" : 164023957,
      "original_commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 25,
      "pull_request_review_id" : 91738647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273",
      "updated_at" : "2018-01-26T03:12:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164026988",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This was hit twice on travis, you might find one of the logs here https://travis-ci.org/bitcoin/bitcoin/jobs/332197296 (might disappear soon, on reset)",
      "created_at" : "2018-01-26T03:22:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-360673845",
      "id" : 360673845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-01-26T03:22:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360673845",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164274736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164274736"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand why does it matter waiting for `cs_main` when the result is already determined. ",
      "commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "created_at" : "2018-01-27T16:03:39Z",
      "diff_hunk" : "@@ -444,12 +444,18 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n+    }\n \n     bool fVerbose = false;\n-    if (!request.params[0].isNull())\n+    if (!request.params[0].isNull()) {\n         fVerbose = request.params[0].get_bool();\n+    }\n+\n+    const UniValue txpool_json{mempoolToJSON(fVerbose)};\n \n-    return mempoolToJSON(fVerbose);\n+    // Wait for ATMP calling thread to release the write lock:\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164274736",
      "id" : 164274736,
      "in_reply_to_id" : 164023957,
      "original_commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 25,
      "pull_request_review_id" : 92028591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273",
      "updated_at" : "2018-01-27T16:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164274736",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> A bit more background - we (essentially) use mempool.cs as a read lock and cs_main as a write lock for the mempool.\r\n\r\nWhy not just use `mempool.cs` for both read and write? Stopping a lot of stuff just to dump the mempool sounds bad.",
      "created_at" : "2018-01-27T16:07:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-360994681",
      "id" : 360994681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-01-27T16:07:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360994681",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164276208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164276208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We want to wait for https://github.com/bitcoin/bitcoin/blob/8470e64724cb4a668079e7516dc61ec230346618/src/validation.cpp#L974\r\nwhich happens under `cs_main`, not `pool.cs`.",
      "commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "created_at" : "2018-01-27T17:07:35Z",
      "diff_hunk" : "@@ -444,12 +444,18 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n+    }\n \n     bool fVerbose = false;\n-    if (!request.params[0].isNull())\n+    if (!request.params[0].isNull()) {\n         fVerbose = request.params[0].get_bool();\n+    }\n+\n+    const UniValue txpool_json{mempoolToJSON(fVerbose)};\n \n-    return mempoolToJSON(fVerbose);\n+    // Wait for ATMP calling thread to release the write lock:\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#discussion_r164276208",
      "id" : 164276208,
      "in_reply_to_id" : 164023957,
      "original_commit_id" : "fabac46d05c05cde244ef08b13c9f8f17c428eea",
      "original_position" : 25,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 25,
      "pull_request_review_id" : 92030114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12273",
      "updated_at" : "2018-01-27T17:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164276208",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag Pull request welcome, but I'd prefer not to do major refactoring in a bug-fix pull request.",
      "created_at" : "2018-01-27T17:09:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-360998784",
      "id" : 360998784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-01-27T17:09:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360998784",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the explanation @MarcoFalke.\r\n\r\nIMHO, and to cover other possible cases, `cs_main` could be locked right before returning in `SyncWithValidationInterfaceQueue`:\r\n```cpp\r\nvoid SyncWithValidationInterfaceQueue() {\r\n    AssertLockNotHeld(cs_main);\r\n    // Block until the validation queue drains\r\n    std::promise<void> promise;\r\n    CallFunctionInValidationInterfaceQueue([&promise] {\r\n        promise.set_value();\r\n    });\r\n    promise.get_future().wait();\r\n    // Block until other tasks holding cs_main finish\r\n    LOCK(cs_main);\r\n}\r\n```\r\nOr in `syncwithvalidationinterface` RPC after `SyncWithValidationInterfaceQueue()`.\r\n\r\nThis alternative acknowledges it's not a `getrawmempool` bug.",
      "created_at" : "2018-01-27T22:17:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-361019806",
      "id" : 361019806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-01-27T22:17:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/361019806",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No, we should not take a cs_main in SyncWithValidationInterface. The bug here is mempool.cs - we're using it as a read lock but not holding cs_main during the whole \"write\" in ATMP. The fix here is fine - sync getrawmempool with ATMP (as it should be). Alternatively we could hold cs_main for longer in ATMP, but adding a cs_main to validationinterface to fix a mempool-specific bug is way overkill.\n\nMedium-term (ie post-0.16) we should look into making cs_main a read/write/upgrade lock for real and then this should fall out.\n\nOn January 27, 2018 10:17:34 PM UTC, \"JoÃÂ£o Barbosa\" <notifications@github.com> wrote:\n>Thanks for the explanation @MarcoFalke.\n>\n>IMHO, and to cover other possible cases, `cs_main` could be locked\n>right before returning in `SyncWithValidationInterfaceQueue`:\n>```cpp\n>void SyncWithValidationInterfaceQueue() {\n>    AssertLockNotHeld(cs_main);\n>    // Block until the validation queue drains\n>    std::promise<void> promise;\n>    CallFunctionInValidationInterfaceQueue([&promise] {\n>        promise.set_value();\n>    });\n>    promise.get_future().wait();\n>    // Block until other tasks holding cs_main finish\n>    LOCK(cs_main);\n>}\n>```\n>Or in `syncwithvalidationinterface` RPC after\n>`SyncWithValidationInterfaceQueue()`.\n>\n>This alternative acknowledges it's not a `getrawmempool` bug.\n>\n>-- \n>You are receiving this because you commented.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-361019806\n",
      "created_at" : "2018-01-28T15:50:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-361072650",
      "id" : 361072650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-01-28T15:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/361072650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The question for me is whether the production (i.e. non-test) use of `getrawmempool` benefits from the added synchronization.  If taking the lock is only to synchronize against the test-only `syncwithvalidationinterface`, then it doesn't seem right to pay the lock cost in a production path. \r\n\r\nAlso, looking at the code, it does seem like cs_main is held for all of ATMP, so I don't understand the comment from @TheBlueMatt.\r\n\r\nIt seems to me that `{ LOCK(cs_main); }` at the start of `syncwithvalidationinterface` should work fine (i.e. lock and immediate release).",
      "created_at" : "2018-02-03T21:10:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12273#issuecomment-362854566",
      "id" : 362854566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12273",
      "updated_at" : "2018-02-03T21:10:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/362854566",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/107096?v=4",
         "events_url" : "https://api.github.com/users/devrandom/events{/privacy}",
         "followers_url" : "https://api.github.com/users/devrandom/followers",
         "following_url" : "https://api.github.com/users/devrandom/following{/other_user}",
         "gists_url" : "https://api.github.com/users/devrandom/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/devrandom",
         "id" : 107096,
         "login" : "devrandom",
         "organizations_url" : "https://api.github.com/users/devrandom/orgs",
         "received_events_url" : "https://api.github.com/users/devrandom/received_events",
         "repos_url" : "https://api.github.com/users/devrandom/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/devrandom/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/devrandom/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/devrandom"
      }
   }
]
