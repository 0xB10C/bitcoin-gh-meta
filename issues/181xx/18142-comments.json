[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems critical, thanks for the link on IRC (and the link to the cosigner electrum issue here.) I feel like I saw something on the bitcoin-dev mailing list go by awhile ago, which didn't get much attention, regarding cosigner xpubs in PSBT for the purpose of constructing change addresses -- I forget the details, though.",
      "created_at" : "2020-02-13T23:24:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586021570",
      "id" : 586021570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjAyMTU3MA==",
      "updated_at" : "2020-02-13T23:24:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586021570",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Indeed there is a [mailinglist proposal](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016909.html) to add xpub's to PSBT, which may have its own utility, but a signing device also needs to know those xpub's before it receives coins. That way it can display a receive address without having to trust a connected computer to give it the right cosigner pubkeys.",
      "created_at" : "2020-02-14T08:33:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586152883",
      "id" : 586152883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjE1Mjg4Mw==",
      "updated_at" : "2020-02-14T08:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586152883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Multisig setup is certainly important, but there are many aspects of interaction between parties to make, use, and rotate a multisig wallet. Maybe the wallet composition/proposal file should include information about communication channels for contacting each party?\r\n\r\nI would also worry about flexibility. There are many kinds of exotic wallets (including lightning) that should fit into this kind of model, but right now they require significant custom protocol development.\r\n\r\nI recognize this is \"kitchen sink\" style software that I'm proposing, but I do think there's value in thinking about the full lifecycle of a wallet and its users.",
      "created_at" : "2020-02-14T14:49:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586320083",
      "id" : 586320083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjMyMDA4Mw==",
      "updated_at" : "2020-02-14T14:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586320083",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/101238?v=4",
         "events_url" : "https://api.github.com/users/kanzure/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanzure/followers",
         "following_url" : "https://api.github.com/users/kanzure/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanzure/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanzure",
         "id" : 101238,
         "login" : "kanzure",
         "node_id" : "MDQ6VXNlcjEwMTIzOA==",
         "organizations_url" : "https://api.github.com/users/kanzure/orgs",
         "received_events_url" : "https://api.github.com/users/kanzure/received_events",
         "repos_url" : "https://api.github.com/users/kanzure/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanzure/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanzure"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I'm pretty concerned about cross-device mutual authentication, and compromise of the computer that coordinates signing. I'm assuming a descriptor-based wallet is already used and devices are a \"little smarter\". How does one wallet device know that the other devices are doing what they're supposed to, and what attacks are possible because they don't? Since each device knows the pubkeys of all the others, those same keys can be used to bootstrap cross-device mutual authentication for the multisig signing set. The security of the assets is also a function of the coordinating wallet (online with UTXO set), which is kind of an invisible party to the security of the keys. Cross-device mutual authentication can solve the following problems:\r\n1. Has any device signed a transaction that the others didn't? (e.g. less than m keys in m-of-n have been compromised -- detect probing or failed attack)\r\n2. m of n operators can collude to create one extra transaction by signing two transactions per access to the signing device, and sharing the second transaction with the other m-1 operators. After m trips to cold storage signing legitimate transactions, they can create one extra arbitrary transaction that the coordinating computer (providing UTXOs) doesn't know about. (A single compromised operator with access to all m different signing devices, at different times, could accomplish the same thing)\r\n3. Have the devices been used to sign for forked coins or a 51% attack? (unexpectedly)\r\n4. Is the coordinating computer compromised (e.g. remove a threshold number of devices from the signing entity and take them to a different coordinating computer).\r\n\r\nPrivate communication channels between (offline) devices can generically be created using the SNICKER half-DH idea (if necessary -- but it seems like signatures might be sufficient), since each device knows the pubkeys of all the others. This can then be relayed, but not falsified by the coordinating computer. This creates an encrypted out-of-band communications channel between offline devices, to share whatever state is necessary to ensure that the data being fed to them is consistent across devices. The coordinating computer(s) is then holding some state, so kind-of is an epsilon participant in the (m+epsilon)-of-n wallet. I have two ideas that might be interesting:\r\n1. A rolling state hash: each device maintains an \"epoch\" hash defined as `h_{epoch} = hash(h_{epoch-1}|serialized_transaction)`. After signing, each device updates its epoch hash and *signs* the new epoch hash for relay to the other devices. Devices excluded from signing but used later (n-m of those) can be relayed the entire history of signing by the coordinating computer (or another signing device).\r\n2. UTXO set accumulator: each device can be fed the set of known/available UTXOs for storage. When one is spent, it removes it from its memory (and could refuse to sign a double-spend if desired). The device refuses to sign unknown UTXOs (forked coins). NiPoWPoW can be used to prevent falsifying the UTXO set.\r\n\r\nOne could define a BIP32 key path for mutual device authentication or half-DH/SNICKER encrypted communication.\r\n\r\nIt might be interesting to consider whether such \"rolling state\" could be used as entropy for determining the k value in MuSig. I'd love to kill that extra round of communication...\r\n\r\nWhat other attack vectors can be mitigated by giving offline devices an encrypted communications channel, and do you think this is valuable enough to implement?",
      "created_at" : "2020-02-14T22:56:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586510581",
      "id" : 586510581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjUxMDU4MQ==",
      "updated_at" : "2020-02-14T22:56:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586510581",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1746780?v=4",
         "events_url" : "https://api.github.com/users/mcelrath/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mcelrath/followers",
         "following_url" : "https://api.github.com/users/mcelrath/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mcelrath/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mcelrath",
         "id" : 1746780,
         "login" : "mcelrath",
         "node_id" : "MDQ6VXNlcjE3NDY3ODA=",
         "organizations_url" : "https://api.github.com/users/mcelrath/orgs",
         "received_events_url" : "https://api.github.com/users/mcelrath/received_events",
         "repos_url" : "https://api.github.com/users/mcelrath/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mcelrath/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mcelrath"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we should take small steps :-)\r\n\r\nSimilar to PSBT, whatever format we come up with can have [proprietary fields](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#proprietary-use-type), which people can use to try out new (authentication) protocols.\r\n\r\nI would like to limit the scope of this issue to initial wallet setup. For many wallet types you can derive all future addresses during setup. PSBT can be expanded for things that happen before / during / after signing.\r\n\r\nOther wallet types, like Lightning, can't derive addresses at wallet generation. Some of that information can piggy-back in PSBTs as most steps in the lightning protocol involve generating a new transaction. But maybe interactive addresses generating requires yet another mechanism.",
      "created_at" : "2020-02-15T09:37:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586572575",
      "id" : 586572575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjU3MjU3NQ==",
      "updated_at" : "2020-02-15T09:37:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586572575",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think proprietary fields will cover everything I mentioned. Thanks!",
      "created_at" : "2020-02-15T17:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586622852",
      "id" : 586622852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjYyMjg1Mg==",
      "updated_at" : "2020-02-15T17:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586622852",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1746780?v=4",
         "events_url" : "https://api.github.com/users/mcelrath/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mcelrath/followers",
         "following_url" : "https://api.github.com/users/mcelrath/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mcelrath/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mcelrath",
         "id" : 1746780,
         "login" : "mcelrath",
         "node_id" : "MDQ6VXNlcjE3NDY3ODA=",
         "organizations_url" : "https://api.github.com/users/mcelrath/orgs",
         "received_events_url" : "https://api.github.com/users/mcelrath/received_events",
         "repos_url" : "https://api.github.com/users/mcelrath/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mcelrath/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mcelrath"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> ({0,1} is a fake descriptor syntax; for now you need a separate receive and change descriptor)\r\n\r\nTo be pedantic, the receiving and change chains need to be separate and marked appropriately. One is useful for eliding outputs from display during transaction signing, and the other for displaying addresses on the screen for depositing verification purposes.",
      "created_at" : "2020-02-18T15:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-587515306",
      "id" : 587515306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzUxNTMwNg==",
      "updated_at" : "2020-02-18T15:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587515306",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think an interesting security problem is validating the data being put together to define the on-chain policy, i.e., making sure the composer file hasn't been owned by a malicious or fault actor. It needs to be simple to re-compute by hand.",
      "created_at" : "2020-02-18T15:28:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-587518233",
      "id" : 587518233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzUxODIzMw==",
      "updated_at" : "2020-02-18T15:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587518233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
