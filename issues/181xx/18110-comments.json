[
   {
      "author_association" : "MEMBER",
      "body" : "See also http://gnusha.org/bitcoin-builds/2019-11-20.log\r\n\r\n```\r\n05:00 < MarcoFalke> So how would I build Bitcoin Core against musl?\r\n05:00 < fanquake> Spin up an Alpine container?\r\n05:02 < fanquake> https://github.com/fanquake/core-review/blob/master/docker/alpine.dockerfile\r\n05:02 < MarcoFalke> Ok, I guess I should make the ci system work with alpine\r\n05:02 < MarcoFalke> Can I do it in Ubuntu as well?\r\n05:02 < MarcoFalke> [08:02] <wumpus> I suppose it's pretty much impossible to do that on ubuntu ,though\r\n05:03 < fanquake> Heh, maybe using that wrapper\r\n05:04 < MarcoFalke> Yeah\r\n05:04 < wumpus> TIL there's a wrapper, this is very cool\r\n05:14 < wumpus> it looks like the wrapper only works for C, not C++\r\n05:16 < wumpus> it's super easy to get to work, installing from source takes 45 seconds or so on my old desktop; but it's no help for bitcoin if it's C only, there's no musl-g++ wrapper\r\n05:23 < wumpus> \"Be aware that, \"out of the box\", the wrapper only supports C applications, not C++. This is because the C++ libraries and headers are missing from the musl include/library path. The existing libstdc++ is actually compatible with musl in most cases and could be used by copying it into the musl library path, but the C++ header files are usually not compatible. One option may be rebuilding just\r\n05:23 < wumpus> libstdc++ against musl; however, if C++ support is needed, it's recommended just to build a native toolchain targetting musl. \"\r\n05:35 < wumpus> I guess there's no way around using something like alpine linux\r\n06:22 < wumpus> effetctively, building C++ for musl requires a full cross toolchain; using a cross-compilation toolchain for the native platform, might be advantageous from a determinism perspective though\r\n06:26 < wumpus> insulated the build from what happens to be installed on the system\r\n07:04 < wumpus> dongcarl cfields what do you think about switching linux builds to musl libc static builds?\r\n07:10 < wumpus> it has the advantage that the binaries work pretty much everywhere instead of only on a limited range of libc versions, and it's starting to be untenable to maintain libc compatibility this far back\r\n07:17 < dongcarl> not opposed... with Guix we won't have to maintain libc compatibility, since we won't be forced to upgrade libc version by ubuntu... but I do see the binary works everywhere advantage\r\n07:18 < wumpus> sure, you can build against a old libc version instead of the libc-compat workaround, but you'd have just as much trouble supporting getauxval\r\n07:19 < wumpus> it doesn't exist in 2.11 no matter how you build against it\r\n",
      "created_at" : "2020-02-10T21:02:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18110#issuecomment-584352245",
      "id" : 584352245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18110",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NDM1MjI0NQ==",
      "updated_at" : "2020-02-10T21:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584352245",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
