[
   {
      "body" : "I'm going to take a look next week, can you post a screen until I do :)?",
      "created_at" : "2013-05-19T19:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18123544",
      "id" : 18123544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-19T19:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18123544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "OK selection\r\n\r\n![x01](https://f.cloud.github.com/assets/126646/537622/9d0cacce-c176-11e2-9d9d-1e085fe11936.png)\r\n\r\nWarning when directory already exists, user can still click OK\r\n\r\n![x02](https://f.cloud.github.com/assets/126646/537629/d36f0366-c176-11e2-87f9-a421fe9f4958.png)\r\n\r\nInvalid or unreachable path\r\n\r\n![x03](https://f.cloud.github.com/assets/126646/537630/d68c936a-c176-11e2-9d3c-b8fb7a1150b6.png)\r\n\r\nToo little free space on device\r\n\r\n![x04](https://f.cloud.github.com/assets/126646/537632/d93101dc-c176-11e2-843f-60f549005a1d.png)\r\n",
      "created_at" : "2013-05-20T10:08:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18140343",
      "id" : 18140343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T17:58:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18140343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Changed Gb -> GB, checking now happens in separate thread to prevent blocking the GUI thread.",
      "created_at" : "2013-05-20T13:41:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18147751",
      "id" : 18147751,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T13:41:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18147751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Just some small comments:\r\n\r\n- Do you allow OK even when low disk space was detected, looks like OK is available there.\r\n- Do you intend to show this even for existing installations or just new ones (and for existing ones when supplying ``-choosedatadir``)?\r\n- What happens when a user supplies ``-choosedatadir``, will you copy old to new or just switch from old to new?\r\n- Do we want to place a clickable URI to official Bitcoin site here or anywhere else in the client? I think that would be a good addition.\r\n- Perhaps display ``none`` for available space when case \"Invalid or unreachable path\"\r\n\r\n- Perhaps we could also add a clickable button for launching ``-choosedatadir`` into the options dialog, when I finish my work there?",
      "created_at" : "2013-05-20T15:32:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18153882",
      "id" : 18153882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T15:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18153882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "<i>&gt; Do you allow OK even when low disk space was detected, looks like OK is available there.</i>\r\n\r\nYes. The user can choose OK in all cases where it's possible to create the directory. They may plain on cleaning up the drive immediately (ie, deleting one blueray image should be enough to make space). In the end it's their own responsibility.\r\n\r\n<i>&gt; Do you intend to show this even for existing installations or just new ones</i>\r\n\r\nOnly for new installations (when the default data directory doesn't exist). Otherwise it will confuse users into making a new data directory and they will wonder where their block chain / wallet will have gone.\r\n\r\n<i>&gt; Do we want to place a clickable URI to official Bitcoin site here or anywhere else in the client? I think that would be a good addition.</i>\r\n\r\nI'm not sure why, unless it links to an explanation about data directories. But feel free to add more flair to the window later. I'm just focusing on the functionality for now.\r\n\r\n<i>&gt; Perhaps display none for available space when case \"Invalid or unreachable path\"</i>\r\n\r\nYeah... or N/A\r\n\r\n<i>&gt; Perhaps we could also add a clickable button for launching -choosedatadir into the options dialog, when I finish my work there?</i>\r\n\r\nI don't want to support changing the data directory while the client is running.\r\n\r\nIf the user wants to move the data directory they can do so themselves while the client is not running, and the \"choose data directory\" dialog will automatically pop up on next run as the software notices that the data directory does not exist.\r\n",
      "created_at" : "2013-05-20T15:43:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18154547",
      "id" : 18154547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T15:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18154547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4299364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4299364"
         }
      },
      "body" : "I guess Gavin would love to see some unit test for this :-P. Btw. I also thought about such a thing a few days ago ^^.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-05-20T15:46:10Z",
      "diff_hunk" : "@@ -602,6 +602,12 @@ bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n     return true;\n }\n \n+bool SetArg(const std::string& strArg, const std::string& strValue)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4299364",
      "id" : 4299364,
      "original_commit_id" : "3515b0463879f2a3459ca5282b21a7bd02552b6f",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4299364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4299820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4299820"
         }
      },
      "body" : "I didn't like adding this function, but I didn't see another way to do this (well ok it's possible to assign to `mapArgs` directly, as it is exported outside `util.cpp`, this is done in `rpcmining.cpp` for example... but that wouldn't be better would it). \r\nSetSoftArg is not good enough as the directory selected in the dialog should override everything, even the data directory passed on the command line, otherwise it'd be confusing. Another solution would be to not show the dialog at all when the datadir is overridden on the command line. Hmm that may be better.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-05-20T16:09:41Z",
      "diff_hunk" : "@@ -602,6 +602,12 @@ bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n     return true;\n }\n \n+bool SetArg(const std::string& strArg, const std::string& strValue)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4299820",
      "id" : 4299820,
      "original_commit_id" : "3515b0463879f2a3459ca5282b21a7bd02552b6f",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4299820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "ObUIshedpaint (feel free to ignore):  The first \"Warning:\" is perhaps a bit intense and should probably be more reserved for things with risk of irreparable harm (encrypting wallets, deleting wallet directories, sending a 1000 BTC fee, etc.).  Using space is just a fact of normal software operation and is nothing to be concerned about... unless you don't have enoughÃ¢ÂÂ so I think it's okay in a low/insufficient space case... \r\n",
      "created_at" : "2013-05-20T17:20:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18159921",
      "id" : 18159921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T17:20:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18159921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell: fixed that, all the warnings was indeed a bit over the top",
      "created_at" : "2013-05-20T17:49:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18161639",
      "id" : 18161639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T17:49:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18161639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ff78dd81170c15f7fed00f803dde109283e78c72 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-05-20T18:48:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18165028",
      "id" : 18165028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-20T18:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18165028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "\"official bitcoin site\"?!\n\nI suspect you mean \"original satoshi client site\"...\n\n> Do we want to place a clickable URI to official Bitcoin site here or\nanywhere else in the client? I think that would be a good addition.",
      "created_at" : "2013-05-21T03:40:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18187291",
      "id" : 18187291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T03:40:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18187291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Just a question. When you write 'GB', do you really mean 'GB' - i.e. 10^9, or do you instead mean 'GiB' - i.e. 2^30 ?\r\n\r\nOn May 20, 2013, at 7:41 AM, Wladimir J. van der Laan wrote:\r\n\r\n> Changed Gb -> GB, checking now happens in separate thread to prevent blocking the GUI thread.\r\n> \r\n> Ã¢ÂÂ\r\n> Reply to this email directly or view it on GitHub.\r\n> ",
      "created_at" : "2013-05-21T05:58:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18190661",
      "id" : 18190661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T05:58:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18190661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1360399?v=3",
         "events_url" : "https://api.github.com/users/jbreher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jbreher/followers",
         "following_url" : "https://api.github.com/users/jbreher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jbreher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jbreher",
         "id" : 1360399,
         "login" : "jbreher",
         "organizations_url" : "https://api.github.com/users/jbreher/orgs",
         "received_events_url" : "https://api.github.com/users/jbreher/received_events",
         "repos_url" : "https://api.github.com/users/jbreher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jbreher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jbreher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jbreher"
      }
   },
   {
      "body" : "@rebroad No, he means the Armory site obviously... \r\n\r\n@jbreher GB as in 10^9. This is Bitcoin, we use SI units.\r\n",
      "created_at" : "2013-05-21T06:00:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18190705",
      "id" : 18190705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T06:00:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18190705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I really hate that GiB stuff, for me all units are 1024 based but I would never use GiB, KiB or such nonsense ^^.",
      "created_at" : "2013-05-21T06:07:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18190863",
      "id" : 18190863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T06:07:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18190863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/55605706a21e2325720c989ad690f83aa2934f78 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in contrib/test-scripts)\n2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n4. The test suite fails on either Linux i386 or Win32\n5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n\nIf you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-05-21T06:31:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18191512",
      "id" : 18191512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T06:31:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18191512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "Ugh, I'm trying to find out the OS path separator using make_preferred() for a message but this doesn't exist on the ancient boost used by pulltester.\r\n",
      "created_at" : "2013-05-21T06:59:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18192258",
      "id" : 18192258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T06:59:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18192258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Should be solved now.",
      "created_at" : "2013-05-21T07:02:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18192350",
      "id" : 18192350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T07:02:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18192350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I also think we should drop support for ancient Boost version. I never understood, why it is a problem to do so anyway.",
      "created_at" : "2013-05-21T07:02:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18192352",
      "id" : 18192352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T07:02:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18192352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e024910520ab3868240beebfacec04de15c929ca for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-05-21T07:27:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18193146",
      "id" : 18193146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T07:27:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18193146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "I understand that many hate it. However, your insistence on casually using units which never had any standards organization bless them in any way leaves you perpetuating a needless ambiguity, and in conflict with SI, ANSI, NIST, ISO, IEC, ITC, IETF, BSA, and just about any accredited standards organization one might care to name. All of whom have issued clear guidance that (e.g.) GB _always_ refers to 10^9, and GiB _always_ refers to 2^30.\r\n\r\nhttps://en.wikipedia.org/wiki/IEEE_1541\r\n\r\nhttp://physics.nist.gov/cuu/Units/binary.html\r\n\r\nOn May 21, 2013, at 12:07 AM, Philip Kaufmann wrote:\r\n\r\n> I really hate that GiB stuff, for me all units are 1024 based but I would never use GiB, KiB or such nonsense ^^.\r\n> \r\n> Ã¢ÂÂ\r\n> Reply to this email directly or view it on GitHub.\r\n> ",
      "created_at" : "2013-05-21T22:57:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18247220",
      "id" : 18247220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-21T22:57:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18247220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1360399?v=3",
         "events_url" : "https://api.github.com/users/jbreher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jbreher/followers",
         "following_url" : "https://api.github.com/users/jbreher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jbreher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jbreher",
         "id" : 1360399,
         "login" : "jbreher",
         "organizations_url" : "https://api.github.com/users/jbreher/orgs",
         "received_events_url" : "https://api.github.com/users/jbreher/received_events",
         "repos_url" : "https://api.github.com/users/jbreher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jbreher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jbreher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jbreher"
      }
   },
   {
      "body" : "As someone who has been using computers since 1979, I can confirm that KB\r\nalways referred to 1024 and only recently did I notice that people\r\nconfusingly started using KB to refer to 1000, and this confusion has been\r\nfurther compounded by the addition of the term KiB.\r\nOn May 22, 2013 5:58 AM, \"Joe Breher\" <notifications@github.com> wrote:\r\n\r\n> I understand that many hate it. However, your insistence on casually using\r\n> units which never had any standards organization bless them in any way\r\n> leaves you perpetuating a needless ambiguity, and in conflict with SI,\r\n> ANSI, NIST, ISO, IEC, ITC, IETF, BSA, and just about any accredited\r\n> standards organization one might care to name. All of whom have issued\r\n> clear guidance that (e.g.) GB _always_ refers to 10^9, and GiB _always_\r\n> refers to 2^30.\r\n>\r\n> https://en.wikipedia.org/wiki/IEEE_1541\r\n>\r\n> http://physics.nist.gov/cuu/Units/binary.html\r\n>\r\n> On May 21, 2013, at 12:07 AM, Philip Kaufmann wrote:\r\n>\r\n> > I really hate that GiB stuff, for me all units are 1024 based but I\r\n> would never use GiB, KiB or such nonsense ^^.\r\n> >\r\n> > Ã¢ÂÂ\r\n> > Reply to this email directly or view it on GitHub.\r\n> >\r\n>\r\n> Ã¢ÂÂ\r\n> Reply to this email directly or view it on GitHub<https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18247220>\r\n> .\r\n>",
      "created_at" : "2013-05-22T01:51:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18252993",
      "id" : 18252993,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-22T01:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18252993",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Can you take the units discussion elsewhere please? These kinds of\ndiscussions can go on for centuries (let's settle imperial versus metric\nfirst when we're at it) and still go nowhere. We don't have time for that.",
      "created_at" : "2013-05-22T03:48:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18255963",
      "id" : 18255963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-22T03:48:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18255963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Perhaps have two choices when the client starts up for the first time, the first to download the block chain with all the defaults, and the second being to change the data directory or whatever. This will alleviate the technicality of it for non-technical people, and make the first dialogue screen more welcoming.\r\n\r\nSomething maybe like:\r\n\r\nStart Block Chain | Change Directory",
      "created_at" : "2013-05-31T05:30:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18724042",
      "id" : 18724042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T05:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18724042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063102?v=3",
         "events_url" : "https://api.github.com/users/Suffice/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Suffice/followers",
         "following_url" : "https://api.github.com/users/Suffice/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Suffice/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Suffice",
         "id" : 1063102,
         "login" : "Suffice",
         "organizations_url" : "https://api.github.com/users/Suffice/orgs",
         "received_events_url" : "https://api.github.com/users/Suffice/received_events",
         "repos_url" : "https://api.github.com/users/Suffice/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Suffice/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Suffice/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Suffice"
      }
   },
   {
      "body" : "@Suffice As a follow-up, maybe there can be some menu option \"Move datadir\", which requires a restart immediately afterwards (or not, but that's definitely a lot more work). I think that's independent from this pullreq, which already improves 99% of use cases.",
      "created_at" : "2013-05-31T05:36:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18724174",
      "id" : 18724174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T05:36:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18724174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@suffice yeah maybe... but I *do* want to make sure people see the warning about downloading 10Gb, as one of the reasons for this is that people don't get freaked out later when they see their harddisk being filled up. In any case they already accept the default by clicking \"OK\" immediately. On a fresh install, it will initially show the default data directory.\r\n\r\n@sipa Could be useful option. But I feel better about that once block chain dir != wallet dir. No problem with moving the block chain, it can be redownloaded if the user makes a mistake, but as moving implies a delete I don't really want to \"move\" the wallet.dat. Copy at most. Let people that know what they're doing do this manually for now.\r\n",
      "created_at" : "2013-05-31T05:51:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18724463",
      "id" : 18724463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T05:51:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18724463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj ACK, separating datadir from wallets must happen first.",
      "created_at" : "2013-05-31T05:59:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18724649",
      "id" : 18724649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T05:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18724649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "![default](https://f.cloud.github.com/assets/126646/589677/2f89fd14-c9c8-11e2-9485-2118c7a87dd8.png)\r\n\r\n@suffice this is better I think. It makes clear that the initially selected directory is the default, and requires an extra radio button click to change it to prevent it from being changed cluelessly. And it still shows what the default data directory is (though disabled), and whether there is enough space there.\r\n",
      "created_at" : "2013-05-31T08:02:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18730089",
      "id" : 18730089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T08:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18730089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I don't know anymore. . Pulling this off in best way possible is tricky. This is how most program installs look:\r\n\r\n![capture](https://f.cloud.github.com/assets/1063102/592594/c0ef55aa-ca1e-11e2-8b17-5af8f888d2cb.png)\r\n\r\nPerhaps something like this:\r\n\r\n    Some concise text here for an explanation of something\r\n\r\n    The block chain and your wallet files will go here...\r\n    [ C:\\Program Files (x86)\\Bitcoin           ]   [ Browse... ]\r\n\r\n\r\n    Space required:   10.3 GB's\r\n    Space available:  32.4 GB's\r\n    The space required for the block chain will increase over time as the chain grows.\r\n    (The block chain is essentially a ledger of every bitcoin transaction ever.)\r\n\r\n                                                   Some buttons here\r\n\r\nI noticed that the block chain is currently stored in the AppData directory on Windows, will that change?\r\n\r\nIt would be nice if the wallet auto purged parts of the block chain that are no longer needed, and perhaps requests parts of the chain that it needs again, like in the event of importing addresses. (Tricky)\r\n\r\nNew clients could start from the near end of this chain, as they won't likely need the whole chain.",
      "created_at" : "2013-05-31T18:51:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18764306",
      "id" : 18764306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T19:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18764306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063102?v=3",
         "events_url" : "https://api.github.com/users/Suffice/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Suffice/followers",
         "following_url" : "https://api.github.com/users/Suffice/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Suffice/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Suffice",
         "id" : 1063102,
         "login" : "Suffice",
         "organizations_url" : "https://api.github.com/users/Suffice/orgs",
         "received_events_url" : "https://api.github.com/users/Suffice/received_events",
         "repos_url" : "https://api.github.com/users/Suffice/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Suffice/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Suffice/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Suffice"
      }
   },
   {
      "body" : "<b>I noticed that the block chain is currently stored in the AppData directory on Windows, will that change?</b>\r\n\r\nAfter this pull it will be possible to change that, at least on new installs, that's the point of it.\r\n",
      "created_at" : "2013-05-31T20:39:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18770290",
      "id" : 18770290,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-05-31T20:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18770290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e8d6ef18ac4d38ca93827f739aa560345c5fcff1 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-06-02T03:13:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18801158",
      "id" : 18801158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-02T03:13:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18801158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "Thats how it looks on mac with Qt 4.8.4:\r\n\r\n![bildschirmfoto 2013-06-03 um 12 55 00](https://f.cloud.github.com/assets/178464/598893/4cb5f656-cc3c-11e2-9c5c-d482fc0185af.png)\r\n![bildschirmfoto 2013-06-03 um 12 54 31](https://f.cloud.github.com/assets/178464/598894/4cf245de-cc3c-11e2-9c63-0bc0a73dd458.png)\r\n![bildschirmfoto 2013-06-03 um 12 54 16](https://f.cloud.github.com/assets/178464/598895/4cf0a06c-cc3c-11e2-945a-e0545d153ddd.png)\r\n\r\nMaybe the button for opening the file dialog must be rearranged a little bit?",
      "created_at" : "2013-06-03T10:57:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18833985",
      "id" : 18833985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T10:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18833985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Can you display the path for the default data directory behind option one or as tooltip :)?",
      "created_at" : "2013-06-03T11:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18836291",
      "id" : 18836291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T11:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18836291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "@jonasschnelli eh I'll take a look\n\n@diapolo when you click the first option, it shows the default directory\ngreyed out in the input field.",
      "created_at" : "2013-06-03T12:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18837130",
      "id" : 18837130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T12:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18837130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'm currently trying to build and got 2 conflicts while rebasing to current master, can you take a look :).",
      "created_at" : "2013-06-03T13:46:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18842006",
      "id" : 18842006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T13:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18842006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499664"
         }
      },
      "body" : "Perhaps extend (default: 0) to (default: 0, 1 on first client startup only)?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-03T13:54:33Z",
      "diff_hunk" : "@@ -431,7 +431,8 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     uiOptions = tr(\"UI options\") + \":\\n\" +\n         \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n         \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n+        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n+        \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499664",
      "id" : 4499664,
      "original_commit_id" : "e8d6ef18ac4d38ca93827f739aa560345c5fcff1",
      "original_position" : 6,
      "path" : "src/qt/guiutil.cpp",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499796"
         }
      },
      "body" : "Can you make this non-translatable, as currentlty this generates ``...`` to be translated :).",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-03T13:59:06Z",
      "diff_hunk" : "@@ -0,0 +1,266 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>Intro</class>\n+ <widget class=\"QDialog\" name=\"Intro\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>676</width>\n+    <height>330</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Welcome</string>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_2\">\n+     <property name=\"styleSheet\">\n+      <string notr=\"true\">QLabel { font-style:italic; }</string>\n+     </property>\n+     <property name=\"text\">\n+      <string>Welcome to Bitcoin-Qt.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <spacer name=\"verticalSpacer_4\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Vertical</enum>\n+     </property>\n+     <property name=\"sizeType\">\n+      <enum>QSizePolicy::Minimum</enum>\n+     </property>\n+     <property name=\"sizeHint\" stdset=\"0\">\n+      <size>\n+       <width>20</width>\n+       <height>15</height>\n+      </size>\n+     </property>\n+    </spacer>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_4\">\n+     <property name=\"text\">\n+      <string>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n+     <property name=\"text\">\n+      <string>At least %1GB will be stored in this directory. Make sure that there is enough disk space available.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirDefault\">\n+     <property name=\"text\">\n+      <string>Use the default data directory</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirCustom\">\n+     <property name=\"text\">\n+      <string>Use a custom data directory:</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+     <property name=\"spacing\">\n+      <number>0</number>\n+     </property>\n+     <property name=\"sizeConstraint\">\n+      <enum>QLayout::SetDefaultConstraint</enum>\n+     </property>\n+     <item>\n+      <spacer name=\"horizontalSpacer\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeType\">\n+        <enum>QSizePolicy::Fixed</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>60</width>\n+         <height>20</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+       <property name=\"sizeConstraint\">\n+        <enum>QLayout::SetDefaultConstraint</enum>\n+       </property>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"dataDirectory\"/>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"ellipsisButton\">",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499796",
      "id" : 4499796,
      "original_commit_id" : "e8d6ef18ac4d38ca93827f739aa560345c5fcff1",
      "original_position" : 115,
      "path" : "src/qt/forms/intro.ui",
      "position" : 115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499903"
         }
      },
      "body" : "This needs the false parameter now.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-03T14:03:34Z",
      "diff_hunk" : "@@ -128,6 +169,21 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n+    // Application identification (must be set before OptionsModel is initialized,\n+    // as it is used to locate QSettings)\n+    QApplication::setOrganizationName(\"Bitcoin\");\n+    QApplication::setOrganizationDomain(\"bitcoin.org\");\n+    if(GetBoolArg(\"-testnet\")) // Separate UI settings for testnet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4499903",
      "id" : 4499903,
      "original_commit_id" : "e8d6ef18ac4d38ca93827f739aa560345c5fcff1",
      "original_position" : 70,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4499903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4502676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4502676"
         }
      },
      "body" : "I think that'd only add clutter. Yes, it displays the dialog also if the configured (or default) data directory does not exist, but the setting still defaults to 0. -choosedatadir is just a way to force this.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-03T15:56:09Z",
      "diff_hunk" : "@@ -431,7 +431,8 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     uiOptions = tr(\"UI options\") + \":\\n\" +\n         \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n         \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n+        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n+        \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4502676",
      "id" : 4502676,
      "original_commit_id" : "e8d6ef18ac4d38ca93827f739aa560345c5fcff1",
      "original_position" : 6,
      "path" : "src/qt/guiutil.cpp",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4502676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4502684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4502684"
         }
      },
      "body" : "Yeah, good point",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-03T15:56:23Z",
      "diff_hunk" : "@@ -0,0 +1,266 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>Intro</class>\n+ <widget class=\"QDialog\" name=\"Intro\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>676</width>\n+    <height>330</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Welcome</string>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_2\">\n+     <property name=\"styleSheet\">\n+      <string notr=\"true\">QLabel { font-style:italic; }</string>\n+     </property>\n+     <property name=\"text\">\n+      <string>Welcome to Bitcoin-Qt.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <spacer name=\"verticalSpacer_4\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Vertical</enum>\n+     </property>\n+     <property name=\"sizeType\">\n+      <enum>QSizePolicy::Minimum</enum>\n+     </property>\n+     <property name=\"sizeHint\" stdset=\"0\">\n+      <size>\n+       <width>20</width>\n+       <height>15</height>\n+      </size>\n+     </property>\n+    </spacer>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_4\">\n+     <property name=\"text\">\n+      <string>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n+     <property name=\"text\">\n+      <string>At least %1GB will be stored in this directory. Make sure that there is enough disk space available.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirDefault\">\n+     <property name=\"text\">\n+      <string>Use the default data directory</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirCustom\">\n+     <property name=\"text\">\n+      <string>Use a custom data directory:</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+     <property name=\"spacing\">\n+      <number>0</number>\n+     </property>\n+     <property name=\"sizeConstraint\">\n+      <enum>QLayout::SetDefaultConstraint</enum>\n+     </property>\n+     <item>\n+      <spacer name=\"horizontalSpacer\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeType\">\n+        <enum>QSizePolicy::Fixed</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>60</width>\n+         <height>20</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+       <property name=\"sizeConstraint\">\n+        <enum>QLayout::SetDefaultConstraint</enum>\n+       </property>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"dataDirectory\"/>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"ellipsisButton\">",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4502684",
      "id" : 4502684,
      "original_commit_id" : "e8d6ef18ac4d38ca93827f739aa560345c5fcff1",
      "original_position" : 115,
      "path" : "src/qt/forms/intro.ui",
      "position" : 115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4502684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased, and ... changed to untranslatable.\r\n\r\nI still don't understand the macosx problem. The button is simply in a horizontal box layout (with no special settings) with the input field.",
      "created_at" : "2013-06-03T16:16:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18852456",
      "id" : 18852456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T16:16:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18852456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aaa6b5e87b69f6cbcca3d1fc430d8bc9f73ac609 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-06-03T17:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18856094",
      "id" : 18856094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-03T17:13:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18856094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c7685061d2437b9c3a1c61e490dd673d9a7ed6e for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-06-04T06:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-18891373",
      "id" : 18891373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-04T06:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18891373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4561915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4561915"
         }
      },
      "body" : "Can you add a small comment that this is 10GB and below 1GB currently :)?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T06:43:53Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4561915",
      "id" : 4561915,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 12,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4561915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "It behaves a little weird, let me explain:\r\n\r\n- default selected (``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoin``)\r\n-- message ``9GB of free space available (of 10GB needed).`` displayed\r\n\r\n- switching to custom, message is the same\r\n-- it doesn't show that this directory already exists\r\n-- adding a ``\\`` leads to ``Directory already exists...``\r\n-- adding a ``\\test\\ leads to ``Warning: Low disk space on device``\r\n\r\nEdit: Sorry, I didn't have the recent rebase changes in my local branch... will test again!\r\n\r\nEdit 2: Behaviour is the same, I would await, that ``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoin`` is detected as existing path already, even without the ``\\`` at the end.\r\n\r\n@laanwj Did you take a look at this comments yet?",
      "created_at" : "2013-06-06T06:55:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19027981",
      "id" : 19027981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-10T18:29:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19027981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562343"
         }
      },
      "body" : "Can you explain to me what this is for?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:36:38Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562343",
      "id" : 4562343,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 63,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562363"
         }
      },
      "body" : "Should we perhaps allow replyMessage to contain more strings, so that Low disk space can co-exist with others via ``+=``?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:38:00Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562363",
      "id" : 4562363,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 75,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562374"
         }
      },
      "body" : "If there is a necessity to, sure.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:39:30Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562374",
      "id" : 4562374,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 75,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562406"
         }
      },
      "body" : "When you enter a path that does not exist, it has to find the first parent\npath up the tree that *does* exist to be able to determine the free space\non that file system. Boost will not accept non existing paths.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:41:57Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562406",
      "id" : 4562406,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 63,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562445"
         }
      },
      "body" : "Indeed could be clarified. But as such comments tend to go out of date,\nmaking it clear in the code through multiplying 10 with a constant GB may\nbe better.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:46:14Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562445",
      "id" : 4562445,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 12,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562459"
         }
      },
      "body" : "Was just a hint, because Low disk space should always be shown, even if there are other messages available IMHO.\r\nEdit: Do you intent to change that one before a merge or consider it useless?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:47:20Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562459",
      "id" : 4562459,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 75,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562487"
         }
      },
      "body" : "Yeah, so perhaps just switch the 2 and use GB_BYTES * 10 then :).",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:49:41Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562487",
      "id" : 4562487,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 12,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562501"
         }
      },
      "body" : "Just to understand, ``fs::space`` and ``fs::exists()`` throws a fs error, when the path doesn't exist or there is a problem?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T07:50:54Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4562501",
      "id" : 4562501,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 92,
      "path" : "src/qt/intro.cpp",
      "position" : 83,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4562501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4563329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4563329"
         }
      },
      "body" : "fs::exists? No, only when something goes wrong, when it simply doesn't\nexist it returns false.\nThe free disk space function on the other hand throws in all cases where\nsomething goes wrong.\nThe catch is a catch-all for all problems that can happen during probing.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-06T08:51:49Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4563329",
      "id" : 4563329,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 92,
      "path" : "src/qt/intro.cpp",
      "position" : 83,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4563329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Can you test if you are able to use a non-default language (no english) and that this is loaded? Either there is a bug in this pull or I have a problem with my local build related to this in combination with my QSettings work (or a problem with this and #2700?).",
      "created_at" : "2013-06-10T18:30:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19217341",
      "id" : 19217341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-10T18:30:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19217341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4618677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4618677"
         }
      },
      "body" : "You've got some nasty bug in this code part.\r\n\r\nStep 1:\r\nde_DE\r\nStep 2 (because of a QSetting):\r\nde\r\nStep 3 (still from the QSetting):\r\nde\r\n\r\nlang = de and after this line it is just empty, which leads to the default language getting activated!",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-10T18:50:05Z",
      "diff_hunk" : "@@ -110,6 +112,45 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n+/** Set up translations */\n+static void initTranslations()\n+{\n+    QSettings settings;\n+\n+    // Get desired locale (e.g. \"de_DE\")\n+    // 1) System default language\n+    QString lang_territory = QLocale::system().name();\n+    // 2) Language from QSettings\n+    lang_territory = settings.value(\"language\", lang_territory).toString();\n+    // 3) -lang command line argument\n+    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+\n+    // Convert to \"de\" only by truncating \"_DE\"\n+    QString lang = lang_territory;\n+    lang.truncate(lang_territory.lastIndexOf('_'));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4618677",
      "id" : 4618677,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 35,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 37,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4618677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4628665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4628665"
         }
      },
      "body" : "Thanks for testing and reporting, I'll take a look.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-11T07:36:58Z",
      "diff_hunk" : "@@ -110,6 +112,45 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n+/** Set up translations */\n+static void initTranslations()\n+{\n+    QSettings settings;\n+\n+    // Get desired locale (e.g. \"de_DE\")\n+    // 1) System default language\n+    QString lang_territory = QLocale::system().name();\n+    // 2) Language from QSettings\n+    lang_territory = settings.value(\"language\", lang_territory).toString();\n+    // 3) -lang command line argument\n+    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+\n+    // Convert to \"de\" only by truncating \"_DE\"\n+    QString lang = lang_territory;\n+    lang.truncate(lang_territory.lastIndexOf('_'));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4628665",
      "id" : 4628665,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 35,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 37,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4628665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased, and language problem solved (the QTranslators were getting freed).\r\n",
      "created_at" : "2013-06-11T14:14:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19264212",
      "id" : 19264212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-11T14:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19264212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4635716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4635716"
         }
      },
      "body" : "After your recent changes the thing here is like this:\r\n1) lang_territory = de_DE\r\n2) lang_territory = de (as that is my stored QSetting)\r\n3) lang_territory = de (as I didn't pass ``-lang``)\r\n\r\nSo lang = de before doing the ``truncate()`` and is empty afterwards. So you pass an empty variable ``lang`` into the further calls, where it should be ``de`` and ``de`` (via ``lang_territory``) where it should be ``de_DE``, right? It seems to work okay, but I'm not sure if this is intended :).",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-11T15:12:36Z",
      "diff_hunk" : "@@ -110,6 +112,45 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n+/** Set up translations */\n+static void initTranslations()\n+{\n+    QSettings settings;\n+\n+    // Get desired locale (e.g. \"de_DE\")\n+    // 1) System default language\n+    QString lang_territory = QLocale::system().name();\n+    // 2) Language from QSettings\n+    lang_territory = settings.value(\"language\", lang_territory).toString();\n+    // 3) -lang command line argument\n+    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+\n+    // Convert to \"de\" only by truncating \"_DE\"\n+    QString lang = lang_territory;\n+    lang.truncate(lang_territory.lastIndexOf('_'));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4635716",
      "id" : 4635716,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 35,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 37,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4635716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4639056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4639056"
         }
      },
      "body" : "That's how it always worked -- if lang_territory contains a string such as \"de_DE\", lang will be \"de\" and both will be loaded. If lang_territory contains a string such as \"de\", lang will be \"\" and just \"de\" will be loaded. It will indeed pass an empty string, but as it cannot find a translation with an empty name that's a no-op.\r\n",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-11T17:31:06Z",
      "diff_hunk" : "@@ -110,6 +112,45 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n+/** Set up translations */\n+static void initTranslations()\n+{\n+    QSettings settings;\n+\n+    // Get desired locale (e.g. \"de_DE\")\n+    // 1) System default language\n+    QString lang_territory = QLocale::system().name();\n+    // 2) Language from QSettings\n+    lang_territory = settings.value(\"language\", lang_territory).toString();\n+    // 3) -lang command line argument\n+    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+\n+    // Convert to \"de\" only by truncating \"_DE\"\n+    QString lang = lang_territory;\n+    lang.truncate(lang_territory.lastIndexOf('_'));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4639056",
      "id" : 4639056,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 35,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 37,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4639056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6aad2cacef1af45185773622548ba74c755bbe79 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-06-13T03:28:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19370158",
      "id" : 19370158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-13T03:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19370158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "@Diapolo does it still show the strange behavior on Windows? If so, any idea what causes that?",
      "created_at" : "2013-06-14T08:49:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19445886",
      "id" : 19445886,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-14T08:49:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19445886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Sugestion: Can you make the info/error messages selectable and show the beam-cursor?\r\nI also think the dialog could be a little smaller in height.\r\n\r\nTranslations are working again!\r\n\r\nAnyway, I'll report what is happening, my default datadir is: ``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoin``.\r\n\r\nStart with -choosedatadir and default selected:\r\n8GB free of 10GB needed message shown.\r\n\r\nChange from default to custom:\r\n8GB free of 10GB needed message shown.\r\n\r\nChange path into ``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoi``:\r\n8GB free of 10GB needed message shown.\r\nWarning: Low disk space on device shown.\r\n\r\nChange path into ``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoin\\``\r\n8GB free of 10GB needed message shown.\r\nDirectory already exists. Add \\name... and so on, shown.\r\n\r\n----\r\n\r\nI think the default detected path ``C:\\Users\\Diapolo\\AppData\\Roaming\\Bitcoin`` should show the Directory already exists message but the current implementation does this only after applying the ``\\``, which I don't expect.",
      "created_at" : "2013-06-14T10:59:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19451069",
      "id" : 19451069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-14T11:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19451069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699187"
         }
      },
      "body" : "@laanwj Do we need this really? I mean we have ``freeSpace``-label, which is rather clear IMHO.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-14T11:09:19Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699187",
      "id" : 4699187,
      "original_commit_id" : "4c7685061d2437b9c3a1c61e490dd673d9a7ed6e",
      "original_position" : 75,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699203"
         }
      },
      "body" : "Can you change these style-sheets to ``color: #800000;`` to be CSS standard-conformant?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-14T11:10:08Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory()\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699203",
      "id" : 4699203,
      "original_commit_id" : "6aad2cacef1af45185773622548ba74c755bbe79",
      "original_position" : 197,
      "path" : "src/qt/intro.cpp",
      "position" : 188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699235"
         }
      },
      "body" : "Why is bytesAvailable == 0 no problem so that you choose to cover it here?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-14T11:12:37Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory()\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");\n+        break;\n+    case FreespaceChecker::ST_WARNING:\n+        ui->errorMessage->setText(tr(\"Warning\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");\n+        break;\n+    }\n+    /* Indicate number of bytes available */\n+    if(bytesAvailable == 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699235",
      "id" : 4699235,
      "original_commit_id" : "6aad2cacef1af45185773622548ba74c755bbe79",
      "original_position" : 205,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699249"
         }
      },
      "body" : "Perhaps exchange the number with ``GB_BYTES``?",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-14T11:14:01Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory()\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");\n+        break;\n+    case FreespaceChecker::ST_WARNING:\n+        ui->errorMessage->setText(tr(\"Warning\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");\n+        break;\n+    }\n+    /* Indicate number of bytes available */\n+    if(bytesAvailable == 0)\n+    {\n+        ui->freeSpace->setText(\"\");\n+    } else {\n+        QString freeString = QString::number(bytesAvailable/1000000000) + tr(\"GB of free space available\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4699249",
      "id" : 4699249,
      "original_commit_id" : "6aad2cacef1af45185773622548ba74c755bbe79",
      "original_position" : 209,
      "path" : "src/qt/intro.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4699249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4715659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4715659"
         }
      },
      "body" : "I'm pretty sure this is not required by the standard (stack overflow agrees, see top answer here http://stackoverflow.com/questions/11939595/leaving-out-the-last-semicolon-of-a-css-block ). Can you quote me the part of the standard where it says that the last declaration needs a ; separator? ",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-16T08:13:25Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory()\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4715659",
      "id" : 4715659,
      "original_commit_id" : "6aad2cacef1af45185773622548ba74c755bbe79",
      "original_position" : 197,
      "path" : "src/qt/intro.cpp",
      "position" : 188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T08:22:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4715659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Should be solved now.",
      "created_at" : "2013-06-16T08:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19509451",
      "id" : 19509451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-16T08:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19509451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4716181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4716181"
         }
      },
      "body" : "Seems you are correct here, I checked via: http://jigsaw.w3.org/css-validator/#validate_by_input and both are correct, with and without ``;``.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-16T15:35:41Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * 1000000000LL;\n+static const uint64 GB_BYTES = 1000000000;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_WARNING,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists */\n+    fs::path parentDir = dataDir;\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(freeBytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            replyStatus = ST_WARNING;\n+            replyMessage = tr(\"Low disk space on device.\");\n+        }\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = QDir::toNativeSeparators(\"/\");\n+                replyStatus = ST_OK;\n+                if(dataDirStr == Intro::getDefaultDataDirectory())\n+                    replyMessage = \"\"; /* No OK message if this is just the default */\n+                else\n+                    replyMessage = tr(\"Directory already exists. Add <code>%1name</code> if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory()\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4716181",
      "id" : 4716181,
      "original_commit_id" : "6aad2cacef1af45185773622548ba74c755bbe79",
      "original_position" : 197,
      "path" : "src/qt/intro.cpp",
      "position" : 188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-16T15:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4716181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "The directory things and disk-space stuff is fixed, great :).\r\nOnly thing left is the layout / size, I still think the dialogs height is too large and I would perhaps align the input field for the path and the message labels with the left border (like the selection boxes).",
      "created_at" : "2013-06-16T16:04:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19514254",
      "id" : 19514254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-16T16:04:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19514254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Feel free to play with the layout a bit...",
      "created_at" : "2013-06-16T17:49:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19515842",
      "id" : 19515842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-16T17:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19515842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "GUI can be improved later :-).\r\n\r\nACK",
      "created_at" : "2013-06-16T19:03:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19517099",
      "id" : 19517099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-16T19:03:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19517099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/be77b637fcf5983286382a9b9677fb97b026abe2 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2013-06-19T00:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-19651776",
      "id" : 19651776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-06-19T00:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19651776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4833417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4833417"
         }
      },
      "body" : "Perhaps you can update this to use ``TestNet()`` from chainparams.h, which you need to include here then? Otherwise I can do this after it's merged :).\r\n\r\nEdit: We don't need chainparams.h as it's coming from init.h alreay.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-23T15:48:25Z",
      "diff_hunk" : "@@ -130,6 +172,22 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n+    // Application identification (must be set before OptionsModel is initialized,\n+    // as it is used to locate QSettings)\n+    QApplication::setOrganizationName(\"Bitcoin\");\n+    QApplication::setOrganizationDomain(\"bitcoin.org\");\n+    if (GetBoolArg(\"-testnet\", false)) // Separate UI settings for testnet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4833417",
      "id" : 4833417,
      "original_commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "original_position" : 71,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 71,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-23T15:49:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4833417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4837260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4837260"
         }
      },
      "body" : "Are you sure that will work? The reason for looking for testnet arg here\ndirectly is that it is called before Init.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-24T07:33:56Z",
      "diff_hunk" : "@@ -130,6 +172,22 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n+    // Application identification (must be set before OptionsModel is initialized,\n+    // as it is used to locate QSettings)\n+    QApplication::setOrganizationName(\"Bitcoin\");\n+    QApplication::setOrganizationDomain(\"bitcoin.org\");\n+    if (GetBoolArg(\"-testnet\", false)) // Separate UI settings for testnet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4837260",
      "id" : 4837260,
      "original_commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "original_position" : 71,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 71,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-24T07:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4837260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4837604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4837604"
         }
      },
      "body" : "I tried it and it doesn't work, as we are before init here. I think it would be nice, if we could achieve to use ``TestNet()`` with re-ordering the code, but my try doesn't yet do this work ^^. See #2788\r\n\r\nAnyway, I would suggest you merge this pull and we can look into this afterwards.",
      "commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "created_at" : "2013-06-24T08:11:51Z",
      "diff_hunk" : "@@ -130,6 +172,22 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n+    // Application identification (must be set before OptionsModel is initialized,\n+    // as it is used to locate QSettings)\n+    QApplication::setOrganizationName(\"Bitcoin\");\n+    QApplication::setOrganizationDomain(\"bitcoin.org\");\n+    if (GetBoolArg(\"-testnet\", false)) // Separate UI settings for testnet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#discussion_r4837604",
      "id" : 4837604,
      "original_commit_id" : "be77b637fcf5983286382a9b9677fb97b026abe2",
      "original_position" : 71,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 71,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/2670",
      "updated_at" : "2013-06-24T08:11:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4837604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "@laanwj Can we perhaps merge this now :)?",
      "created_at" : "2013-07-13T11:13:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-20918424",
      "id" : 20918424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-07-13T11:13:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/20918424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "ACK - seems to work fine.",
      "created_at" : "2013-07-14T11:36:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/2670#issuecomment-20935122",
      "id" : 20935122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/2670",
      "updated_at" : "2013-07-14T11:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/20935122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
